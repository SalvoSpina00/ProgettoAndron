{"version":3,"sources":["./src/app/pages/ordini/ordini.page.html","./src/app/pages/ordini/ordini.module.ts","./src/app/pages/ordini/ordini.page.scss","./src/app/pages/ordini/ordini.page.ts","./src/app/pages/ordini/ordini-routing.module.ts"],"names":[],"mappings":"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","file":"pages-ordini-ordini-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button autoHide=\\\"false\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>ordini</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  \\n  <ion-list>\\n    \\n    <ion-card style=\\\"background-color:rgb(29, 39, 61)\\\" *ngIf=\\\"data?.length==0\\\">\\n      <ion-card-header>\\n        <ion-card-subtitle>\\n          <div class=\\\"ion-text-center\\\">\\n            Non hai nessun ordine!\\n          </div>\\n        </ion-card-subtitle>\\n        <ion-card-content>\\n          Puoi acquistare oggetti usando gli Andron andando nella sezione Cerco Oggetti disponibile nel menù. \\n        </ion-card-content>\\n      </ion-card-header>\\n    </ion-card>\\n\\n    <ion-card *ngFor=\\\"let o of this.data\\\">\\n      <ion-card-content>\\n    \\n        <ion-card-subtitle>\\n          <div class=\\\"ion-text-center\\\">\\n            Ordine #{{o?.id}}\\n          </div>\\n          \\n        </ion-card-subtitle>\\n        <ion-card-title style=\\\"font-size:20px\\\" class=\\\"ion-text-center\\\">{{ o.nomeProdotto}} x {{o.quantita}}</ion-card-title>\\n        <ion-grid>\\n          <ion-row>\\n            <ion-col size=4>\\n              <div>\\n                <ion-avatar slot=\\\"start\\\" class=\\\"user-avatar\\\">\\n                  <ion-img src=\\\"{{ o.img }}\\\"></ion-img>\\n                </ion-avatar>\\n              </div>\\n            </ion-col>\\n\\n            <ion-col *ngIf=\\\"o.checkOrdine==1 && o.confermato==0\\\">\\n              <div (click)=\\\"popover(-1)\\\" class=\\\"ion-text-center\\\" style=\\\"color: green;\\\">\\n                Ordine evaso! <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n              </div> \\n            </ion-col>\\n\\n            <ion-col *ngIf=\\\"o.confermato==1\\\">\\n              <div (click)=\\\"popover(1)\\\" class=\\\"ion-text-center\\\" style=\\\"color: green;\\\">\\n                Ordine confermato! \\n              </div>\\n            </ion-col>\\n\\n            <ion-col *ngIf=\\\"o.checkOrdine==0\\\">\\n              <div (click)=\\\"popover(0)\\\" class=\\\"ion-text-center\\\" style=\\\"color: red;\\\">\\n                In attesa del check da parte dell'azienda...\\n              </div>\\n            </ion-col>\\n              \\n          </ion-row>\\n          <ion-row *ngIf=\\\"o.checkOrdine==1 && o.confermato==0\\\">\\n            <ion-col>\\n              <div class=\\\"ion-text-center\\\"  style=\\\"color: tomato;\\\" >\\n                Contatti Azienda\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n          <ion-row *ngIf=\\\"o.checkOrdine==1 && o.confermato==0\\\">\\n            <ion-col>\\n              <div  style=\\\"color: tomato;\\\">\\n                Email\\n              </div>\\n            </ion-col>\\n            <ion-col>\\n              <div>\\n                {{o.email}}\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n          <ion-row *ngIf=\\\"o.checkOrdine==1 && o.confermato==0\\\">\\n            <ion-col  style=\\\"color: tomato;\\\">\\n              <div>\\n                Telefono\\n              </div>\\n            </ion-col>\\n            <ion-col>\\n              <div>\\n                {{o.telefono}}\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n          <ion-row *ngIf=\\\"o.checkOrdine==1 && o.confermato==0\\\">\\n          \\n            <ion-col>\\n              <div>\\n                <ion-button size=\\\"small\\\" expand=\\\"block\\\" (click)=\\\"segnala(o,'ordine')\\\">\\n                  Segnala\\n                </ion-button>\\n              </div>\\n            </ion-col>\\n          \\n            <ion-col>\\n              <div>\\n                <ion-button size=\\\"small\\\" expand=\\\"block\\\" (click)=\\\"conferma(o, 'ordine')\\\">\\n                  Conferma\\n                </ion-button>\\n              </div>\\n            </ion-col>\\n          \\n          </ion-row>\\n        </ion-grid>\\n      </ion-card-content>\\n    </ion-card>\\n\\n    <ion-infinite-scroll threshold=\\\"100px\\\" (ionInfinite)=\\\"loadmore($event)\\\">\\n      <ion-infinite-scroll-content loadingSpinner=\\\"bubbles\\\" loadingText=\\\"Caricamento...\\\">\\n      </ion-infinite-scroll-content>\\n    </ion-infinite-scroll>\\n\\n  </ion-list>\\n\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { OrdiniPageRoutingModule } from './ordini-routing.module';\n\nimport { OrdiniPage } from './ordini.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    OrdiniPageRoutingModule\n  ],\n  declarations: [OrdiniPage]\n})\nexport class OrdiniPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJvcmRpbmkucGFnZS5zY3NzIn0= */\";","import { Component} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RequestService } from 'src/app/services/request.service';\nimport { UtilitiesService } from 'src/app/services/utilities.service';\n\n@Component({\n  selector: 'app-ordini',\n  templateUrl: './ordini.page.html',\n  styleUrls: ['./ordini.page.scss'],\n})\n\nexport class OrdiniPage {\n  data: any[]=[];\n  page: number;\n  psize:number;\n\n\n  constructor(private router: Router, private request: RequestService, private utilities: UtilitiesService) {\n    this.page = 0\n    this.psize = 5\n\n    this.getOrdini()\n  }\n\n  loadmore(event) {\n    this.page++\n    this.getOrdini(()=>{event.target.complete()})\n  }\n\n  getOrdini(add=()=>{}){ \n    this.request.get({\n      path:\"/orders/mine\",\n      httpParam:{\n        _page:this.page,\n        _psize:this.psize,\n      },\n      handler:(results) =>{\n        for (const t of results[\"_msg\"]) {\n          this.data.push(t);\n        };\n        add()\n      },\n      error: () =>{\n        this.utilities.alertError({})\n      }\n    })\n  }\n\n  conferma(item:any,tipo:string){\n    this.router.navigate([\"/feedback\", { \"item\": JSON.stringify(item), \"tipo\" : tipo}]);\n  }\n\n  segnala(item:any,tipo:string){\n    if(item.segnalato){\n      this.utilities.simplyAlert({ \n        header:\"Attenzione!\",\n        message:\"Hai già inviato una segnalazione per questo prodotto! Verrai contattato presto da qualcuno del nostro team.\"\n      })\n    }\n    else{\n      this.router.navigate([\"/segnalazione\", { \"item\": JSON.stringify(item), \"tipo\": tipo }]);\n    }\n  }\n\n\n\n  popover(type){\n    let msg = type == 0 ?\n    \"In attesa che l'azienda visualizzi l'ordine da te inviato\" :\n    \"Il tuo ordine è stato evaso, lo riceverai al più presto!\"\n    this.utilities.createPopover(msg)\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OrdiniPage } from './ordini.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OrdiniPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrdiniPageRoutingModule {}\n"],"sourceRoot":"webpack:///"}
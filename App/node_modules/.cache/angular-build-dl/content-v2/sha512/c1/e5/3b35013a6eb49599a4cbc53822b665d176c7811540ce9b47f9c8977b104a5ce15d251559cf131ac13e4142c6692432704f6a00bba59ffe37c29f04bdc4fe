{"version":3,"sources":["webpack:///src/app/pages/home/home.page.scss","webpack:///src/app/pages/home/home.module.ts","webpack:///src/app/pages/home/home.page.html","webpack:///src/app/pages/home/home.page.ts"],"names":["HomePageModule","imports","forChild","path","component","declarations","HomePage","menu","storage","api","alertCtrl","router","get","then","a","utenza","getSaldo","searchOrdini","getBudget","retApiService","subscribe","response","budget","date","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","today","id","create","header","message","buttons","text","role","handler","setCheckOrdine","results","alert","present","getOrdiniImprese","ordini","console","log","errore","info","enable","open","item","tipo","navigate","JSON","stringify","richiestaMia","segnalazioneRichiedente","segnalazioneEsponente","selector","template"],"mappings":"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","file":"pages-home-home-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJob21lLnBhZ2Uuc2NzcyJ9 */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { HomePage } from './home.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: HomePage\n      }\n    ])\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>\\n      Home\\n    </ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button autoHide=\\\"false\\\" style=\\\"color: white\\\"></ion-menu-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content *ngIf=\\\"this.utenza=='utente'\\\">\\n  <h3 class=\\\"ion-text-center\\\">Saldo</h3>\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-card-title>\\n       <div class=\\\"ion-text-center\\\">\\n         {{budget}} TOKEN\\n       </div>\\n      </ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <div class=\\\"ion-text-center\\\">Saldo disponibile al {{today}}.</div>\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <h3 class=\\\"ion-text-center\\\">News</h3>\\n \\n  <ion-list>\\n    <ion-card style=\\\"background-color: black;\\\">\\n      <ion-card-content>\\n        <ion-card-title class=\\\"ion-text-center\\\">\\n          Titolo News...  \\n        </ion-card-title>\\n  \\n          <ion-row>\\n            <ion-col size=\\\"4\\\">\\n              <div>\\n                <ion-avatar slot=\\\"start\\\">\\n                  <img src=\\\"assets/img/andrea.jpg\\\">\\n                </ion-avatar>\\n              </div>\\n            </ion-col>\\n          \\n            <ion-col size=\\\"8\\\">\\n              <div class=\\\"ion-align-items-left\\\">\\n                  Intro news....\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n      </ion-card-content>\\n    </ion-card>\\n\\n    <ion-card style=\\\"background-color: black;\\\">\\n      <ion-card-content>\\n        <ion-card-title class=\\\"ion-text-center\\\">\\n          Titolo News...  \\n        </ion-card-title>\\n  \\n          <ion-row>\\n            <ion-col size=\\\"4\\\">\\n              <div>\\n                <ion-avatar slot=\\\"start\\\">\\n                  <img src=\\\"assets/img/andrea.jpg\\\">\\n                </ion-avatar>\\n              </div>\\n            </ion-col>\\n          \\n            <ion-col size=\\\"8\\\">\\n              <div class=\\\"ion-align-items-left\\\">\\n                  Intro news....\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n      </ion-card-content>\\n    </ion-card>\\n  </ion-list>\\n</ion-content>\\n\\n<ion-content *ngIf=\\\"this.utenza=='impresa'\\\">\\n  <h3 class=\\\"ion-text-center\\\">Ordini da evadere</h3>\\n  <ion-card style=\\\"background-color: rgb(29, 39, 61)\\\" *ngIf=\\\"this.ordini?.length==0\\\">\\n    <ion-card-header>\\n      <ion-card-subtitle>\\n        <div class=\\\"ion-text-center\\\">\\n          Nessuna ordine da evadere!\\n        </div>\\n      </ion-card-subtitle>\\n    </ion-card-header>\\n  </ion-card>\\n  <ion-list>\\n\\n    <ion-card style=\\\"background-color: rgb(29, 39, 61);\\\" *ngFor=\\\"let item of ordini\\\">\\n      <ion-card-header>\\n        <ion-card-subtitle style=\\\"font-size:10px\\\" class=\\\"ion-text-wrap\\\">\\n          <ion-grid>\\n            <ion-row>\\n              <ion-col>\\n                <div class=\\\"ion-text-center\\\">\\n                  #{{item.id}}\\n                </div>\\n              </ion-col>\\n            </ion-row>\\n            <ion-row>\\n              <ion-col>\\n                <div>\\n                  Ordine di:\\n                </div>\\n              </ion-col>\\n              <ion-col size=\\\"8\\\">\\n                <div class=\\\"ion-text-center\\\">\\n                  {{item.nome}} {{item.cognome}}\\n                </div>\\n              </ion-col>\\n            </ion-row>\\n          </ion-grid>\\n      \\n        </ion-card-subtitle>\\n        <ion-card-title color=\\\"black\\\" lines=\\\"none\\\" style=\\\"font-size:14px\\\" class=\\\"ion-text-wrap\\\">{{item.nomeBene}} x {{item.quantita}}\\n        </ion-card-title>\\n      </ion-card-header>\\n\\n      <ion-card-content>\\n        <ion-grid>\\n          <ion-row>\\n            <ion-col>\\n              <div  style=\\\"color: tomato;\\\" class=\\\"ion-text-center\\\">\\n                Contatti acquirente\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n\\n          <ion-row>\\n            <ion-col>\\n              <div  style=\\\"color: tomato;\\\">\\n                Telefono\\n              </div>\\n            </ion-col>\\n\\n            <ion-col>\\n              <div>\\n                {{item.telefono}}\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n\\n          <ion-row>\\n            <ion-col>\\n              <div  style=\\\"color: tomato;\\\">\\n                Email\\n              </div>\\n            </ion-col>\\n          \\n            <ion-col>\\n              <div>\\n                {{item.mail}}\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n\\n          <ion-row>\\n            <ion-col>\\n              <div  style=\\\"color: tomato;\\\">\\n                Via\\n              </div>\\n            </ion-col>\\n          \\n            <ion-col>\\n              <div>\\n                {{item.via}}\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n\\n          <ion-row>\\n            <ion-col>\\n              <div  style=\\\"color: tomato;\\\">\\n               Cap\\n              </div>\\n            </ion-col>\\n          \\n            <ion-col>\\n              <div>\\n                {{item.cap}}\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n\\n\\n          <ion-row>\\n            <ion-col>\\n              <div>\\n                <ion-button size=\\\"small\\\" expand=\\\"block\\\" (click)=\\\"evadiOrdine(item.id)\\\">\\n                  Evadi Ordine\\n                </ion-button>\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n      </ion-card-content>\\n\\n    </ion-card>\\n  </ion-list>\\n</ion-content>\\n\";","import { Component } from '@angular/core';\nimport { RequestLogin } from '../../models/request-login';\nimport { ApiService } from '../../services/api-service.service';\nimport { MenuController, AlertController } from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage {\n\n  msg: string;\n  myRichieste: any\n  myRichiesteTODO: any\n  utenza:string;\n  \n\n  budget: number ;\n  date: Date\n  today: string;\n  dd : string;\n  mm : string;\n  yyyy: number;\n  nome: string;\n  page: number;\n  psize: number;\n\n\n\n  ordini:any\n\n  constructor(private menu: MenuController, private storage: Storage, private api: ApiService, private alertCtrl: AlertController, private router : Router) {}\n\n\n  ionViewWillEnter() {\n    this.storage.get(\"utenza\").then((a) => {\n      this.utenza = a;\n      if(this.utenza==\"utente\"){\n        this.getSaldo()\n      }\n      else{\n        this.searchOrdini();\n      }\n    })\n \n  }\n\n  getSaldo(){\n    // chiamata get\n    this.api.getBudget().then(retApiService => {\n      retApiService.subscribe(response => {\n        this.budget=response[\"_msg\"].budget;\n        this.date = new Date();\n        this.dd = String(this.date.getDate()).padStart(2, '0');\n        this.mm = String(this.date.getMonth() + 1).padStart(2, '0'); //January is 0!\n        this.yyyy = this.date.getFullYear();\n        this.today = this.mm + '/' + this.dd + '/' + this.yyyy;\n      });\n    });\n\n  }\n\n  async evadiOrdine(id:number){\n    const alert = await this.alertCtrl.create({\n      header: \"Attenzione\",\n      message: \"Vuoi davvero confermare l'evasione dell'ordine? l'operazione non e' annullabile\",\n      buttons: [\n        {\n          text: 'No',\n          role: 'cancel',\n        },\n        {\n          text: 'Si',\n          handler: () => {\n            this.api.setCheckOrdine(id).then(retApiService => {\n              retApiService.subscribe(results => {\n                this.alertCtrl.create({\n                  header: \"Operazione effettuata correttamente.\",\n                  buttons: [\n                    {\n                      text: 'OK',\n                      role: 'cancel',//! con role cancel anche se non viene premuto viene eseguito l'handler\n                      handler: () => {\n                        this.searchOrdini()\n                      }\n                    }]\n                }).then(alert => alert.present());\n              });\n            })\n          }\n        }\n      ]\n    })\n    await alert.present();\n  }\n\n\n/*\n  async setStato(id:number ,stato:string){\n    if (stato == \"rifiutato\") {\n      this.msg = \"Vuoi davvero rifiutare questo servizio?\"\n    }\n    if (stato == \"accettato\") {\n      this.msg = \"Vuoi davvero accettare questo servizio?\"\n    }\n    if (stato == \"eliminato\") {\n      this.msg = \"Vuoi davvero accettare questo servizio? Non sara' possibile annullare questa operazione.\"\n    }\n    if (stato == \"eseguito\") {\n      this.msg = \"Hai davvero eseguito questo servizio?\"\n    }\n    if (stato == \"concluso\") {\n      this.msg = \"Vuoi concludere questo servizio?\"\n    }\n    \n    const alert = await this.alertCtrl.create({\n      header: this.msg,\n      buttons: [\n        {\n          text: 'No',\n          role: 'cancel',\n        },\n        {\n          text: 'Si',\n          handler: () => { \n            this.api.setRichiesta(id, stato).then(retApiService => {\n              retApiService.subscribe(results => {\n                this.alertCtrl.create({\n                  header: \"Operazione effettuata correttamente.\",\n                  buttons: [\n                    {\n                      text: 'OK',\n                      role: 'cancel',//! con role cancel anche se non viene premuto viene eseguito l'handler\n                      handler: () => {\n                        this.searchmyRichiesteTODO()\n                        this.searchmyRichieste()\n                      }\n                    }]\n                }).then(alert => alert.present());\n              });\n            })\n          }\n        }\n      ]\n    })\n    await alert.present();\n    \n  }*/\n\n  \n\n  searchOrdini(){\n    this.api.getOrdiniImprese().then(retApiService => {\n      retApiService.subscribe(response => {\n        //console.info(response);\n        this.ordini = response[\"_msg\"];\n        console.log(this.ordini)\n      },\n        errore => {\n          console.info(errore[\"error\"]);\n        })\n    });\n  }\n\n  openFirst() {\n    this.menu.enable(true, 'first');\n    this.menu.open('first');\n  }\n\n  openEnd() {\n    this.menu.open('end');\n  }\n\n  openCustom() {\n    this.menu.enable(true, 'custom');\n    this.menu.open('custom');\n  }\n\n  conferma(item: any, tipo: string) {\n    this.router.navigate([\"/feedback\", { \"item\": JSON.stringify(item), \"tipo\": tipo }]);\n  }\n\n\n  async segnala(item: any, tipo: string, richiestaMia:boolean ) {\n    if (richiestaMia){\n      if (item.segnalazioneRichiedente) {\n        const alert = await this.alertCtrl.create({\n          header: \"Attezione\",\n          message: \"Hai gia' inviato una segnalazione per questo prodotto! Verrai contattato presto da qualcuno del nostro team.\",\n          buttons: [\n            {\n              text: 'No',\n              role: 'cancel',\n            },\n\n          ]\n        })\n        await alert.present();\n      }\n      else {\n        this.router.navigate([\"/segnalazione\", { \"item\": JSON.stringify(item), \"tipo\": tipo }]);\n      }\n    }\n    else{\n      if (item.segnalazioneEsponente) {\n        const alert = await this.alertCtrl.create({\n          header: \"Attezione\",\n          message: \"Hai gia' inviato una segnalazione per questo prodotto! Verrai contattato presto da qualcuno del nostro team.\",\n          buttons: [\n            {\n              text: 'No',\n              role: 'cancel',\n            },\n\n          ]\n        })\n        await alert.present();\n      }\n      else {\n        this.router.navigate([\"/segnalazione\", { \"item\": JSON.stringify(item), \"tipo\": tipo }]);\n      }\n    }\n    \n    \n  }\n}\n"]}
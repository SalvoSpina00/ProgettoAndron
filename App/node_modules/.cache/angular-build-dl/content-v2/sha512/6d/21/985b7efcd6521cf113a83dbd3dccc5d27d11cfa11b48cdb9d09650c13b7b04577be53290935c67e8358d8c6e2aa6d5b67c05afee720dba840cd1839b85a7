{"version":3,"sources":["webpack:///src/app/pages/richiesta/richiesta.module.ts","webpack:///src/app/pages/richiesta/richiesta.page.ts","webpack:///src/app/pages/richiesta/richiesta.page.scss","webpack:///src/app/pages/richiesta/richiesta-routing.module.ts","webpack:///src/app/pages/richiesta/richiesta.page.html"],"names":["RichiestaPageModule","imports","declarations","RichiestaPage","route","router","request","utilities","servizio","errore","idServizio","JSON","parse","snapshot","paramMap","get","getServizio","path","handler","results","console","log","error","simplyAlert","operation","navigate","header","message","id","tipo","nome","dateSent","currentDate","Date","Math","floor","UTC","getFullYear","getMonth","getDate","msg","trim","date","length","isNaN","ore","calculateDiff","preavviso","alertError","response","saldo","andron","confirmAlert","handlerYes","post","data","_msg","_data","_ore","selector","template","routes","component","RichiestaPageRoutingModule","forChild","exports"],"mappings":"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","file":"pages-richiesta-richiesta-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RichiestaPageRoutingModule } from './richiesta-routing.module';\n\nimport { RichiestaPage } from './richiesta.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RichiestaPageRoutingModule\n  ],\n  declarations: [RichiestaPage]\n})\nexport class RichiestaPageModule {}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { RequestService } from 'src/app/services/request.service';\nimport { UtilitiesService } from 'src/app/services/utilities.service';\n\n@Component({\n  selector: 'app-richiesta',\n  templateUrl: './richiesta.page.html',\n  styleUrls: ['./richiesta.page.scss'],\n})\nexport class RichiestaPage{\n  \n  idServizio: number;\n  servizio= null;\n\n  msg: string;\n  date: Date;\n  ore: number;\n  errore:string = \"\";\n\n  constructor(private route: ActivatedRoute, private router:Router, private request : RequestService, private utilities : UtilitiesService) {\n    this.idServizio = JSON.parse(this.route.snapshot.paramMap.get(\"id\"));\n    this.getServizio()\n  }\n\n  getServizio() {\n    this.request.get({\n      path:\"/services/\"+this.idServizio,\n      handler:(results)=>{\n        this.servizio = results[\"_msg\"];\n        console.log(this.servizio)\n      },\n      error:()=>{\n        this.utilities.simplyAlert({\n          operation:()=>{this.router.navigate([\"/home\"])},\n          header:\"Attenzione\",\n          message:\"Si è verificato un errore nell'accesso alla pagina, riprova più tardi.\"\n        })\n      }\n    })\n  }\n\n  feedback(id: string, tipo: string, nome: string) {\n    this.router.navigate([\"/infofeedback\", { \"id\": id, \"tipo\": tipo, \"nome\": nome }]);\n  }\n\n  calculateDiff(dateSent){\n    let currentDate = new Date();\n    dateSent = new Date(dateSent);\n\n    return Math.floor((Date.UTC(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate()) - Date.UTC(dateSent.getFullYear(), dateSent.getMonth(), dateSent.getDate()) ) /(1000 * 60 * 60 * 24));\n  }\n\n  richiesta(){\n    this.msg= this.msg ?? \"\";\n    if(this.msg.trim()===\"\" || this.date == null){\n      this.errore=\"Compila adeguatamente i campi\"\n      return\n    }\n\n    if(this.msg.length<5 || this.msg.length>500){\n      this.errore=\"Minimo 5 caratteri, massimo 500\"\n      return\n    }\n\n    if (isNaN(this.ore) || this.ore<0 || this.ore>this.servizio.ore) {\n      this.errore = \"Il numero di ore massime dedicabili dev'essere un numero positivo (massimo \"+this.servizio.ore +\" ore)\"\n      return\n    }\n    if (-1*this.calculateDiff(this.date)<this.servizio.preavviso){\n      this.errore = \"Non puoi richiedere il servizio per la data selezionata (Giorni minimi di preavviso:\"+this.servizio.preavviso+\")\" \n      return\n    }\n    let handler = () =>{\n      this.router.navigate([\"/home\"]);\n    }\n\n    this.request.get({\n      path:\"/budget\",\n      error:()=>{\n        this.utilities.alertError({})\n      },\n      handler:(response)=>{\n        let saldo = response[\"_msg\"].andron;\n\n        if (saldo < this.servizio.andron*this.ore){\n          this.utilities.simplyAlert({\n            header:\"Attenzione\",\n            message:\"Saldo insufficiente.\"\n          })\n        }\n        else{\n\n          this.utilities.confirmAlert({\n            header:\"Attenzione\",\n            message:\"Una volta effettuata la richiesta saranno rimossi preventivamente \"+ this.ore *this.servizio.andron  +\" Andron. Verranno restituiti in caso la richiesta non dovesse andare a buon fine.\",\n            \n            handlerYes:()=>{\n              this.request.post({\n                path:\"/services/\"+this.servizio.id,\n                data:{\n                  _msg:this.msg,\n                  _data:this.date,\n                  _ore:this.ore\n                },\n                handler:()=>{\n                  this.utilities.simplyAlert({\n                    operation:handler,\n                    header:\"Operazione effettuata\",\n                    message:\"La richiesta è stata inviata correttamente\"\n                  })\n                },\n                error:()=>{\n                  this.utilities.alertError({handler:handler})\n                }\n              })\n            }\n\n          })\n        }\n      }\n    })\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyaWNoaWVzdGEucGFnZS5zY3NzIn0= */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RichiestaPage } from './richiesta.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RichiestaPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RichiestaPageRoutingModule {}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Richiesta</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-card>\\n    <ion-card-content>\\n    <ion-card-subtitle>\\n      <ion-row>\\n        <ion-col>\\n          <div class=\\\"ion-text-center\\\">\\n            Fornito da:\\n          </div>\\n        </ion-col>\\n        <ion-col class=\\\"ion-text-center\\\">\\n          <div (click)=\\\"feedback(servizio?.utente,'utente',servizio?.nomeUtente + ' ' + servizio?.cognomeUtente)\\\">\\n            {{servizio?.nomeUtente}} {{servizio?.cognomeUtente}}\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n    </ion-card-subtitle>\\n    <ion-card-title>\\n      <div class=\\\"ion-text-center\\\">\\n        {{servizio?.nome}}\\n      </div>\\n    </ion-card-title>\\n    <ion-grid>\\n      <ion-row>\\n        {{servizio?.descrizione}}\\n      </ion-row>\\n      \\n      <ion-row>\\n        <ion-col size=\\\"8\\\">\\n          Prezzo per ogni ora:\\n        </ion-col>\\n\\n        <ion-col>\\n            {{servizio?.andron}}\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col size=\\\"8\\\">\\n          Tempo massimo dedicabile (h): \\n        </ion-col>\\n\\n        <ion-col>\\n            {{servizio?.ore}}\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col size=\\\"8\\\">\\n            Giorni minimi di preavviso:\\n        </ion-col>\\n\\n        <ion-col>\\n            {{servizio?.preavviso}}\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-list>\\n    <ion-item>\\n      <ion-textarea placeholder=\\\"Messaggio...\\\"  maxlength=\\\"200\\\" [(ngModel)]=\\\"msg\\\"></ion-textarea>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label>Data del servizio</ion-label>\\n      <ion-datetime displayFormat=\\\"MMM DD, YYYY HH:mm\\\" min=\\\"2020\\\" max=\\\"2025\\\" [(ngModel)]=\\\"date\\\"></ion-datetime>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-input placeholder=\\\"Ore di servizio richieste\\\" type=\\\"number\\\"  min=0 max=5 [(ngModel)]=\\\"ore\\\"></ion-input>\\n    </ion-item>\\n  </ion-list>\\n\\n  <ion-button id=\\\"myButtonYellow\\\" expand=\\\"full\\\" (click)=\\\"richiesta()\\\">Richiedi Servizio</ion-button>\\n\\n  <p style=\\\"color:red\\\">{{ this.errore }}</p>\\n</ion-content>\\n\\n\";"]}
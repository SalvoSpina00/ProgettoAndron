{"version":3,"sources":["webpack:///src/app/pages/feedback/feedback-routing.module.ts","webpack:///src/app/pages/feedback/feedback.page.html","webpack:///src/app/pages/feedback/feedback.page.scss","webpack:///src/app/pages/feedback/feedback.module.ts","webpack:///src/app/pages/feedback/feedback.page.ts","webpack:///src/app/rating/rating.component.ts","webpack:///src/app/rating/rating.component.html"],"names":["routes","path","component","FeedbackPageRoutingModule","imports","forChild","exports","FeedbackPageModule","declarations","FeedbackPage","route","api","alertCtrl","navCtrl","data","JSON","parse","snapshot","paramMap","get","tipo","console","log","id","msg","valutazione","trim","errore","create","header","buttons","text","role","handler","confermaServizio","nodoEsponente","then","retApiService","subscribe","results","navigateForward","alert","present","dati","confermaOrdine","nodoImpresa","selector","template","COLORS","RatingComponent","ratingChange","index","rating","emit","isAboveRating","GREY","RED","YELLOW","GREEN"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,yBAAyB;AAAA;AAAA,O;;AAAzBA,+BAAyB,6DAJrC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIqC,GAAzBH,yBAAyB,CAAzB;;;;;;;;;;;;;;;;AChBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCmBFI,kBAAkB;AAAA;AAAA,O;;AAAlBA,wBAAkB,6DAT9B,+DAAS;AACRH,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,kFAJO,CADD;AAORI,oBAAY,EAAE,CAAC,2DAAD,EAAc,wEAAd;AAPN,OAAT,CAS8B,GAAlBD,kBAAkB,CAAlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCPAE,YAAY;AAOvB,8BAAoBC,KAApB,EAAmDC,GAAnD,EAA4EC,SAA5E,EAA+GC,OAA/G,EAAuI;AAAA;;AAAnH,eAAAH,KAAA,GAAAA,KAAA;AAA+B,eAAAC,GAAA,GAAAA,GAAA;AAAyB,eAAAC,SAAA,GAAAA,SAAA;AAAmC,eAAAC,OAAA,GAAAA,OAAA;AAC7G,eAAKC,IAAL,GAAYC,IAAI,CAACC,KAAL,CAAW,KAAKN,KAAL,CAAWO,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiC,MAAjC,CAAX,CAAZ;AACA,eAAKC,IAAL,GAAY,KAAKV,KAAL,CAAWO,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiC,MAAjC,CAAZ;AACAE,iBAAO,CAACC,GAAR,CAAY,KAAKR,IAAjB,EAAsB,KAAKM,IAA3B;AACD,SAXsB,CAavB;;;AAbuB;AAAA;AAAA,2CAcAG,EAdA,EAcY;;;;;;;;;4BAE7B,KAAKC,GAAL,IAAY,KAAKC,W;;;;;4BACf,KAAKD,GAAL,CAASE,IAAT,MAAmB,E;;;;;AACrB,2BAAKC,MAAL,GAAc,+BAAd;;;;;AAGY,6BAAM,KAAKf,SAAL,CAAegB,MAAf,CAAsB;AACxCC,8BAAM,EAAE,kCADgC;AAExCC,+BAAO,EAAE,CACP;AACEC,8BAAI,EAAE,IADR;AAEEC,8BAAI,EAAE;AAFR,yBADO,EAKP;AACED,8BAAI,EAAE,IADR;AAEEE,iCAAO,EAAE,mBAAM;AACb,iCAAI,CAACtB,GAAL,CAASuB,gBAAT,CAA0B,KAAI,CAACpB,IAAL,CAAUS,EAApC,EAAuC,KAAI,CAACT,IAAL,CAAUqB,aAAjD,EAA+D,KAAI,CAACX,GAApE,EAAwE,KAAI,CAACC,WAA7E,EAA0FW,IAA1F,CAA+F,UAAAC,aAAa,EAAI;AAC9GA,2CAAa,CAACC,SAAd,CAAwB,UAAAC,OAAO,EAAI;AACjC,qCAAI,CAAC3B,SAAL,CAAegB,MAAf,CAAsB;AACpBC,wCAAM,EAAE,sCADY;AAEpBC,yCAAO,EAAE,CACP;AACEC,wCAAI,EAAE,IADR;AAEEC,wCAAI,EAAE,QAFR;AAGEC,2CAAO,EAAE,mBAAM;AACb,2CAAI,CAACpB,OAAL,CAAa2B,eAAb,CAA6B,OAA7B;AACD;AALH,mCADO;AAFW,iCAAtB,EAUGJ,IAVH,CAUQ,UAAAK,KAAK;AAAA,yCAAIA,KAAK,CAACC,OAAN,EAAJ;AAAA,iCAVb;AAWD,+BAZD;AAaD,6BAdD;AAeD;AAlBH,yBALO;AAF+B,uBAAtB,CAAN;;;AAARD,2B;;AA6BN,6BAAMA,KAAK,CAACC,OAAN,EAAN;;;;;;;AAGA,2BAAKf,MAAL,GAAY,uBAAZ;;;;;;;;;AAEH;AAvDsB;AAAA;AAAA,yCA0DFgB,IA1DE,EA0DM;;;;;;;;;4BAEvB,KAAKnB,GAAL,IAAY,KAAKC,W;;;;;4BACf,KAAKD,GAAL,CAASE,IAAT,MAAmB,E;;;;;AACrB,2BAAKC,MAAL,GAAc,+BAAd;;;;;AAGY,6BAAM,KAAKf,SAAL,CAAegB,MAAf,CAAsB;AACxCC,8BAAM,EAAE,gCADgC;AAExCC,+BAAO,EAAE,CACP;AACEC,8BAAI,EAAE,IADR;AAEEC,8BAAI,EAAE;AAFR,yBADO,EAKP;AACED,8BAAI,EAAE,IADR;AAEEE,iCAAO,EAAE,mBAAM;AACb,kCAAI,CAACtB,GAAL,CAASiC,cAAT,CAAwB,MAAI,CAAC9B,IAAL,CAAUS,EAAlC,EAAqC,MAAI,CAACT,IAAL,CAAU+B,WAA/C,EAA2D,MAAI,CAACrB,GAAhE,EAAoE,MAAI,CAACC,WAAzE,EAAsFW,IAAtF,CAA2F,UAAAC,aAAa,EAAI;AAC1GA,2CAAa,CAACC,SAAd,CAAwB,UAAAC,OAAO,EAAI;AACjC,sCAAI,CAAC3B,SAAL,CAAegB,MAAf,CAAsB;AACpBC,wCAAM,EAAE,sCADY;AAEpBC,yCAAO,EAAE,CACP;AACEC,wCAAI,EAAE,IADR;AAEEC,wCAAI,EAAE,QAFR;AAGEC,2CAAO,EAAE,mBAAM;AACb,4CAAI,CAACpB,OAAL,CAAa2B,eAAb,CAA6B,OAA7B;AACD;AALH,mCADO;AAFW,iCAAtB,EAUGJ,IAVH,CAUQ,UAAAK,KAAK;AAAA,yCAAIA,KAAK,CAACC,OAAN,EAAJ;AAAA,iCAVb;AAWD,+BAZD;AAaD,6BAdD;AAeD;AAlBH,yBALO;AAF+B,uBAAtB,CAAN;;;AAARD,2B;;AA6BN,6BAAMA,KAAK,CAACC,OAAN,EAAN;;;;;;;AAGA,2BAAKf,MAAL,GAAY,wBAAZ;;;;;;;;;AAEH;AAnGsB;AAAA;AAAA,qCAqGZ,CACV;AAtGsB;;AAAA;AAAA,S;;;;gBAXhB;;gBACA;;gBACA;;gBAAiB;;;;AASblB,kBAAY,6DANxB,gEAAU;AACTqC,gBAAQ,EAAE,cADD;AAETC,gBAAQ,EAAR,sEAFS;;AAAA,OAAV,CAMwB,E,+EAOI,8D,EAA6B,+E,EAA+B,8D,EAAiC,4D,EAPjG,GAAZtC,YAAY,CAAZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRb,UAAKuC,MAAL;;AAAA,iBAAKA,MAAL,EAAW;AACT;AACA;AACA;AACA;AACD,OALD,EAAKA,MAAM,KAANA,MAAM,MAAX;;UAaaC,eAAe;AAM1B,mCAAc;AAAA;;AAHJ,eAAAC,YAAA,GAAqC,IAAI,0DAAJ,EAArC;AAGO;;AANS;AAAA;AAAA,+BAUrBC,KAVqB,EAUN;AAClB,iBAAKC,MAAL,GAAYD,KAAZ;AACA,iBAAKD,YAAL,CAAkBG,IAAlB,CAAuB,KAAKD,MAA5B;AACD;AAbyB;AAAA;AAAA,mCAejBD,KAfiB,EAeF;AACtB;;;;;;;;AASD,gBAAG,KAAKG,aAAL,CAAmBH,KAAnB,CAAH,EAA6B;AAC3B,qBAAOH,MAAM,CAACO,IAAd;AACD;;AACD,oBAAQ,KAAKH,MAAb;AACE,mBAAK,CAAL;AACA,mBAAK,CAAL;AACE,uBAAOJ,MAAM,CAACQ,GAAd;;AACF,mBAAK,CAAL;AACE,uBAAOR,MAAM,CAACS,MAAd;;AACF,mBAAK,CAAL;AACA,mBAAK,CAAL;AACE,uBAAOT,MAAM,CAACU,KAAd;;AACF;AACE,uBAAOV,MAAM,CAACO,IAAd;AAVJ;AAYA;AAxCyB;AAAA;AAAA,wCA0CZJ,KA1CY,EA0CA;AACxB,mBAAOA,KAAK,GAAC,KAAKC,MAAlB;AACD;AA5CyB;;AAAA;AAAA,S;;;;;;;;gBACzB;;;gBAEA;;;AAHUH,qBAAe,6DAN3B,gEAAU;AACTH,gBAAQ,EAAE,QADD;AAETC,gBAAQ,EAAR;AAFS,OAAV,CAM2B,E,iFAAA,GAAfE,eAAe,CAAf;;;;;;;;;;;;;;;;ACjBb;AAAe;;;AAAA","file":"pages-feedback-feedback-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FeedbackPage } from './feedback.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FeedbackPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FeedbackPageRoutingModule {}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Conferma</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content *ngIf=\\\"this.tipo=='ordine'\\\">\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-card-title>\\n        <div class=\\\"ion-text-center\\\">\\n          Feedback\\n        </div>\\n      </ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-grid>\\n        <ion-row> \\n          <div>\\n            Prima di confermare l'arrivo, inserisci un feedback su questo ordine! Facci sapere come ti sei trovato e cosa pensi!\\n          </div>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-list>\\n    <ion-item>\\n      <ion-textarea placeholder=\\\"Messaggio...\\\"  maxlength=\\\"400\\\" [(ngModel)]=\\\"msg\\\"></ion-textarea>\\n    </ion-item>\\n    <ion-item>\\n      <ion-col text-center>\\n        <rating [(rating)]=\\\"valutazione\\\"></rating>\\n      </ion-col>\\n    </ion-item>\\n  </ion-list>\\n  \\n  <p>{{this.errore}}</p>\\n  <ion-button size=\\\"small\\\" expand=\\\"block\\\" (click)=\\\"confermaOrdine(this.data)\\\">\\n    Conferma\\n  </ion-button>\\n</ion-content>\\n\\n<ion-content *ngIf=\\\"this.tipo=='servizio'\\\">\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-card-title>\\n        <div class=\\\"ion-text-center\\\">\\n          Feedback\\n        </div>\\n      </ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-grid>\\n        <ion-row>\\n          <div>\\n            Prima di confermare di aver ricevuto il servizio, lascia un messaggio per recensire l'utente che l'ha offerto! Inserisci anche tua valutazione!  \\n          </div>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-card-content>\\n  </ion-card>\\n \\n  <ion-list>\\n    <ion-item>\\n      <ion-textarea placeholder=\\\"Messaggio...\\\"  maxlength=\\\"400\\\"[(ngModel)]=\\\"msg\\\"></ion-textarea>\\n    </ion-item>\\n    <ion-item>\\n      <ion-col text-center>\\n        <rating [(rating)]=\\\"valutazione\\\"></rating>\\n      </ion-col>\\n    </ion-item>\\n  </ion-list>\\n  <p>{{this.errore}}</p>\\n  <ion-button size=\\\"small\\\" expand=\\\"block\\\" (click)=\\\"servizioEseguito(this.data.id)\\\">\\n    Conferma\\n  </ion-button>\\n</ion-content>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJmZWVkYmFjay5wYWdlLnNjc3MifQ== */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FeedbackPageRoutingModule } from './feedback-routing.module';\nimport {RatingComponent} from '../../rating/rating.component'\nimport { FeedbackPage } from './feedback.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    FeedbackPageRoutingModule\n  ],\n  declarations: [FeedbackPage,RatingComponent]\n})\nexport class FeedbackPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ApiService } from 'src/app/services/api-service.service';\nimport { AlertController, NavController } from '@ionic/angular';\n\n\n@Component({\n  selector: 'app-feedback',\n  templateUrl: './feedback.page.html',\n  styleUrls: ['./feedback.page.scss'],\n})\n\nexport class FeedbackPage implements OnInit {\n  tipo:string \n  data:any\n  msg:string;\n  valutazione: number;\n  errore:string;\n\n  constructor(private route: ActivatedRoute, private api: ApiService, private alertCtrl: AlertController,private navCtrl: NavController) { \n    this.data = JSON.parse(this.route.snapshot.paramMap.get(\"item\"));\n    this.tipo = this.route.snapshot.paramMap.get(\"tipo\");\n    console.log(this.data,this.tipo)\n  }\n\n  //! SPOSTA SU FEEDBACK\n  async servizioEseguito(id: number) {\n    \n    if (this.msg && this.valutazione){\n      if (this.msg.trim() == '') {\n        this.errore = \"Compila adeguatamente i campi\"\n        return\n      }\n      const alert = await this.alertCtrl.create({\n        header: \"Vuoi confermare questo servizio?\",\n        buttons: [\n          {\n            text: 'No',\n            role: 'cancel',\n          },\n          {\n            text: 'Si',\n            handler: () => {\n              this.api.confermaServizio(this.data.id,this.data.nodoEsponente,this.msg,this.valutazione).then(retApiService => {\n                retApiService.subscribe(results => {\n                  this.alertCtrl.create({\n                    header: \"Operazione effettuata correttamente.\",\n                    buttons: [\n                      {\n                        text: 'OK',\n                        role: 'cancel',\n                        handler: () => {\n                          this.navCtrl.navigateForward(\"/home\");\n                        }\n                      }]\n                  }).then(alert => alert.present());\n                });\n              })\n            }\n          }\n        ]\n      })\n      await alert.present();\n    }\n    else{\n      this.errore=\"Compila tutti i campi\"\n    }\n  }\n\n\n  async confermaOrdine(dati:any){\n    \n    if (this.msg && this.valutazione) {\n      if (this.msg.trim() == '') {\n        this.errore = \"Compila adeguatamente i campi\"\n        return\n      }\n      const alert = await this.alertCtrl.create({\n        header: \"Vuoi confermare questo ordine?\",\n        buttons: [\n          {\n            text: 'No',\n            role: 'cancel',\n          },\n          {\n            text: 'Si',\n            handler: () => {\n              this.api.confermaOrdine(this.data.id,this.data.nodoImpresa,this.msg,this.valutazione).then(retApiService => {\n                retApiService.subscribe(results => {\n                  this.alertCtrl.create({\n                    header: \"Operazione effettuata correttamente.\",\n                    buttons: [\n                      {\n                        text: 'OK',\n                        role: 'cancel',\n                        handler: () => {\n                          this.navCtrl.navigateForward(\"/home\");\n                        }\n                      }]\n                  }).then(alert => alert.present());\n                });\n              })\n            }\n          }\n        ]\n      })\n      await alert.present();\n    }\n    else{\n      this.errore=\"Compila tutti i campi.\"\n    }\n  }\n\n  ngOnInit() {\n  }\n\n}\n","\nimport { Component, Input, EventEmitter, Output } from \"@angular/core\";\n\n\nenum COLORS {\n  GREY = \"#E0E0E0\",\n  GREEN = \"#76FF03\",\n  YELLOW = \"#FFCA28\",\n  RED = \"#DD2C00\"\n}\n\n@Component({\n  selector: \"rating\",\n  templateUrl: \"rating.component.html\"\n})\n\n\nexport class RatingComponent {\n  @Input() rating: number;\n\n  @Output() ratingChange: EventEmitter<number> = new EventEmitter();;\n\n\n  constructor() { }\n\n  \n\n  rate(index: number) {\n    this.rating=index;\n    this.ratingChange.emit(this.rating);\n  }\n\n  getColor(index: number) {\n    /* function to return the color of a star based on what\n     index it is. All stars greater than the index are assigned\n     a grey color , while those equal or less than the rating are\n     assigned a color depending on the rating. Using the following criteria:\n  \n          1-2 stars: red\n          3 stars  : yellow\n          4-5 stars: green \n    */\n   if(this.isAboveRating(index)){\n     return COLORS.GREY;\n   }\n   switch( this.rating){\n     case 1:\n     case 2:\n       return COLORS.RED;\n     case 3:\n       return COLORS.YELLOW;\n     case 4:\n     case 5:\n       return COLORS.GREEN;\n     default:\n       return COLORS.GREY\n   }\n  }\n\n  isAboveRating(index:number): boolean{\n    return index>this.rating\n  }\n\n\n}","export default \"<div>\\n  <ion-icon size=\\\"large\\\" name=\\\"star\\\" *ngFor=\\\"let num of [1,2,3,4,5]\\\"\\n    (click)=\\\"rate(num)\\\" [ngStyle]=\\\"{'color':getColor(num)}\\\">\\n  </ion-icon>\\n</div>\\n\\n\";"]}
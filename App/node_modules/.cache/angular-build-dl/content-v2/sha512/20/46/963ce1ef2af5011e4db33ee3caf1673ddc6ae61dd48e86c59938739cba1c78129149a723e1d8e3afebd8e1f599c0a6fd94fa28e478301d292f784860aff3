{"version":3,"sources":["webpack:///src/app/pages/prodotti/prodotti.module.ts","webpack:///src/app/pages/prodotti/prodotti.page.html","webpack:///src/app/pages/prodotti/prodotti.page.ts","webpack:///src/app/pages/prodotti/prodotti-routing.module.ts","webpack:///src/app/pages/prodotti/prodotti.page.scss"],"names":["ProdottiPageModule","imports","declarations","ProdottiPage","navCtrl","menuCtrl","modalCtrl","toastCtrl","apiService","alertController","upperPrice","lowerPrice","initializeItems","id","create","header","message","inputs","name","type","placeholder","buttons","text","role","handler","data","quantita","parseInt","addBeneQuantita","then","Res","subscribe","next","simplyAlert","error","alert","present","getMyBeni","retApiService","result","forEach","element","img","products","idProd","confirmAlert","deleteBene","delRes","res","navigateForward","msg","createPopover","selector","template","routes","path","component","ProdottiPageRoutingModule","forChild","exports"],"mappings":"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","file":"pages-prodotti-prodotti-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProdottiPageRoutingModule } from './prodotti-routing.module';\n\nimport { ProdottiPage } from './prodotti.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ProdottiPageRoutingModule\n  ],\n  declarations: [ProdottiPage]\n})\nexport class ProdottiPageModule {}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>prodotti</ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button autoHide=\\\"false\\\"></ion-menu-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <ion-list>\\n\\n      <ion-card style=\\\"background-color:rgb(29, 39, 61)\\\" *ngIf=\\\"products?.length==0\\\">\\n        <ion-card-header>\\n          <ion-card-subtitle>\\n            <div class=\\\"ion-text-center\\\">\\n              Non hai inserito ancora nessun prodotto!\\n            </div>\\n          </ion-card-subtitle>\\n          <ion-card-content>\\n            Premi il pulsante con il simbolo + per inserire un prodotto.\\n          </ion-card-content>\\n        </ion-card-header>\\n      </ion-card>\\n\\n      <ion-card style=\\\"background-color: black;\\\" *ngFor=\\\"let p of products\\\">\\n        <ion-card-content>\\n          <ion-card-title>\\n              <div class=\\\"ion-text-center\\\">\\n                {{ p.nome }}\\n              </div>\\n            </ion-card-title>\\n\\n            <ion-img id=\\\"imgpreview\\\" src=\\\"{{ p.img }}\\\"></ion-img>\\n\\n            <ion-row>\\n                  {{ p.descrizione }}\\n            </ion-row>\\n          \\n        <ion-row>\\n          <ion-col size=\\\"5\\\" style=\\\"color: tomato;\\\">\\n            Prezzo:\\n          </ion-col>\\n          <ion-col>\\n            <div class=\\\"ion-text-center\\\">\\n              {{p.prezzo}} TOKEN\\n            </div>  \\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col size=\\\"5\\\"  style=\\\"color: tomato;\\\">\\n            Quantita:\\n          </ion-col>\\n          <ion-col *ngIf=\\\"p.quantita>0\\\">\\n            <div class=\\\"ion-text-center\\\">\\n              {{p.quantita}}\\n            </div>\\n          </ion-col>\\n          <ion-col *ngIf=\\\"p.quantita==0\\\">\\n            <div class=\\\"ion-text-center\\\" style=\\\"color: red;\\\">\\n              ESAURITO\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col>\\n            <div class=\\\"ion-text-center\\\">\\n              Stato\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col class=\\\"ion-text-center\\\">\\n            <ion-text style=\\\"color: red;\\\" *ngIf=\\\"p.accettato==0 && p.rifiutato==1\\\">Il prodotto è stato rifiutato, eliminalo per non vederlo più tra quelli inseriti </ion-text>\\n            <ion-text (click)=\\\"popover(0)\\\" style=\\\"color: red;\\\" *ngIf=\\\"p.accettato==0 && p.rifiutato==0\\\">In attesa di accettazione...  <ion-icon name=\\\"help-circle-outline\\\" (click)=\\\"popover(0)\\\"></ion-icon></ion-text>\\n            <ion-text (click)=\\\"popover(1)\\\" style=\\\"color: green;\\\" *ngIf=\\\"p.accettato==1 && p.rifiutato==0\\\">Disponibile Online!  <ion-icon name=\\\"help-circle-outline\\\" (click)=\\\"popover(1)\\\"></ion-icon></ion-text> \\n            \\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col *ngIf=\\\"p.accettato==1\\\">\\n            <ion-button (click)=\\\"aggiungi(p.id)\\\">\\n             Aggiungi\\n            </ion-button>\\n          </ion-col>\\n       \\n          <ion-col class=\\\"ion-text-right\\\">\\n            <ion-button class=\\\"ion-float-right\\\" fill=\\\"clear\\\" (click)=\\\"delete(p.id)\\\">\\n              <ion-icon style=\\\"color: red;\\\" ios=\\\"ios-trash\\\" md=\\\"md-trash\\\"></ion-icon>\\n            </ion-button>\\n          </ion-col>\\n\\n          </ion-row>\\n        </ion-card-content>\\n      </ion-card>\\n    </ion-list>\\n\\n  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n    <ion-fab-button color=\\\"warning\\\" (click)=\\\"openNewProduct()\\\">\\n      <ion-icon ios=\\\"ios-add-circle\\\" md=\\\"md-add-circle\\\"></ion-icon>\\n    </ion-fab-button>\\n  </ion-fab>\\n</ion-content>\\n\";","import { Component, OnInit } from '@angular/core';\nimport { NavController, MenuController, ModalController, ToastController, AlertController } from '@ionic/angular';\nimport { ApiService } from 'src/app/services/api-service.service';\nimport { Bene } from 'src/app/models/bene';\n\n\n@Component({\n  selector: 'app-prodotti',\n  templateUrl: './prodotti.page.html',\n  styleUrls: ['./prodotti.page.scss'],\n})\nexport class ProdottiPage implements OnInit {\n\n  products: Bene[];\n  upperPrice: number;\n  lowerPrice: number;\n  \n  constructor(public navCtrl: NavController, public menuCtrl: MenuController, public modalCtrl: ModalController, public toastCtrl: ToastController, private apiService: ApiService, private alertController: AlertController) {\n  }\n\n  ngOnInit() {}\n\n  ionViewWillEnter(){\n    this.upperPrice = 500;\n    this.lowerPrice = 0;\n    this.initializeItems();\n  }\n\n  async aggiungi(id:number) {\n    const alert = await this.alertController.create({\n      header: \"Aggiungi\",\n      message:\"Inserire la quantità da aggiungere\",\n      inputs: [\n        {\n          name: 'quantita',\n          type: \"number\",\n          placeholder: 'Quantità'\n        }],\n      buttons: [\n        {\n          text: 'Annulla',\n          role: 'cancel',\n        },\n        {\n          text: 'Ok',\n          handler: data => {\n            data.quantita = data.quantita == \"\" ? 0 : data.quantita\n            data.quantita=parseInt(data.quantita)\n            if(data.quantita<=0){\n              data.quantita=0\n              return \n            }\n            this.apiService.addBeneQuantita(id,data.quantita).then(Res => {\n              Res.subscribe({\n                next:()=>{\n                  this.apiService.simplyAlert(()=>{this.initializeItems()},\"Operazione effettuata\", \"Quantità aggiunta.\")\n                },\n                error:()=>{\n                  this.apiService.simplyAlert()\n                }\n              })\n            })\n          }\n        }]\n    });\n    await alert.present();\n  }\n\n\n  initializeItems() {\n    this.apiService.getMyBeni().then(retApiService => {\n      retApiService.subscribe({\n        next:(result)=>{\n          result[\"_msg\"].forEach(element => {\n            element[\"img\"]= element[\"img\"] != null ? 'data:image/jpeg;base64,'+element[\"img\"] : this.apiService.img\n          });\n          this.products = result[\"_msg\"];\n        },\n        error:()=>{\n          this.apiService.simplyAlert()\n        }\n      })\n      \n    });\n  }\n\n  delete(idProd:number){\n    this.apiService.confirmAlert(\n      () =>{\n        this.apiService.deleteBene(idProd).then(delRes => {\n          delRes.subscribe({\n            next:(res) =>{\n              this.apiService.simplyAlert(()=>{this.initializeItems()},\"Operazione effettuata\", \"Prodotto eliminato correttamente.\")\n            },\n            error:()=>{\n              this.apiService.simplyAlert()\n            }\n          })\n        })\n      },\n      \"Attenzione\",\n      \"Vuoi davvero eliminare questo prodotto?\"\n    )\n    \n  }\n\n  openNewProduct(){\n    this.navCtrl.navigateForward(\"/nuovo-prodotto\");\n  }\n\n  popover(type){\n    let msg = type == 0 ?\n    \"Il prodotto da te inserito è in stato di attesa, verrà valutato se considerarlo valido. Controlla nei prossimi giorni\" :\n    \"Il prodotto è attualmente online, gli utenti potranno ora acquistarlo usando gli Andron! Controlla se hai già degli ordini!\"\n    this.apiService.createPopover(msg)\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProdottiPage } from './prodotti.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProdottiPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProdottiPageRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9kb3R0aS5wYWdlLnNjc3MifQ== */\";"]}
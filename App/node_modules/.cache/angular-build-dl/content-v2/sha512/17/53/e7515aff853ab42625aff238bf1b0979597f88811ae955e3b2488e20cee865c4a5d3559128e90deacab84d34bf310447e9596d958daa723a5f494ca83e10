{"version":3,"sources":["webpack:///src/app/pages/richieste-mie/richieste-mie.module.ts","webpack:///src/app/pages/richieste-mie/richieste-mie.page.html","webpack:///src/app/pages/richieste-mie/richieste-mie.page.ts","webpack:///src/app/pages/richieste-mie/richieste-mie.page.scss","webpack:///src/app/pages/richieste-mie/richieste-mie-routing.module.ts"],"names":["RichiesteMiePageModule","imports","declarations","RichiesteMiePage","router","request","utilities","searchmyRichieste","get","path","handler","results","myRichieste","console","log","error","alertError","id","stato","msg","confirmAlert","handlerYes","put","data","_stato","simplyAlert","operation","header","message","item","tipo","segnalazioneRichiedente","navigate","JSON","stringify","type","createPopover","selector","template","routes","component","RichiesteMiePageRoutingModule","forChild","exports"],"mappings":"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","file":"pages-richieste-mie-richieste-mie-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RichiesteMiePageRoutingModule } from './richieste-mie-routing.module';\n\nimport { RichiesteMiePage } from './richieste-mie.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RichiesteMiePageRoutingModule\n  ],\n  declarations: [RichiesteMiePage]\n})\nexport class RichiesteMiePageModule {}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>\\n      Le mie richieste\\n    </ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button autoHide=\\\"false\\\" style=\\\"color: white\\\"></ion-menu-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n    <ion-card  style=\\\"background-color: rgb(29, 39, 61)\\\" *ngIf=\\\"this.myRichieste?.length==0\\\">\\n      <ion-card-header>\\n        <ion-card-subtitle>\\n          <div class=\\\"ion-text-center\\\">\\n            Nessuna tua richiesta di servizi!\\n          </div>\\n        </ion-card-subtitle>\\n      </ion-card-header>\\n    </ion-card>\\n\\n    <ion-card style=\\\"background-color: rgb(29, 39, 61);\\\" *ngFor=\\\"let item of myRichieste\\\">\\n      <ion-card-content>\\n        <ion-card-subtitle style=\\\"font-size:10px\\\" class=\\\"ion-text-wrap\\\">\\n          <ion-grid>\\n            <ion-row>\\n              <ion-col>\\n                <div class=\\\"ion-text-center\\\">\\n                  Richiesto a:\\n                </div>\\n              </ion-col>\\n              <ion-col size=\\\"8\\\">\\n                <div class=\\\"ion-text-center\\\">\\n                  {{item.nome}} {{item.cognome}}\\n                </div>\\n              </ion-col>\\n            </ion-row>\\n          </ion-grid>\\n    \\n        </ion-card-subtitle>\\n        <ion-card-title color=\\\"black\\\" lines=\\\"none\\\" style=\\\"font-size:20px\\\" class=\\\"ion-text-wrap\\\" class=\\\"ion-text-center\\\">\\n          {{item.nomeServizio}}\\n        </ion-card-title>\\n  \\n\\n        <ion-grid>\\n          <ion-row>\\n            <ion-col>\\n              <div class=\\\"ion-text-center\\\" style=\\\"color: tomato;\\\">\\n                Stato\\n              </div>\\n            </ion-col> \\n          </ion-row>\\n          <ion-row *ngIf=\\\"item.stato=='attesa'\\\">\\n            <ion-col>\\n              <div class=\\\"ion-text-center\\\" (click)=\\\"popover(0)\\\">\\n                In attesa di accettazione...\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n\\n          <ion-row *ngIf=\\\"item.stato=='rifiutato'\\\" (click)=\\\"popover(-1)\\\">\\n            <ion-col>\\n              <div class=\\\"ion-text-center\\\">\\n                Rifiutato.\\n              </div>\\n            </ion-col>\\n          </ion-row>      \\n\\n          <ion-row *ngIf=\\\"item.stato=='accettato'\\\">\\n            <ion-col>\\n              <div class=\\\"contenuto_home\\\">\\n                Il servizio e' stato accettato, quando l'utente avra' eseguito il servizio richiesto potrai confermarlo.\\n                Puoi disdire il servizio eliminandolo.\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n\\n          <ion-row *ngIf=\\\"(item.stato!='eseguito' && item.stato!='confermato')\\\">\\n            <ion-col>\\n              <div class=\\\"ion-text-center\\\">\\n                <ion-button size=\\\"small\\\" expand=\\\"block\\\" (click)=\\\"elimina(item.id)\\\">\\n                  Elimina\\n                </ion-button>\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n\\n          <ion-row *ngIf=\\\"item.stato=='confermato'\\\">\\n            <ion-col>\\n              <div class=\\\"ion-text-center\\\">\\n              Una volta che l'altro utente avra' confermato la recezione degli Andron non verra' piu' visualizzato.\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n\\n          <ion-row *ngIf=\\\"item.stato=='eseguito'\\\">\\n            <ion-col>\\n              <div class=\\\"ion-text-center\\\" (click)=\\\"popover(1)\\\">\\n                Eseguito\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n\\n          <ion-row *ngIf=\\\"item.stato=='eseguito'\\\">\\n\\n            <ion-col>\\n              <div>\\n                <ion-button size=\\\"small\\\" expand=\\\"block\\\" (click)=\\\"segnala(item,'servizio',1)\\\">\\n                  Segnala\\n                </ion-button>\\n              </div>\\n            </ion-col>\\n\\n            <ion-col>\\n              <div class=\\\"ion-text-center\\\">\\n                <ion-button size=\\\"small\\\" expand=\\\"block\\\" (click)=\\\"conferma(item,'servizio')\\\">\\n                  Conferma\\n                </ion-button>\\n              </div>\\n            </ion-col>\\n\\n          </ion-row>\\n\\n\\n\\n        </ion-grid>    \\n      </ion-card-content>\\n    </ion-card>\\n\\n  </ion-list>\\n</ion-content>\";","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RequestService } from 'src/app/services/request.service';\nimport { UtilitiesService } from 'src/app/services/utilities.service';\n\n@Component({\n  selector: 'app-richieste-mie',\n  templateUrl: './richieste-mie.page.html',\n  styleUrls: ['./richieste-mie.page.scss'],\n})\nexport class RichiesteMiePage {\n\n  myRichieste: any\n  utenza:string;\n  msg: string;\n\n  constructor(private router : Router, private request: RequestService, private utilities: UtilitiesService) {}\n\n  ionViewWillEnter() {\n    this.searchmyRichieste()\n  }\n\n  searchmyRichieste() {\n    this.request.get({\n      path:\"/requests/mine\",\n      handler:(results)=>{\n        this.myRichieste = results[\"_msg\"];\n        console.log(this.myRichieste)\n      },\n      error:()=>{\n        this.utilities.alertError({})\n      }\n    })\n\n  }\n\n  setStato(id:number ,stato:string){\n\n    if (stato == \"rifiutato\") {\n      this.msg = \"Vuoi rifiutare questo servizio?\"\n    }\n    if (stato == \"accettato\") {\n      this.msg = \"Vuoi accettare questo servizio?\"\n    }\n    if (stato == \"eseguito\") {\n      this.msg = \"Hai davvero eseguito questo servizio?\"\n    }\n  \n    this.utilities.confirmAlert({\n      handlerYes:()=>{\n\n        this.request.put({\n          path:\"/requests/mine/\"+id,\n          data:{\n            _stato:stato\n          },\n          handler:(results)=>{\n            this.utilities.simplyAlert({\n              operation:()=>{this.searchmyRichieste()},\n              header:\"Operazione Effettuata\",\n              message: \"L'operazione e' stata eseguita con successo\"\n            })\n          },\n          error: (error)=>{\n            this.utilities.alertError({})\n          }\n        })\n        \n      },\n      header:\"Attenzione\",\n      message:this.msg\n    })\n  }\n\n\n  segnala(item: any, tipo: string) {\n    if (item.segnalazioneRichiedente) {\n      this.utilities.simplyAlert({\n        header:\"Attenzione\", \n        message:\"Hai gia' inviato una segnalazione per questo prodotto! Verrai contattato presto da qualcuno del nostro team.\"\n      })\n    }\n    else {\n      this.router.navigate([\"/segnalazione\", { \"item\": JSON.stringify(item), \"tipo\": tipo }]);\n    }\n    \n  }\n\n  elimina(id:number){\n    \n    this.utilities.confirmAlert({\n      header:\"Attenzione\",\n      message:\"Vuoi davvero eliminare questa richiesta? Non sarà possibile annullare questa operazione.\",\n      handlerYes:()=>{\n        \n        this.request.delete({\n          path:\"/requests/mine/\"+id,\n          handler:()=>{\n            this.utilities.simplyAlert({\n              operation:()=>{this.searchmyRichieste()},\n              header:\"Operazione effettuata\",\n              message:\"Richiesta eliminata.\"\n            })\n          },\n          error:()=>{\n            this.utilities.alertError({})\n          }\n        })\n\n      }\n    })\n  }\n\n  conferma(item: any, tipo: string) {\n    this.router.navigate([\"/feedback\", { \"item\": JSON.stringify(item), \"tipo\": tipo }]);\n  }\n\n\n  popover(type){\n    let msg = type == -1 ?\n    \"L'utente non ha accettato la tua richiesta. Ora puoi eliminare la richiesta.\" : type == 0 ?\n    \"La tua richiesta dev'essere ancora valutata dall'utente\" :\n    \"L'utente ha dichiarato di aver effettuato il serivizio da te richiesto.\"\n    \n    this.utilities.createPopover(msg)\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyaWNoaWVzdGUtbWllLnBhZ2Uuc2NzcyJ9 */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RichiesteMiePage } from './richieste-mie.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RichiesteMiePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RichiesteMiePageRoutingModule {}\n"]}
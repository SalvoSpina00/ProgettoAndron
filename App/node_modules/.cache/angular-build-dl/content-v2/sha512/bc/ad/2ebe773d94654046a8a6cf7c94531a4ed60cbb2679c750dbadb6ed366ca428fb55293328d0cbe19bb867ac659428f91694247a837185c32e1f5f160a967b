{"version":3,"sources":["webpack:///src/app/pages/servizi/servizi.page.ts","webpack:///src/app/pages/servizi/servizi.page.scss","webpack:///src/app/pages/servizi/servizi.page.html","webpack:///src/app/pages/servizi/servizi.module.ts","webpack:///src/app/pages/servizi/servizi-routing.module.ts"],"names":["ServiziPage","api","navCtrl","menuCtrl","popoverCtrl","alertCtrl","modalCtrl","toastCtrl","router","alertController","upperPrice","lowerPrice","searchMieiServizi","getMieiServizi","then","retApiService","subscribe","results","console","log","idService","deleteServizio","delRes","res","create","header","buttons","text","role","handler","alert","present","message","navigateForward","selector","template","ServiziPageModule","imports","declarations","routes","path","component","ServiziPageRoutingModule","forChild","exports"],"mappings":"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","file":"pages-servizi-servizi-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NavController, MenuController, PopoverController, AlertController, ModalController, ToastController, Platform } from '@ionic/angular';\nimport { SearchFilterPage } from '../modal/search-filter/search-filter.page';\nimport { ApiService } from 'src/app/services/api-service.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface Service {\n  id: number;\n  name: string;\n  descrizione: string;\n  price: number;\n}\n@Component({\n  selector: 'app-servizi',\n  templateUrl: './servizi.page.html',\n  styleUrls: ['./servizi.page.scss'],\n})\nexport class ServiziPage implements OnInit {\n\n  services: Service[] ;\n  upperPrice: number;\n  lowerPrice: number;\n  results: {}\n\n  constructor(\n    private api: ApiService,\n    public navCtrl: NavController,\n    public menuCtrl: MenuController,\n    public popoverCtrl: PopoverController,\n    public alertCtrl: AlertController,\n    public modalCtrl: ModalController,\n    public toastCtrl: ToastController,\n    private router: Router,\n    private alertController: AlertController\n  ) {\n      this.upperPrice = 500;\n      this.lowerPrice = 0;\n  }\n\n  ngOnInit() {\n  }\n  //! Aggiorna la pagina ogni qual volta si entra, in questo modo le aggiunte vengono visualizzate subito.\n  ionViewWillEnter(){\n    this.searchMieiServizi();\n  }\n  searchMieiServizi(){\n    this.api.getMieiServizi().then(retApiService => {\n      retApiService.subscribe(results =>{\n        this.results=results[\"_msg\"];\n        console.log(this.results);\n      });\n  })\n  }\n \n  async delete(idService:number){\n    this.api.deleteServizio(idService).then(delRes => {\n      delRes.subscribe(async res =>{\n        res=res[\"_msg\"];\n        console.log(res);\n        const alert= await this.alertController.create({\n          header: \"Servizio eliminato correttamente\",\n          buttons: [\n          {text: 'OK',\n          role: 'cancel',//! con role cancel anche se non viene premuto viene eseguito l'handler\n            handler: () => {\n             this.searchMieiServizi()\n            }\n          }]\n        });\n        await alert.present();\n       })\n    })\n  }\n\n  async alertDelete(idService:number){\n    const alert= await this.alertController.create({\n      header: \"Attenzione\",\n      message: \"Vuoi davvero eliminare questo serivizio?\",\n      buttons: [\n        {text: 'No',},\n        {\n          text: 'Si',\n          handler:() => {\n            this.delete(idService);\n          }\n        }\n    ]\n    })\n\n    await alert.present();\n\n  }\n  openNewService(){\n    this.navCtrl.navigateForward(\"/nuovo-servizio\");\n  }\n\n  //! Codice Andrea\n  clickItem(){\n    //this.router.navigate([\"/descrizione-transazione\",{\"transaction\": JSON.stringify(this.transactions[3])}]);\n  }\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzZXJ2aXppLnBhZ2Uuc2NzcyJ9 */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>i miei servizi</ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button style=\\\"color: white\\\" autoHide=\\\"false\\\"></ion-menu-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div>\\n    <ion-list>\\n      <ion-card *ngFor=\\\"let item of results\\\">\\n        <ion-card-content>\\n          <ion-card-title color=\\\"black\\\" style=\\\"font-size:20px\\\" lines=\\\"none\\\">{{item.nome}}</ion-card-title>\\n          <ion-grid>\\n            <ion-row>\\n              <ion-col>\\n                <div>\\n                  {{item.descrizione}}\\n                </div>\\n              </ion-col>\\n            </ion-row>\\n            \\n            <ion-row>\\n              <ion-col>\\n                <div>\\n                  Stato:\\n                </div>\\n              </ion-col>\\n\\n              <ion-col *ngIf=\\\"item.accettato==0\\\" size=\\\"8\\\">\\n                <div class=\\\"ion-text-center\\\">\\n                  <ion-text style=\\\"color: red;\\\">Attesa di accettazione...</ion-text>\\n                </div>\\n              </ion-col>\\n\\n              <ion-col *ngIf=\\\"item.accettato==1\\\" size=\\\"8\\\">\\n                <div class=\\\"ion-text-center\\\">\\n                  <ion-text style=\\\"color: green;\\\">Online!</ion-text>\\n                </div>\\n              </ion-col>\\n            </ion-row>\\n\\n            <ion-row>\\n              <ion-col>\\n                <div>\\n                  <ion-button style=\\\"color: red\\\" size=\\\"small\\\" expand=\\\"block\\\" slot=\\\"icon-only\\\" (click)=\\\"alertDelete(item.id)\\\">\\n                    <ion-icon style=\\\"color: red;\\\" ios=\\\"ios-trash\\\" md=\\\"md-trash\\\"></ion-icon>\\n                  </ion-button>\\n                </div>\\n              </ion-col>\\n            </ion-row>  \\n\\n          </ion-grid>\\n      \\n      \\n        </ion-card-content>\\n      </ion-card>\\n\\n\\n\\n\\n\\n\\n\\n    </ion-list>\\n  </div>\\n  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n    <ion-fab-button color=\\\" console.log(this.data);warning\\\" (click)=\\\"openNewService()\\\">\\n      <ion-icon ios=\\\"ios-add-circle\\\" md=\\\"md-add-circle\\\"></ion-icon>\\n    </ion-fab-button>\\n  </ion-fab>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ServiziPageRoutingModule } from './servizi-routing.module';\n\nimport { ServiziPage } from './servizi.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ServiziPageRoutingModule\n  ],\n  declarations: [ServiziPage]\n})\nexport class ServiziPageModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ServiziPage } from './servizi.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ServiziPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ServiziPageRoutingModule {}\n"]}
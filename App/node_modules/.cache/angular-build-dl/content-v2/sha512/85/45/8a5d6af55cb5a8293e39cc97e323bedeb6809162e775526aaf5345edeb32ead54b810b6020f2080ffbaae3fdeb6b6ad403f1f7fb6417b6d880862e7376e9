{"version":3,"sources":["webpack:///src/app/pages/ordini/ordini.page.html","webpack:///src/app/pages/ordini/ordini.module.ts","webpack:///src/app/pages/ordini/ordini.page.scss","webpack:///src/app/pages/ordini/ordini.page.ts","webpack:///src/app/pages/ordini/ordini-routing.module.ts"],"names":["OrdiniPageModule","imports","declarations","OrdiniPage","apiService","router","popoverController","page","psize","getOrdini","then","retApiService","subscribe","next","response","data","error","simplyAlert","item","tipo","navigate","JSON","stringify","segnalato","event","results","t","push","target","complete","type","msg","createPopover","selector","template","routes","path","component","OrdiniPageRoutingModule","forChild","exports"],"mappings":"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","file":"pages-ordini-ordini-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button autoHide=\\\"false\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>ordini</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  \\n  <ion-list>\\n    \\n    <ion-card style=\\\"background-color:rgb(29, 39, 61)\\\" *ngIf=\\\"data?.length==0\\\">\\n      <ion-card-header>\\n        <ion-card-subtitle>\\n          <div class=\\\"ion-text-center\\\">\\n            Non hai nessun ordine!\\n          </div>\\n        </ion-card-subtitle>\\n        <ion-card-content>\\n          Puoi acquistare oggetti usando gli Andron andando nella sezione Cerco Oggetti disponibile nel menù. \\n        </ion-card-content>\\n      </ion-card-header>\\n    </ion-card>\\n\\n    <ion-card *ngFor=\\\"let o of this.data\\\">\\n      <ion-card-content>\\n    \\n        <ion-card-subtitle>\\n          <div class=\\\"ion-text-center\\\">\\n            Ordine #{{o?.id}}\\n          </div>\\n          \\n        </ion-card-subtitle>\\n        <ion-card-title style=\\\"font-size:20px\\\" class=\\\"ion-text-center\\\">{{ o.nomeProdotto}} x {{o.quantita}}</ion-card-title>\\n        <ion-grid>\\n          <ion-row>\\n            <ion-col size=4>\\n              <div>\\n                <ion-avatar slot=\\\"start\\\" class=\\\"user-avatar\\\">\\n                  <ion-img src=\\\"{{ o.img }}\\\"></ion-img>\\n                </ion-avatar>\\n              </div>\\n            </ion-col>\\n\\n            <ion-col *ngIf=\\\"o.checkOrdine==1 && o.confermato==0\\\">\\n              <div (click)=\\\"popover(-1)\\\" class=\\\"ion-text-center\\\" style=\\\"color: green;\\\">\\n                Ordine evaso! <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n              </div> \\n            </ion-col>\\n\\n            <ion-col *ngIf=\\\"o.confermato==1\\\">\\n              <div (click)=\\\"popover(1)\\\" class=\\\"ion-text-center\\\" style=\\\"color: green;\\\">\\n                Ordine confermato! \\n              </div>\\n            </ion-col>\\n\\n            <ion-col *ngIf=\\\"o.checkOrdine==0\\\">\\n              <div (click)=\\\"popover(0)\\\" class=\\\"ion-text-center\\\" style=\\\"color: red;\\\">\\n                In attesa del check da parte dell'azienda...\\n              </div>\\n            </ion-col>\\n              \\n          </ion-row>\\n          <ion-row *ngIf=\\\"o.checkOrdine==1 && o.confermato==0\\\">\\n            <ion-col>\\n              <div class=\\\"ion-text-center\\\"  style=\\\"color: tomato;\\\" >\\n                Contatti Azienda\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n          <ion-row *ngIf=\\\"o.checkOrdine==1 && o.confermato==0\\\">\\n            <ion-col>\\n              <div  style=\\\"color: tomato;\\\">\\n                Email\\n              </div>\\n            </ion-col>\\n            <ion-col>\\n              <div>\\n                {{o.email}}\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n          <ion-row *ngIf=\\\"o.checkOrdine==1 && o.confermato==0\\\">\\n            <ion-col  style=\\\"color: tomato;\\\">\\n              <div>\\n                Telefono\\n              </div>\\n            </ion-col>\\n            <ion-col>\\n              <div>\\n                {{o.telefono}}\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n          <ion-row *ngIf=\\\"o.checkOrdine==1 && o.confermato==0\\\">\\n          \\n            <ion-col>\\n              <div>\\n                <ion-button size=\\\"small\\\" expand=\\\"block\\\" (click)=\\\"segnala(o,'ordine')\\\">\\n                  Segnala\\n                </ion-button>\\n              </div>\\n            </ion-col>\\n          \\n            <ion-col>\\n              <div>\\n                <ion-button size=\\\"small\\\" expand=\\\"block\\\" (click)=\\\"conferma(o, 'ordine')\\\">\\n                  Conferma\\n                </ion-button>\\n              </div>\\n            </ion-col>\\n          \\n          </ion-row>\\n        </ion-grid>\\n      </ion-card-content>\\n    </ion-card>\\n\\n    <ion-infinite-scroll threshold=\\\"100px\\\" (ionInfinite)=\\\"loadmore($event)\\\">\\n      <ion-infinite-scroll-content loadingSpinner=\\\"bubbles\\\" loadingText=\\\"Caricamento...\\\">\\n      </ion-infinite-scroll-content>\\n    </ion-infinite-scroll>\\n\\n  </ion-list>\\n\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { OrdiniPageRoutingModule } from './ordini-routing.module';\n\nimport { OrdiniPage } from './ordini.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    OrdiniPageRoutingModule\n  ],\n  declarations: [OrdiniPage]\n})\nexport class OrdiniPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJvcmRpbmkucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/services/api-service.service';\nimport { Router } from '@angular/router';\n\nimport { PopoverController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-ordini',\n  templateUrl: './ordini.page.html',\n  styleUrls: ['./ordini.page.scss'],\n})\n\nexport class OrdiniPage implements OnInit {\n  data: any;\n  page: number;\n  psize:number;\n\n  constructor(private apiService: ApiService, private router: Router,public popoverController: PopoverController) {\n    this.page = 0\n    this.psize = 5\n\n    this.apiService.getOrdini(this.psize, this.page).then(retApiService => {\n      retApiService.subscribe({\n        next: (response) =>{\n          this.data = response[\"_msg\"];\n        },\n        error: () =>{\n          this.apiService.simplyAlert()\n        }\n      })\n    });\n    \n  }\n  \n  ngOnInit() {}\n\n  conferma(item:any,tipo:string){\n    this.router.navigate([\"/feedback\", { \"item\": JSON.stringify(item), \"tipo\" : tipo}]);\n  }\n\n  async segnala(item:any,tipo:string){\n    if(item.segnalato){\n      this.apiService.simplyAlert(()=>{}, \"Attenzione!\",\"Hai già inviato una segnalazione per questo prodotto! Verrai contattato presto da qualcuno del nostro team.\")\n    }\n    else{\n      this.router.navigate([\"/segnalazione\", { \"item\": JSON.stringify(item), \"tipo\": tipo }]);\n    }\n  }\n\n  loadmore(event) {\n    this.page++\n    this.apiService.getOrdini(this.psize, this.page).then(retApiService => {\n      retApiService.subscribe({\n        next:(results)=>{\n          for (const t of results[\"_msg\"]) {\n            this.data.push(t);\n          };\n          event.target.complete();\n        },\n        error:()=>{\n          this.apiService.simplyAlert()\n        }\n      })\n    })\n  }\n\n  popover(type){\n    let msg = type == 0 ?\n    \"In attesa che l'azienda visualizzi l'ordine da te inviato\" :\n    \"Il tuo ordine è stato evaso, lo riceverai al più presto!\"\n    this.apiService.createPopover(msg)\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OrdiniPage } from './ordini.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OrdiniPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrdiniPageRoutingModule {}\n"]}
{"version":3,"sources":["webpack:///src/app/pages/certifica-servizi/certifica-servizi-routing.module.ts","webpack:///src/app/pages/certifica-servizi/certifica-servizi.page.html","webpack:///src/app/pages/certifica-servizi/certifica-servizi.page.scss","webpack:///src/app/pages/certifica-servizi/certifica-servizi.page.ts","webpack:///src/app/pages/certifica-servizi/certifica-servizi.module.ts"],"names":["routes","path","component","CertificaServiziPageRoutingModule","imports","forChild","exports","CertificaServiziPage","apiService","getServizi","page","psize","getServiziComunita","then","api","subscribe","next","result","forEach","element","servizi","error","err","simplyAlert","event","t","push","target","complete","item","confirmAlert","confirmServizioComunita","id","resp","refuseServizioComunita","selector","template","CertificaServiziPageModule","declarations"],"mappings":"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","file":"pages-certifica-servizi-certifica-servizi-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CertificaServiziPage } from './certifica-servizi.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CertificaServiziPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CertificaServiziPageRoutingModule {}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button autoHide=\\\"false\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n        <ion-text>Richieste</ion-text>\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n    <ion-card style=\\\"background-color:rgb(29, 39, 61)\\\" *ngIf=\\\"servizi?.length==0\\\">\\n      <ion-card-header>\\n        <ion-card-subtitle>\\n          <div class=\\\"ion-text-center\\\">\\n            Attenzione!\\n          </div>\\n        </ion-card-subtitle>\\n        <ion-card-content>\\n          Attualmente non sono presenti richieste di certificazione di servizi offerti alla comunit√†.\\n        </ion-card-content>\\n      </ion-card-header>\\n    </ion-card>\\n\\n    <ion-card *ngFor=\\\"let s of servizi\\\">\\n\\n\\n\\n      <div id=\\\"content\\\"  *ngIf=\\\"s.richiestaBisogno==1\\\">\\n        <ion-row>\\n          <ion-col col-6 class=\\\"ion-no-padding\\\">\\n            <ion-item>\\n              <ion-label style=\\\"text-align: center;\\\">Prima</ion-label>\\n            </ion-item>\\n            <ion-img src=\\\"{{ s.imgPrima }}\\\"></ion-img>\\n          </ion-col>\\n          <ion-col col-6 class=\\\"ion-no-padding\\\">\\n            <ion-item>\\n              <ion-label style=\\\"text-align: center;\\\">Dopo</ion-label>\\n            </ion-item>\\n            <ion-img src=\\\"{{ s.img }}\\\"></ion-img>\\n          </ion-col>\\n        </ion-row>\\n        <ion-card-header>\\n          <ion-card-subtitle>Servizio eseguito da {{s.nome}} {{s.cognome}} <br> in data {{s.data}} alle ore {{s.orario}}</ion-card-subtitle>\\n          <ion-card-title>Bisogno: {{s.nomeBisogno}}</ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n          <p>\\n            Descrizione bisogno: <br> {{s.descrizioneBisogno}}\\n          </p>\\n          <p>\\n            Messaggio del servizio: <br> {{s.messaggio}}\\n          </p>\\n        </ion-card-content>\\n      </div>\\n\\n      <div id=\\\"content\\\"  *ngIf=\\\"s.richiestaBisogno==0\\\">\\n        <ion-img src=\\\"{{ s.img }}\\\"></ion-img>\\n        <ion-card-header>\\n          <ion-card-subtitle>Servizio eseguito da {{s.nome}} {{s.cognome}} <br> in data {{s.data}} alle ore {{s.orario}}</ion-card-subtitle>\\n        </ion-card-header>\\n        <ion-card-content>\\n          {{s.messaggio}}\\n          \\n        </ion-card-content>\\n      </div>\\n\\n        <ion-item (click)=\\\"accept(s)\\\">\\n          <ion-icon name=\\\"checkmark\\\" slot=\\\"start\\\"></ion-icon>\\n          <ion-label>Certifica avvenuto servizio</ion-label>\\n        </ion-item>\\n\\n        <ion-item (click)=\\\"refuse(s)\\\">\\n          <ion-icon name=\\\"close\\\" slot=\\\"start\\\"></ion-icon>\\n          <ion-label>Rifiuta certificazione</ion-label>\\n        </ion-item>\\n    </ion-card>\\n\\n\\n    <ion-infinite-scroll threshold=\\\"100px\\\" (ionInfinite)=\\\"loadmore($event)\\\">\\n      <ion-infinite-scroll-content loadingSpinner=\\\"bubbles\\\" loadingText=\\\"Caricamento...\\\">\\n      </ion-infinite-scroll-content>\\n    </ion-infinite-scroll>\\n  </ion-list>\\n</ion-content>\\n\";","export default \"ion-img {\\n  height: 25vh;\\n  width: auto;\\n  margin: auto;\\n  display: block;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NlcnRpZmljYS1zZXJ2aXppLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNJLFlBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGNBQUE7QUFBSiIsImZpbGUiOiJjZXJ0aWZpY2Etc2Vydml6aS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbmlvbi1pbWd7XG4gICAgaGVpZ2h0OiAyNXZoO1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIG1hcmdpbjogYXV0bztcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/services/api-service.service';\n\n@Component({\n  selector: 'app-certifica-servizi',\n  templateUrl: './certifica-servizi.page.html',\n  styleUrls: ['./certifica-servizi.page.scss'],\n})\nexport class CertificaServiziPage implements OnInit {\n  \n  page:number;\n  psize:number;\n  servizi: any;\n\n  constructor(private apiService: ApiService) { \n\n\n    this.getServizi()\n  }\n\n  ngOnInit() {\n  }\n\n  getServizi(){\n    this.page=0;\n    this.psize=3;\n    this.apiService.getServiziComunita(this.page, this.psize).then(api => {\n      api.subscribe({\n        next: (result) => {\n          result[\"_msg\"].forEach(element => {\n            element[\"img\"]='data:image/jpeg;base64,'+element[\"img\"]\n            element[\"imgPrima\"]='data:image/jpeg;base64,'+element[\"imgPrima\"]\n          });\n          this.servizi=result[\"_msg\"]\n        },\n        error: (err)  => {\n          this.apiService.simplyAlert()\n        }\n      })\n    })\n  }\n\n\n  loadmore(event) {\n    this.page++\n    this.apiService.getServiziComunita(this.page, this.psize).then(api => {\n      api.subscribe({\n        \n        next : (result) => {\n          for (const t of result[\"_msg\"]) {\n            this.servizi.push(t);\n          };\n          event.target.complete();\n        },\n        error: (error) => {\n          this.apiService.simplyAlert()\n        }\n\n      })      \n    })\n  }\n\n  accept(item){\n    this.apiService.confirmAlert(\n      ()=>{\n        this.apiService.confirmServizioComunita(item.id).then(resp=>{\n          resp.subscribe({\n            next:()=>{\n              this.apiService.simplyAlert(\n                ()=>{\n                  this.getServizi()\n                },\n                \"Operazione effettuata\",\n                \"Servizio certificato correttamente!\"\n              )\n            },\n            error:()=>{\n              this.apiService.simplyAlert()\n            }\n          })\n        })\n      },\n      \"Attenzione!\",\n      \"Vuoi certificare questo servizio offerto alla comunit√†?\"\n    )\n  }\n\n  refuse(item){\n    this.apiService.confirmAlert(\n      ()=>{\n        this.apiService.refuseServizioComunita(item.id).then(resp=>{\n          resp.subscribe({\n            next:()=>{\n              this.apiService.simplyAlert(\n                ()=>{\n                  this.getServizi()\n                },\n                \"Attenzione\",\n                \"Il servizio √® stato rifiutato\"\n              )\n            },\n            error:()=>{\n              this.apiService.simplyAlert()\n            }\n          })\n        })\n      },\n      \"Attenzione!\",\n      \"Vuoi rifiutare di certificare questo servizio offerto alla comunit√†?\"\n    )\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CertificaServiziPageRoutingModule } from './certifica-servizi-routing.module';\n\nimport { CertificaServiziPage } from './certifica-servizi.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CertificaServiziPageRoutingModule\n  ],\n  declarations: [CertificaServiziPage]\n})\nexport class CertificaServiziPageModule {}\n"]}
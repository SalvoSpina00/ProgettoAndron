{"version":3,"sources":["webpack:///src/app/pages/ordini/ordini.page.html","webpack:///src/app/pages/ordini/ordini.module.ts","webpack:///src/app/pages/ordini/ordini.page.scss","webpack:///src/app/pages/ordini/ordini.page.ts","webpack:///src/app/pages/ordini/ordini-routing.module.ts"],"names":["OrdiniPageModule","imports","declarations","OrdiniPage","apiService","router","alertCtrl","page","psize","getOrdini","then","retApiService","subscribe","response","data","console","info","errore","item","tipo","navigate","JSON","stringify","segnalato","create","header","message","buttons","text","role","alert","present","event","results","t","push","target","complete","selector","template","routes","path","component","OrdiniPageRoutingModule","forChild","exports"],"mappings":"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","file":"pages-ordini-ordini-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button autoHide=\\\"false\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>ordini</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  \\n  <ion-list>\\n    <ion-card *ngFor=\\\"let o of this.data\\\">\\n      <ion-card-content>\\n    \\n        <ion-card-subtitle>\\n          <div class=\\\"ion-text-center\\\">\\n            #{{o?.id}}\\n          </div>\\n          \\n        </ion-card-subtitle>\\n        <ion-card-title style=\\\"font-size:20px\\\" class=\\\"ion-text-center\\\">{{ o.nomeProdotto}} x {{o.quantita}}</ion-card-title>\\n        <ion-grid>\\n          <ion-row>\\n            <ion-col size=4>\\n              <div>\\n                <ion-avatar slot=\\\"start\\\" class=\\\"user-avatar\\\">\\n                  <img src=\\\"assets/img/andrea.jpg\\\">\\n                </ion-avatar>\\n              </div>\\n            </ion-col>\\n\\n            <ion-col *ngIf=\\\"o.checkOrdine==1 && o.confermato==0\\\">\\n              <div class=\\\"ion-text-center\\\" style=\\\"color: green;\\\">\\n                Ordine evaso!\\n              </div>\\n            </ion-col>\\n\\n            <ion-col *ngIf=\\\"o.confermato==1\\\">\\n              <div class=\\\"ion-text-center\\\" style=\\\"color: green;\\\">\\n                Ordine confermato! \\n              </div>\\n            </ion-col>\\n\\n            <ion-col *ngIf=\\\"o.checkOrdine==0\\\">\\n              <div class=\\\"ion-text-center\\\" style=\\\"color: red;\\\">\\n                In attesa del check da parte dell'azienda...\\n              </div>\\n            </ion-col>\\n              \\n          </ion-row>\\n          <ion-row *ngIf=\\\"o.checkOrdine==1 && o.confermato==0\\\">\\n            <ion-col>\\n              <div class=\\\"ion-text-center\\\"  style=\\\"color: tomato;\\\" >\\n                Contatti Azienda\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n          <ion-row *ngIf=\\\"o.checkOrdine==1 && o.confermato==0\\\">\\n            <ion-col>\\n              <div  style=\\\"color: tomato;\\\">\\n                Email\\n              </div>\\n            </ion-col>\\n            <ion-col>\\n              <div>\\n                {{o.mail}}\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n          <ion-row *ngIf=\\\"o.checkOrdine==1 && o.confermato==0\\\">\\n            <ion-col  style=\\\"color: tomato;\\\">\\n              <div>\\n                Telefono\\n              </div>\\n            </ion-col>\\n            <ion-col>\\n              <div>\\n                {{o.telefono}}\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n          <ion-row *ngIf=\\\"o.checkOrdine==1 && o.confermato==0\\\">\\n          \\n            <ion-col>\\n              <div>\\n                <ion-button size=\\\"small\\\" expand=\\\"block\\\" (click)=\\\"segnala(o,'ordine')\\\">\\n                  Segnala\\n                </ion-button>\\n              </div>\\n            </ion-col>\\n          \\n            <ion-col>\\n              <div>\\n                <ion-button size=\\\"small\\\" expand=\\\"block\\\" (click)=\\\"conferma(o, 'ordine')\\\">\\n                  Conferma\\n                </ion-button>\\n              </div>\\n            </ion-col>\\n          \\n          </ion-row>\\n        </ion-grid>\\n      </ion-card-content>\\n    </ion-card>\\n\\n    <ion-infinite-scroll threshold=\\\"100px\\\" (ionInfinite)=\\\"loadmore($event)\\\">\\n      <ion-infinite-scroll-content loadingSpinner=\\\"bubbles\\\" loadingText=\\\"Caricamento...\\\">\\n      </ion-infinite-scroll-content>\\n    </ion-infinite-scroll>\\n\\n  </ion-list>\\n\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { OrdiniPageRoutingModule } from './ordini-routing.module';\n\nimport { OrdiniPage } from './ordini.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    OrdiniPageRoutingModule\n  ],\n  declarations: [OrdiniPage]\n})\nexport class OrdiniPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJvcmRpbmkucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/services/api-service.service';\nimport { Router } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-ordini',\n  templateUrl: './ordini.page.html',\n  styleUrls: ['./ordini.page.scss'],\n})\n\nexport class OrdiniPage implements OnInit {\n  data: any;\n  page: number;\n  psize:number;\n\n  constructor(private apiService: ApiService, private router: Router, private alertCtrl: AlertController) {\n    this.page = 0\n    this.psize = 5\n    this.apiService.getOrdini(this.psize, this.page).then(retApiService => {\n      retApiService.subscribe( response => {\n      //console.info(response);\n        this.data = response[\"_msg\"];\n        console.info(this.data);\n      },\n      errore =>{\n        console.info(errore[\"error\"]);\n      })\n    });\n    \n  }\n  \n  conferma(item:any,tipo:string){\n    this.router.navigate([\"/feedback\", { \"item\": JSON.stringify(item), \"tipo\" : tipo}]);\n  }\n\n  async segnala(item:any,tipo:string){\n    if(item.segnalato){\n      const alert = await this.alertCtrl.create({\n        header: \"Attezione\",\n        message: \"Hai gia' inviato una segnalazione per questo prodotto! Verrai contattato presto da qualcuno del nostro team.\",\n        buttons: [\n          {\n            text: 'OK',\n            role: 'cancel',\n          },\n          \n        ]\n      })\n      await alert.present();\n    }\n    else{\n      this.router.navigate([\"/segnalazione\", { \"item\": JSON.stringify(item), \"tipo\": tipo }]);\n    }\n    \n  }\n\n  loadmore(event) {\n    this.page++\n    this.apiService.getOrdini(this.psize, this.page).then(retApiService => {\n      retApiService.subscribe(results => {\n        for (const t of results[\"_msg\"]) {\n          this.data.push(t);\n        };\n        event.target.complete();\n      });\n    })\n  }\n\n  ngOnInit() {}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OrdiniPage } from './ordini.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OrdiniPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrdiniPageRoutingModule {}\n"]}
{"version":3,"sources":["./src/app/pages/prodotti/prodotti.module.ts","./src/app/pages/prodotti/prodotti.page.html","./src/app/pages/prodotti/prodotti.page.ts","./src/app/pages/prodotti/prodotti-routing.module.ts","./src/app/pages/prodotti/prodotti.page.scss"],"names":[],"mappings":"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","file":"pages-prodotti-prodotti-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProdottiPageRoutingModule } from './prodotti-routing.module';\n\nimport { ProdottiPage } from './prodotti.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ProdottiPageRoutingModule\n  ],\n  declarations: [ProdottiPage]\n})\nexport class ProdottiPageModule {}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>prodotti</ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button autoHide=\\\"false\\\"></ion-menu-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <ion-list>\\n\\n      <ion-card style=\\\"background-color:rgb(29, 39, 61)\\\" *ngIf=\\\"products?.length==0\\\">\\n        <ion-card-header>\\n          <ion-card-subtitle>\\n            <div class=\\\"ion-text-center\\\">\\n              Non hai inserito ancora nessun prodotto!\\n            </div>\\n          </ion-card-subtitle>\\n          <ion-card-content>\\n            Premi il pulsante con il simbolo + per inserire un prodotto.\\n          </ion-card-content>\\n        </ion-card-header>\\n      </ion-card>\\n\\n      <ion-card style=\\\"background-color: black;\\\" *ngFor=\\\"let p of products\\\">\\n        <ion-card-content>\\n          <ion-card-title>\\n              <div class=\\\"ion-text-center\\\">\\n                {{ p.nome }}\\n              </div>\\n            </ion-card-title>\\n\\n            <ion-img id=\\\"imgpreview\\\" src=\\\"{{ p.img }}\\\"></ion-img>\\n\\n            <ion-row>\\n                  {{ p.descrizione }}\\n            </ion-row>\\n          \\n        <ion-row>\\n          <ion-col size=\\\"5\\\" style=\\\"color: tomato;\\\">\\n            Prezzo:\\n          </ion-col>\\n          <ion-col>\\n            <div class=\\\"ion-text-center\\\">\\n              {{p.prezzo}} TOKEN\\n            </div>  \\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col size=\\\"5\\\"  style=\\\"color: tomato;\\\">\\n            Quantita:\\n          </ion-col>\\n          <ion-col *ngIf=\\\"p.quantita>0\\\">\\n            <div class=\\\"ion-text-center\\\">\\n              {{p.quantita}}\\n            </div>\\n          </ion-col>\\n          <ion-col *ngIf=\\\"p.quantita==0\\\">\\n            <div class=\\\"ion-text-center\\\" style=\\\"color: red;\\\">\\n              ESAURITO\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col>\\n            <div class=\\\"ion-text-center\\\">\\n              Stato\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col class=\\\"ion-text-center\\\">\\n            <ion-text style=\\\"color: red;\\\" *ngIf=\\\"p.accettato==0 && p.rifiutato==1\\\">Il prodotto è stato rifiutato, eliminalo per non vederlo più tra quelli inseriti </ion-text>\\n            <ion-text (click)=\\\"popover(0)\\\" style=\\\"color: red;\\\" *ngIf=\\\"p.accettato==0 && p.rifiutato==0\\\">In attesa di accettazione...  <ion-icon name=\\\"help-circle-outline\\\" (click)=\\\"popover(0)\\\"></ion-icon></ion-text>\\n            <ion-text (click)=\\\"popover(1)\\\" style=\\\"color: green;\\\" *ngIf=\\\"p.accettato==1 && p.rifiutato==0\\\">Disponibile Online!  <ion-icon name=\\\"help-circle-outline\\\" (click)=\\\"popover(1)\\\"></ion-icon></ion-text> \\n            \\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col *ngIf=\\\"p.accettato==1\\\">\\n            <ion-button (click)=\\\"aggiungi(p.id)\\\">\\n             Aggiungi\\n            </ion-button>\\n          </ion-col>\\n       \\n          <ion-col class=\\\"ion-text-right\\\">\\n            <ion-button class=\\\"ion-float-right\\\" fill=\\\"clear\\\" (click)=\\\"delete(p.id)\\\">\\n              <ion-icon style=\\\"color: red;\\\" ios=\\\"ios-trash\\\" md=\\\"md-trash\\\"></ion-icon>\\n            </ion-button>\\n          </ion-col>\\n\\n          </ion-row>\\n        </ion-card-content>\\n      </ion-card>\\n    </ion-list>\\n\\n  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n    <ion-fab-button color=\\\"warning\\\" (click)=\\\"openNewProduct()\\\">\\n      <ion-icon ios=\\\"ios-add-circle\\\" md=\\\"md-add-circle\\\"></ion-icon>\\n    </ion-fab-button>\\n  </ion-fab>\\n</ion-content>\\n\";","import { Component, OnInit } from '@angular/core';\nimport { NavController, MenuController, ModalController, ToastController, AlertController } from '@ionic/angular';\nimport { ApiService } from 'src/app/services/api-service.service';\nimport { Bene } from 'src/app/models/bene';\n\n\n@Component({\n  selector: 'app-prodotti',\n  templateUrl: './prodotti.page.html',\n  styleUrls: ['./prodotti.page.scss'],\n})\nexport class ProdottiPage implements OnInit {\n\n  products: Bene[];\n  upperPrice: number;\n  lowerPrice: number;\n  \n  constructor(public navCtrl: NavController, public menuCtrl: MenuController, public modalCtrl: ModalController, public toastCtrl: ToastController, private apiService: ApiService, private alertController: AlertController) {\n  }\n\n  ngOnInit() {}\n\n  ionViewWillEnter(){\n    this.upperPrice = 500;\n    this.lowerPrice = 0;\n    this.initializeItems();\n  }\n\n  async aggiungi(id:number) {\n    const alert = await this.alertController.create({\n      header: \"Aggiungi\",\n      message:\"Inserire la quantità da aggiungere\",\n      inputs: [\n        {\n          name: 'quantita',\n          type: \"number\",\n          placeholder: 'Quantità'\n        }],\n      buttons: [\n        {\n          text: 'Annulla',\n          role: 'cancel',\n        },\n        {\n          text: 'Ok',\n          handler: data => {\n            data.quantita = data.quantita == \"\" ? 0 : data.quantita\n            data.quantita=parseInt(data.quantita)\n            if(data.quantita<=0){\n              data.quantita=0\n              return \n            }\n            this.apiService.addBeneQuantita(id,data.quantita).then(Res => {\n              Res.subscribe({\n                next:()=>{\n                  this.apiService.simplyAlert(()=>{this.initializeItems()},\"Operazione effettuata\", \"Quantità aggiunta.\")\n                },\n                error:()=>{\n                  this.apiService.simplyAlert()\n                }\n              })\n            })\n          }\n        }]\n    });\n    await alert.present();\n  }\n\n\n  initializeItems() {\n    this.apiService.getMyBeni().then(retApiService => {\n      retApiService.subscribe({\n        next:(result)=>{\n          result[\"_msg\"].forEach(element => {\n            element[\"img\"]= element[\"img\"] != null ? 'data:image/jpeg;base64,'+element[\"img\"] : this.apiService.img\n          });\n          this.products = result[\"_msg\"];\n        },\n        error:()=>{\n          this.apiService.simplyAlert()\n        }\n      })\n      \n    });\n  }\n\n  delete(idProd:number){\n    this.apiService.confirmAlert(\n      () =>{\n        this.apiService.deleteBene(idProd).then(delRes => {\n          delRes.subscribe({\n            next:(res) =>{\n              this.apiService.simplyAlert(()=>{this.initializeItems()},\"Operazione effettuata\", \"Prodotto eliminato correttamente.\")\n            },\n            error:()=>{\n              this.apiService.simplyAlert()\n            }\n          })\n        })\n      },\n      \"Attenzione\",\n      \"Vuoi davvero eliminare questo prodotto?\"\n    )\n    \n  }\n\n  openNewProduct(){\n    this.navCtrl.navigateForward(\"/nuovo-prodotto\");\n  }\n\n  popover(type){\n    let msg = type == 0 ?\n    \"Il prodotto da te inserito è in stato di attesa, verrà valutato se considerarlo valido. Controlla nei prossimi giorni\" :\n    \"Il prodotto è attualmente online, gli utenti potranno ora acquistarlo usando gli Andron! Controlla se hai già degli ordini!\"\n    this.apiService.createPopover(msg)\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProdottiPage } from './prodotti.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProdottiPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProdottiPageRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9kb3R0aS5wYWdlLnNjc3MifQ== */\";"],"sourceRoot":"webpack:///"}
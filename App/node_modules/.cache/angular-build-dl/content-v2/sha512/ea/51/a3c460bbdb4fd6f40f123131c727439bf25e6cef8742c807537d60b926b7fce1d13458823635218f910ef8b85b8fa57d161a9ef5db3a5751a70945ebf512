{"version":3,"sources":["./src/app/pages/feedback/feedback-routing.module.ts","./src/app/pages/feedback/feedback.page.html","./src/app/pages/feedback/feedback.page.scss","./src/app/pages/feedback/feedback.module.ts","./src/app/pages/feedback/feedback.page.ts","./src/app/rating/rating.component.ts","./src/app/rating/rating.component.html"],"names":[],"mappings":"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","file":"pages-feedback-feedback-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FeedbackPage } from './feedback.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FeedbackPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FeedbackPageRoutingModule {}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Conferma</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content *ngIf=\\\"this.tipo=='ordine'\\\">\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-card-title>\\n        <div class=\\\"ion-text-center\\\">\\n          Feedback\\n        </div>\\n      </ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-grid>\\n        <ion-row> \\n          <div>\\n            Prima di confermare l'arrivo, inserisci un feedback su questo ordine! Facci sapere come ti sei trovato e cosa pensi!\\n          </div>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-list>\\n    <ion-item>\\n      <ion-textarea placeholder=\\\"Messaggio...\\\"  maxlength=\\\"400\\\" [(ngModel)]=\\\"msg\\\"></ion-textarea>\\n    </ion-item>\\n    <ion-item>\\n      <ion-col text-center>\\n        <rating [(rating)]=\\\"valutazione\\\"></rating>\\n      </ion-col>\\n    </ion-item>\\n  </ion-list>\\n  \\n  <p>{{this.errore}}</p>\\n  <ion-button size=\\\"small\\\" expand=\\\"block\\\" (click)=\\\"confermaOrdine(this.data)\\\">\\n    Conferma\\n  </ion-button>\\n</ion-content>\\n\\n<ion-content *ngIf=\\\"this.tipo=='servizio'\\\">\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-card-title>\\n        <div class=\\\"ion-text-center\\\">\\n          Feedback\\n        </div>\\n      </ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-grid>\\n        <ion-row>\\n          <div>\\n            Prima di confermare di aver ricevuto il servizio, lascia un messaggio per recensire l'utente che l'ha offerto! Inserisci anche tua valutazione!  \\n          </div>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-card-content>\\n  </ion-card>\\n \\n  <ion-list>\\n    <ion-item>\\n      <ion-textarea placeholder=\\\"Messaggio...\\\"  maxlength=\\\"400\\\"[(ngModel)]=\\\"msg\\\"></ion-textarea>\\n    </ion-item>\\n    <ion-item>\\n      <ion-col text-center>\\n        <rating [(rating)]=\\\"valutazione\\\"></rating>\\n      </ion-col>\\n    </ion-item>\\n  </ion-list>\\n  <p>{{this.errore}}</p>\\n  <ion-button size=\\\"small\\\" expand=\\\"block\\\" (click)=\\\"servizioEseguito(this.data.id)\\\">\\n    Conferma\\n  </ion-button>\\n</ion-content>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJmZWVkYmFjay5wYWdlLnNjc3MifQ== */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FeedbackPageRoutingModule } from './feedback-routing.module';\nimport {RatingComponent} from '../../rating/rating.component'\nimport { FeedbackPage } from './feedback.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    FeedbackPageRoutingModule\n  ],\n  declarations: [FeedbackPage,RatingComponent]\n})\nexport class FeedbackPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ApiService } from 'src/app/services/api-service.service';\nimport { AlertController, NavController } from '@ionic/angular';\n\n\n@Component({\n  selector: 'app-feedback',\n  templateUrl: './feedback.page.html',\n  styleUrls: ['./feedback.page.scss'],\n})\n\nexport class FeedbackPage implements OnInit {\n  tipo:string \n  data:any\n  msg:string;\n  valutazione: number;\n  errore:string;\n\n  constructor(private route: ActivatedRoute, private api: ApiService, private alertCtrl: AlertController,private navCtrl: NavController) { \n    this.data = JSON.parse(this.route.snapshot.paramMap.get(\"item\"));\n    this.tipo = this.route.snapshot.paramMap.get(\"tipo\");\n    console.log(this.data,this.tipo)\n  }\n\n  //! SPOSTA SU FEEDBACK\n  async servizioEseguito(id: number) {\n    \n    if (this.msg && this.valutazione){\n      if (this.msg.trim() == '') {\n        this.errore = \"Compila adeguatamente i campi\"\n        return\n      }\n      const alert = await this.alertCtrl.create({\n        header: \"Vuoi confermare questo servizio?\",\n        buttons: [\n          {\n            text: 'No',\n            role: 'cancel',\n          },\n          {\n            text: 'Si',\n            handler: () => {\n              this.api.confermaServizio(this.data.id,this.data.nodoEsponente,this.msg,this.valutazione).then(retApiService => {\n                retApiService.subscribe(results => {\n                  this.alertCtrl.create({\n                    header: \"Operazione effettuata correttamente.\",\n                    buttons: [\n                      {\n                        text: 'OK',\n                        role: 'cancel',\n                        handler: () => {\n                          this.navCtrl.navigateForward(\"/home\");\n                        }\n                      }]\n                  }).then(alert => alert.present());\n                });\n              })\n            }\n          }\n        ]\n      })\n      await alert.present();\n    }\n    else{\n      this.errore=\"Compila tutti i campi\"\n    }\n  }\n\n\n  async confermaOrdine(dati:any){\n    \n    if (this.msg && this.valutazione) {\n      if (this.msg.trim() == '') {\n        this.errore = \"Compila adeguatamente i campi\"\n        return\n      }\n      const alert = await this.alertCtrl.create({\n        header: \"Vuoi confermare questo ordine?\",\n        buttons: [\n          {\n            text: 'No',\n            role: 'cancel',\n          },\n          {\n            text: 'Si',\n            handler: () => {\n              this.api.confermaOrdine(this.data.id,this.data.nodoImpresa,this.msg,this.valutazione).then(retApiService => {\n                retApiService.subscribe(results => {\n                  this.alertCtrl.create({\n                    header: \"Operazione effettuata correttamente.\",\n                    buttons: [\n                      {\n                        text: 'OK',\n                        role: 'cancel',\n                        handler: () => {\n                          this.navCtrl.navigateForward(\"/home\");\n                        }\n                      }]\n                  }).then(alert => alert.present());\n                });\n              })\n            }\n          }\n        ]\n      })\n      await alert.present();\n    }\n    else{\n      this.errore=\"Compila tutti i campi.\"\n    }\n  }\n\n  ngOnInit() {\n  }\n\n}\n","\nimport { Component, Input, EventEmitter, Output } from \"@angular/core\";\n\n\nenum COLORS {\n  GREY = \"#E0E0E0\",\n  GREEN = \"#76FF03\",\n  YELLOW = \"#FFCA28\",\n  RED = \"#DD2C00\"\n}\n\n@Component({\n  selector: \"rating\",\n  templateUrl: \"rating.component.html\"\n})\n\n\nexport class RatingComponent {\n  @Input() rating: number;\n\n  @Output() ratingChange: EventEmitter<number> = new EventEmitter();;\n\n\n  constructor() { }\n\n  \n\n  rate(index: number) {\n    this.rating=index;\n    this.ratingChange.emit(this.rating);\n  }\n\n  getColor(index: number) {\n    /* function to return the color of a star based on what\n     index it is. All stars greater than the index are assigned\n     a grey color , while those equal or less than the rating are\n     assigned a color depending on the rating. Using the following criteria:\n  \n          1-2 stars: red\n          3 stars  : yellow\n          4-5 stars: green \n    */\n   if(this.isAboveRating(index)){\n     return COLORS.GREY;\n   }\n   switch( this.rating){\n     case 1:\n     case 2:\n       return COLORS.RED;\n     case 3:\n       return COLORS.YELLOW;\n     case 4:\n     case 5:\n       return COLORS.GREEN;\n     default:\n       return COLORS.GREY\n   }\n  }\n\n  isAboveRating(index:number): boolean{\n    return index>this.rating\n  }\n\n\n}","export default \"<div>\\n  <ion-icon size=\\\"large\\\" name=\\\"star\\\" *ngFor=\\\"let num of [1,2,3,4,5]\\\"\\n    (click)=\\\"rate(num)\\\" [ngStyle]=\\\"{'color':getColor(num)}\\\">\\n  </ion-icon>\\n</div>\\n\\n\";"],"sourceRoot":"webpack:///"}
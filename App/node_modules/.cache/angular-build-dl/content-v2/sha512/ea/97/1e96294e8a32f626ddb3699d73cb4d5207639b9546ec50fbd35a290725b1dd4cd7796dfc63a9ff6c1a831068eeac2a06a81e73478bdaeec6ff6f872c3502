{"version":3,"sources":["webpack:///src/app/pages/prodotti/prodotti.module.ts","webpack:///src/app/pages/prodotti/prodotti.page.html","webpack:///src/app/pages/prodotti/prodotti.page.ts","webpack:///src/app/pages/prodotti/prodotti-routing.module.ts","webpack:///src/app/pages/prodotti/prodotti.page.scss"],"names":["ProdottiPageModule","imports","declarations","ProdottiPage","navCtrl","request","utilities","products","initializeItems","id","alertController","create","header","message","inputs","name","type","placeholder","buttons","text","role","handler","data","quantita","parseInt","put","path","simplyAlert","operation","error","alertError","then","alert","present","get","result","forEach","element","img","idProd","confirmAlert","handlerYes","res","navigateForward","msg","createPopover","selector","template","routes","component","ProdottiPageRoutingModule","forChild","exports"],"mappings":"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","file":"pages-prodotti-prodotti-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProdottiPageRoutingModule } from './prodotti-routing.module';\n\nimport { ProdottiPage } from './prodotti.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ProdottiPageRoutingModule\n  ],\n  declarations: [ProdottiPage]\n})\nexport class ProdottiPageModule {}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>prodotti</ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button autoHide=\\\"false\\\"></ion-menu-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <ion-list>\\n\\n      <ion-card style=\\\"background-color:rgb(29, 39, 61)\\\" *ngIf=\\\"products?.length==0\\\">\\n        <ion-card-header>\\n          <ion-card-subtitle>\\n            <div class=\\\"ion-text-center\\\">\\n              Non hai inserito ancora nessun prodotto!\\n            </div>\\n          </ion-card-subtitle>\\n          <ion-card-content>\\n            Premi il pulsante con il simbolo + per inserire un prodotto.\\n          </ion-card-content>\\n        </ion-card-header>\\n      </ion-card>\\n\\n      <ion-card style=\\\"background-color: black;\\\" *ngFor=\\\"let p of products\\\">\\n        <ion-card-content>\\n          <ion-card-title>\\n              <div class=\\\"ion-text-center\\\">\\n                {{ p.nome }}\\n              </div>\\n            </ion-card-title>\\n\\n            <ion-img id=\\\"imgpreview\\\" src=\\\"{{ p.img }}\\\"></ion-img>\\n\\n            <ion-row>\\n                  {{ p.descrizione }}\\n            </ion-row>\\n          \\n        <ion-row>\\n          <ion-col size=\\\"5\\\" style=\\\"color: tomato;\\\">\\n            Prezzo:\\n          </ion-col>\\n          <ion-col>\\n            <div class=\\\"ion-text-center\\\">\\n              {{p.andron}} ANDRON\\n            </div>  \\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col size=\\\"5\\\"  style=\\\"color: tomato;\\\">\\n            Quantita:\\n          </ion-col>\\n          <ion-col *ngIf=\\\"p.quantita>0\\\">\\n            <div class=\\\"ion-text-center\\\">\\n              {{p.quantita}}\\n            </div>\\n          </ion-col>\\n          <ion-col *ngIf=\\\"p.quantita==0\\\">\\n            <div class=\\\"ion-text-center\\\" style=\\\"color: red;\\\">\\n              ESAURITO\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col>\\n            <div class=\\\"ion-text-center\\\">\\n              Stato\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col class=\\\"ion-text-center\\\">\\n            <ion-text style=\\\"color: red;\\\" *ngIf=\\\"p.accettato==0 && p.rifiutato==1\\\">Il prodotto è stato rifiutato, eliminalo per non vederlo più tra quelli inseriti </ion-text>\\n            <ion-text (click)=\\\"popover(0)\\\" style=\\\"color: red;\\\" *ngIf=\\\"p.accettato==0 && p.rifiutato==0\\\">In attesa di accettazione...  <ion-icon name=\\\"help-circle-outline\\\" (click)=\\\"popover(0)\\\"></ion-icon></ion-text>\\n            <ion-text (click)=\\\"popover(1)\\\" style=\\\"color: green;\\\" *ngIf=\\\"p.accettato==1 && p.rifiutato==0\\\">Disponibile Online!  <ion-icon name=\\\"help-circle-outline\\\" (click)=\\\"popover(1)\\\"></ion-icon></ion-text> \\n            \\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col *ngIf=\\\"p.accettato==1\\\">\\n            <ion-button (click)=\\\"aggiungi(p.id)\\\">\\n             Aggiungi\\n            </ion-button>\\n          </ion-col>\\n       \\n          <ion-col class=\\\"ion-text-right\\\">\\n            <ion-button class=\\\"ion-float-right\\\" fill=\\\"clear\\\" (click)=\\\"delete(p.id)\\\">\\n              <ion-icon style=\\\"color: red;\\\" ios=\\\"ios-trash\\\" md=\\\"md-trash\\\"></ion-icon>\\n            </ion-button>\\n          </ion-col>\\n\\n          </ion-row>\\n        </ion-card-content>\\n      </ion-card>\\n    </ion-list>\\n\\n  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n    <ion-fab-button color=\\\"warning\\\" (click)=\\\"openNewProduct()\\\">\\n      <ion-icon ios=\\\"ios-add-circle\\\" md=\\\"md-add-circle\\\"></ion-icon>\\n    </ion-fab-button>\\n  </ion-fab>\\n</ion-content>\\n\";","import { Component } from '@angular/core';\nimport { NavController } from '@ionic/angular';\nimport { RequestService } from 'src/app/services/request.service';\nimport { UtilitiesService } from 'src/app/services/utilities.service';\n\n\n@Component({\n  selector: 'app-prodotti',\n  templateUrl: './prodotti.page.html',\n  styleUrls: ['./prodotti.page.scss'],\n})\nexport class ProdottiPage {\n\n  products: any = [];\n  \n  constructor(public navCtrl: NavController, private request:RequestService, private utilities: UtilitiesService) {\n    this.initializeItems();\n  }\n\n  aggiungi(id:number) {\n    this.utilities.alertController.create({\n      header: \"Aggiungi\",\n      message:\"Inserire la quantità da aggiungere\",\n      inputs: [\n        {\n          name: 'quantita',\n          type: \"number\",\n          placeholder: 'Quantità'\n        }],\n      buttons: [\n        {\n          text: 'Annulla',\n          role: 'cancel',\n        },\n        {\n          text: 'Ok',\n          handler: data => {\n            data.quantita = data.quantita == \"\" ? 0 : data.quantita\n            data.quantita=parseInt(data.quantita)\n\n            if(data.quantita<=0){\n              data.quantita=0\n              return \n            }\n\n            this.request.put({\n              path:\"/products/mine\"+id,\n              data:{ quantita : data.quantita },\n              handler:()=>{\n                this.utilities.simplyAlert({\n                  operation:()=>{this.initializeItems()},\n                  header:\"Operazione effettuata\", \n                  message:\"Quantità aggiunta.\"\n                })\n              },\n              error:(error)=>{\n                this.utilities.alertError({})\n              }\n            })\n          }\n        }]\n    }).then(alert => alert.present());\n  }\n\n\n  initializeItems() {\n    this.request.get({\n      path:\"/products/mine\",\n      handler:(result)=>{\n        result[\"_msg\"].forEach(element => {\n          element[\"img\"]= element[\"img\"] != null ? 'data:image/jpeg;base64,'+element[\"img\"] : this.utilities.img\n        });\n        this.products = result[\"_msg\"];\n      },\n      error:()=>{\n        this.utilities.alertError({})\n      }\n    })\n\n  }\n\n  delete(idProd:number){\n    this.utilities.confirmAlert({\n      header:\"Attenzione\",\n      message:\"Vuoi davvero eliminare questo prodotto?\",\n      handlerYes:()=>{\n        this.request.delete({\n          path:\"/products/mine/\"+idProd,\n          handler:(res) =>{\n            this.utilities.simplyAlert({\n              operation:()=>{this.initializeItems()},\n              header:\"Operazione effettuata\", \n              message:\"Prodotto eliminato correttamente.\"\n            })\n          },\n          error:()=>{\n            this.utilities.alertError({})\n          }\n        })\n      }\n    })\n    \n  }\n\n  openNewProduct(){\n    this.navCtrl.navigateForward(\"/nuovo-prodotto\");\n  }\n\n  popover(type){\n    let msg = type == 0 ?\n    \"Il prodotto da te inserito è in stato di attesa, verrà valutato se considerarlo valido. Controlla nei prossimi giorni\" :\n    \"Il prodotto è attualmente online, gli utenti potranno ora acquistarlo usando gli Andron! Controlla se hai già degli ordini!\"\n    this.utilities.createPopover(msg)\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProdottiPage } from './prodotti.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProdottiPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProdottiPageRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9kb3R0aS5wYWdlLnNjc3MifQ== */\";"]}
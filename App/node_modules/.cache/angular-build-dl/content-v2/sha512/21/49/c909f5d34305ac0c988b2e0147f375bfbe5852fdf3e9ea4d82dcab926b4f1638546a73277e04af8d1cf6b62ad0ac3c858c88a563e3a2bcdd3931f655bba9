{"version":3,"sources":["webpack:///src/app/pages/richieste-miei-servizi/richieste-miei-servizi.page.scss","webpack:///src/app/pages/richieste-miei-servizi/richieste-miei-servizi.page.ts","webpack:///src/app/pages/richieste-miei-servizi/richieste-miei-servizi.module.ts","webpack:///src/app/pages/richieste-miei-servizi/richieste-miei-servizi-routing.module.ts","webpack:///src/app/pages/richieste-miei-servizi/richieste-miei-servizi.page.html"],"names":["RichiesteMieiServiziPage","api","router","searchmyRichiesteTODO","getRichiesteTODO","then","retApiService","subscribe","next","results","myRichiesteTODO","console","log","error","simplyAlert","id","stato","msg","confirmAlert","setRichiesta","item","tipo","sagnalazioneEsponente","navigate","JSON","stringify","deleteRichiesta","selector","template","RichiesteMieiServiziPageModule","imports","declarations","routes","path","component","RichiesteMieiServiziPageRoutingModule","forChild","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCSFA,wBAAwB;AAMnC,0CAAoBC,GAApB,EAA6CC,MAA7C,EAA8D;AAAA;;AAA1C,eAAAD,GAAA,GAAAA,GAAA;AAAyB,eAAAC,MAAA,GAAAA,MAAA;AAAoB;;AAN9B;AAAA;AAAA,iBAQnC,4BAAmB;AACjB,iBAAKC,qBAAL;AACD;AAVkC;AAAA;AAAA,iBAYnC,iCAAwB;AAAA;;AACtB,iBAAKF,GAAL,CAASG,gBAAT,GAA4BC,IAA5B,CAAiC,UAAAC,aAAa,EAAI;AAChDA,2BAAa,CAACC,SAAd,CAAwB;AACtBC,oBAAI,EAAC,cAACC,OAAD,EAAW;AACd,uBAAI,CAACC,eAAL,GAAuBD,OAAO,CAAC,MAAD,CAA9B;AACAE,yBAAO,CAACC,GAAR,CAAY,KAAI,CAACF,eAAjB;AACD,iBAJqB;AAKtBG,qBAAK,EAAC,iBAAI;AACR,uBAAI,CAACZ,GAAL,CAASa,WAAT;AACD;AAPqB,eAAxB;AASD,aAVD;AAWD;AAxBkC;AAAA;AAAA,iBA0BnC,kBAASC,EAAT,EAAoBC,KAApB,EAAgC;AAAA;;AAC9BL,mBAAO,CAACC,GAAR,CAAYI,KAAZ;;AACA,gBAAIA,KAAK,IAAI,WAAb,EAA0B;AACxB,mBAAKC,GAAL,GAAW,iCAAX;AACD;;AACD,gBAAID,KAAK,IAAI,WAAb,EAA0B;AACxB,mBAAKC,GAAL,GAAW,iCAAX;AACD;;AACD,gBAAID,KAAK,IAAI,UAAb,EAAyB;AACvB,mBAAKC,GAAL,GAAW,uCAAX;AACD;;AACD,gBAAID,KAAK,IAAI,UAAb,EAAwB;AACtB,mBAAKC,GAAL,GAAU,2CAAV;AACD;;AAGD,iBAAKhB,GAAL,CAASiB,YAAT,CACE,YAAI;AACF,oBAAI,CAACjB,GAAL,CAASkB,YAAT,CAAsBJ,EAAtB,EAA0BC,KAA1B,EAAiCX,IAAjC,CAAsC,UAAAC,aAAa,EAAI;AACrDA,6BAAa,CAACC,SAAd,CAAwB;AACtBC,sBAAI,EAAC,cAACC,OAAD,EAAW;AACd,0BAAI,CAACR,GAAL,CAASa,WAAT,CAAqB,YAAI;AAAC,4BAAI,CAACX,qBAAL;AAA6B,qBAAvD,EAAwD,uBAAxD,EAAgF,EAAhF;AACD,mBAHqB;AAItBU,uBAAK,EAAE,eAACA,MAAD,EAAS;AACd,0BAAI,CAACZ,GAAL,CAASa,WAAT;AACD;AANqB,iBAAxB;AAQD,eATD;AAUD,aAZH,EAaE,YAbF,EAcE,KAAKG,GAdP;AAgBD;AA1DkC;AAAA;AAAA,iBA4DnC,iBAAQG,IAAR,EAAmBC,IAAnB,EAAiC;AAE/B,gBAAID,IAAI,CAACE,qBAAT,EAAgC;AAC9B,mBAAKrB,GAAL,CAASa,WAAT,CAAqB,YAAI,CAAE,CAA3B,EAA4B,YAA5B,EAA0C,8GAA1C;AACD,aAFD,MAGK;AACH,mBAAKZ,MAAL,CAAYqB,QAAZ,CAAqB,CAAC,eAAD,EAAkB;AAAE,wBAAQC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAV;AAAgC,wBAAQC;AAAxC,eAAlB,CAArB;AACD;AAEF;AArEkC;AAAA;AAAA,iBAuEnC,iBAAQN,EAAR,EAAiB;AAAA;;AACf,iBAAKd,GAAL,CAASiB,YAAT,CACE,YAAI;AACF,oBAAI,CAACjB,GAAL,CAASyB,eAAT,CAAyBX,EAAzB,EAA6BV,IAA7B,CAAkC,UAAAC,aAAa,EAAI;AACjDA,6BAAa,CAACC,SAAd,CAAwB;AACtBC,sBAAI,EAAC,gBAAI;AACP,0BAAI,CAACP,GAAL,CAASa,WAAT,CAAqB,YAAI;AAAC,4BAAI,CAACX,qBAAL;AAA6B,qBAAvD,EAAwD,uBAAxD,EAAgF,sBAAhF;AACD,mBAHqB;AAItBU,uBAAK,EAAC,iBAAI;AACR,0BAAI,CAACZ,GAAL,CAASa,WAAT;AACD;AANqB,iBAAxB;AAQD,eATD;AAUD,aAZH,EAaE,YAbF,EAcE,0FAdF;AAgBD;AAxFkC;;AAAA;AAAA,S;;;;gBAP5B;;gBADA;;;;AAQId,8BAAwB,6DALpC,gEAAU;AACT2B,gBAAQ,EAAE,4BADD;AAETC,gBAAQ,EAAR,oFAFS;;AAAA,OAAV,CAKoC,E,+EAMV,+E,EAA6B,sD,EANnB,GAAxB5B,wBAAwB,CAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCUA6B,8BAA8B;AAAA;AAAA,O;;AAA9BA,oCAA8B,6DAT1C,+DAAS;AACRC,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,4GAJO,CADD;AAORC,oBAAY,EAAE,CAAC,qFAAD;AAPN,OAAT,CAS0C,GAA9BF,8BAA8B,CAA9B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdb,UAAMG,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,qCAAqC;AAAA;AAAA,O;;AAArCA,2CAAqC,6DAJjD,+DAAS;AACRL,eAAO,EAAE,CAAC,6DAAaM,QAAb,CAAsBJ,MAAtB,CAAD,CADD;AAERK,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIiD,GAArCF,qCAAqC,CAArC;;;;;;;;;;;;;;;;AChBb;AAAe;;;AAAA","file":"pages-richieste-miei-servizi-richieste-miei-servizi-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyaWNoaWVzdGUtbWllaS1zZXJ2aXppLnBhZ2Uuc2NzcyJ9 */\";","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiService } from 'src/app/services/api-service.service';\n\n@Component({\n  selector: 'app-richieste-miei-servizi',\n  templateUrl: './richieste-miei-servizi.page.html',\n  styleUrls: ['./richieste-miei-servizi.page.scss'],\n})\nexport class RichiesteMieiServiziPage {\n\n\n  myRichiesteTODO: any\n  msg: string;\n  \n  constructor(private api: ApiService, private router : Router) { }\n\n  ionViewWillEnter() {\n    this.searchmyRichiesteTODO();\n  }\n  \n  searchmyRichiesteTODO() {\n    this.api.getRichiesteTODO().then(retApiService => {\n      retApiService.subscribe({\n        next:(results)=>{\n          this.myRichiesteTODO = results[\"_msg\"];\n          console.log(this.myRichiesteTODO)\n        },\n        error:()=>{\n          this.api.simplyAlert()\n        }\n      });\n    })\n  }\n\n  setStato(id:number ,stato:string){\n    console.log(stato)\n    if (stato == \"rifiutato\") {\n      this.msg = \"Vuoi rifiutare questo servizio?\"\n    }\n    if (stato == \"accettato\") {\n      this.msg = \"Vuoi accettare questo servizio?\"\n    }\n    if (stato == \"eseguito\") {\n      this.msg = \"Hai davvero eseguito questo servizio?\"\n    }\n    if (stato == \"concluso\"){\n      this.msg =\"Confermi di aver ricevuto la transazione?\"\n    }\n    \n    \n    this.api.confirmAlert(\n      ()=>{\n        this.api.setRichiesta(id, stato).then(retApiService => {\n          retApiService.subscribe({\n            next:(results)=>{\n              this.api.simplyAlert(()=>{this.searchmyRichiesteTODO()},\"Operazione Effettuata\",\"\")\n            },\n            error: (error)=>{\n              this.api.simplyAlert()\n            }\n          })\n        })\n      },\n      \"Attenzione\",\n      this.msg\n    )\n  }\n\n  segnala(item: any, tipo: string) {\n\n    if (item.sagnalazioneEsponente) {\n      this.api.simplyAlert(()=>{},\"Attenzione\", \"Hai gia' inviato una segnalazione per questo prodotto! Verrai contattato presto da qualcuno del nostro team.\")\n    }\n    else {\n      this.router.navigate([\"/segnalazione\", { \"item\": JSON.stringify(item), \"tipo\": tipo }]);\n    }\n    \n  }\n\n  elimina(id:number){\n    this.api.confirmAlert(\n      ()=>{\n        this.api.deleteRichiesta(id).then(retApiService => {\n          retApiService.subscribe({\n            next:()=>{\n              this.api.simplyAlert(()=>{this.searchmyRichiesteTODO()},\"Operazione effettuata\",\"Richiesta eliminata.\")\n            },\n            error:()=>{\n              this.api.simplyAlert()\n            }\n          })      \n        })\n      },\n      \"Attenzione\",\n      \"Vuoi davvero eliminare questa richiesta? Non sar√† possibile annullare questa operazione.\"\n    )\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RichiesteMieiServiziPageRoutingModule } from './richieste-miei-servizi-routing.module';\n\nimport { RichiesteMieiServiziPage } from './richieste-miei-servizi.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RichiesteMieiServiziPageRoutingModule\n  ],\n  declarations: [RichiesteMieiServiziPage]\n})\nexport class RichiesteMieiServiziPageModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RichiesteMieiServiziPage } from './richieste-miei-servizi.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RichiesteMieiServiziPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RichiesteMieiServiziPageRoutingModule {}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>\\n      Richieste di Servizi\\n    </ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button autoHide=\\\"false\\\" style=\\\"color: white\\\"></ion-menu-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n\\n<ion-content>\\n  <ion-list>\\n    <ion-card style=\\\"background-color:rgb(29, 39, 61)\\\" *ngIf=\\\"this.myRichiesteTODO?.length==0\\\">\\n      <ion-card-header>\\n        <ion-card-subtitle>\\n          <div class=\\\"ion-text-center\\\">\\n            Nessuna richiesta di servizi da svolgere!\\n          </div>\\n        </ion-card-subtitle>\\n      </ion-card-header>\\n    </ion-card>\\n    <ion-card style=\\\"background-color: rgb(29, 39, 61);\\\" *ngFor=\\\"let item of myRichiesteTODO\\\">\\n      \\n      <ion-card-content>\\n        <ion-card-subtitle style=\\\"font-size:10px\\\" class=\\\"ion-text-wrap\\\">\\n          <ion-grid>\\n            <ion-row>\\n              <ion-col>\\n                <div>\\n                  Da:\\n                </div>\\n              </ion-col>\\n              <ion-col size=\\\"8\\\">\\n                <div class=\\\"ion-text-center\\\">\\n                  {{item.nome}} {{item.cognome}}\\n                </div>\\n              </ion-col>\\n            </ion-row>\\n          </ion-grid>\\n\\n        </ion-card-subtitle>\\n        <ion-card-title color=\\\"black\\\" lines=\\\"none\\\" style=\\\"font-size:20px\\\" class=\\\"ion-text-center\\\" class=\\\"ion-text-wrap\\\">{{item.nomeServizio}}</ion-card-title>\\n\\n      \\n        <ion-grid>\\n          <ion-row>\\n            <div>\\n              {{item.messaggio}}\\n            </div>\\n          </ion-row>\\n        \\n          <ion-row >\\n            <ion-col style=\\\"color: tomato;\\\" class=\\\"ion-text-center\\\">\\n                Data:\\n            </ion-col>\\n          </ion-row>\\n          <ion-row>\\n                La richiesta √® prevista per giorno {{item.data}} alle ore {{item.orario}} per {{item.ore}} Ore.\\n          </ion-row>\\n\\n          <ion-row>\\n            <ion-col>\\n              <div class=\\\"ion-text-center\\\">\\n                {{item.data}}\\n              </div>\\n            </ion-col>\\n            <ion-col>\\n              <div class=\\\"ion-text-center\\\">\\n                {{item.orario}}\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n          <ion-row>\\n            <ion-col><div class=\\\"ion-text-center\\\"  style=\\\"color: tomato;\\\">Contatti</div></ion-col>\\n          </ion-row>\\n          <ion-row>\\n            <ion-col>\\n              <div  style=\\\"color: tomato;\\\">\\n                telefono:\\n              </div>\\n            </ion-col>\\n            <ion-col>\\n              <div>\\n                {{item.tel}}\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n          \\n          <ion-row>\\n            <ion-col>\\n              <div  style=\\\"color: tomato;\\\" class=\\\"ion-text-center\\\">\\n                email:\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n          <ion-row>\\n            <ion-col>\\n              <div>\\n                {{item.email}}\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n\\n          <ion-row *ngIf=\\\"item.stato=='attesa'\\\">\\n            <ion-col>\\n              <div class=\\\"ion-text-center\\\">\\n                <ion-button size=\\\"small\\\" expand=\\\"block\\\"  (click)=\\\"setStato(item.id,'rifiutato')\\\">\\n                  Rifiuta\\n                </ion-button>\\n              </div>\\n            </ion-col>\\n            <ion-col>\\n              <div class=\\\"ion-text-center\\\">\\n                <ion-button size=\\\"small\\\" expand=\\\"block\\\" (click)=\\\"setStato(item.id,'accettato')\\\">\\n                  Accetta\\n                </ion-button>\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n\\n          <ion-row *ngIf=\\\"item.stato=='accettato'\\\">\\n            <ion-col>\\n              <div class=\\\"ion-text-center\\\">\\n                <ion-button size=\\\"small\\\" expand=\\\"block\\\" (click)=\\\"elimina(item.id)\\\">\\n                  Elimina\\n                </ion-button>\\n              </div>\\n            </ion-col>\\n            <ion-col>\\n              <div class=\\\"ion-text-center\\\">\\n                <ion-button size=\\\"small\\\" expand=\\\"block\\\" (click)=\\\"setStato(item.id,'eseguito')\\\">\\n                  Eseguito\\n                </ion-button>\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n          \\n          <ion-row *ngIf=\\\"item.stato=='eseguito'\\\">\\n            <ion-col>\\n              <div>\\n                In attesa di conferma. Una volta confermato riceverai i Token sul tuo portafoglio\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n\\n          <ion-row *ngIf=\\\"item.stato=='eseguito'\\\">\\n            <ion-col>\\n              <div>\\n                <ion-button size=\\\"small\\\" expand=\\\"block\\\" (click)=\\\"segnala(item,'servizio',0)\\\">\\n                  Segnala\\n                </ion-button>\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n\\n          <ion-row *ngIf=\\\"item.stato=='confermato'\\\">\\n            <ion-col>\\n              <div>\\n                Transazione effettuata\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n          <ion-row *ngIf=\\\"item.stato=='confermato'\\\">\\n            <ion-col>\\n              <div class=\\\"ion-text-center\\\">\\n                <ion-button size=\\\"small\\\" expand=\\\"block\\\" (click)=\\\"setStato(item.id,'concluso')\\\">\\n                  Concludi\\n                </ion-button>\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n      \\n      </ion-card-content>\\n    </ion-card>\\n    \\n  </ion-list>\\n\\n</ion-content>\\n\";"]}
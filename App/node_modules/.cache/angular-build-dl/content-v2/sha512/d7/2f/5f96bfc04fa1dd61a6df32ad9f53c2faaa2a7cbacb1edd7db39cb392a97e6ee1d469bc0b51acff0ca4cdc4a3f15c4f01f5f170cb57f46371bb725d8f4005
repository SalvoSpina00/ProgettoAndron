{"version":3,"sources":["webpack:///src/app/pages/richiesta/richiesta.module.ts","webpack:///src/app/pages/richiesta/richiesta.page.ts","webpack:///src/app/pages/richiesta/richiesta.page.scss","webpack:///src/app/pages/richiesta/richiesta-routing.module.ts","webpack:///src/app/pages/richiesta/richiesta.page.html"],"names":["RichiestaPageModule","imports","declarations","RichiestaPage","route","apiService","alertCtrl","router","servizio","errore","idServizio","JSON","parse","snapshot","paramMap","get","console","log","getServizio","then","retApiService","subscribe","results","id","tipo","nome","navigate","getBudget","response","saldo","budget","create","header","message","buttons","text","role","alert","present","date","msg","trim","handler","richiesta","idUtente","selector","template","routes","path","component","RichiestaPageRoutingModule","forChild","exports"],"mappings":"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","file":"pages-richiesta-richiesta-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RichiestaPageRoutingModule } from './richiesta-routing.module';\n\nimport { RichiestaPage } from './richiesta.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RichiestaPageRoutingModule\n  ],\n  declarations: [RichiestaPage]\n})\nexport class RichiestaPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiService } from 'src/app/services/api-service.service';\nimport { AlertController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-richiesta',\n  templateUrl: './richiesta.page.html',\n  styleUrls: ['./richiesta.page.scss'],\n})\nexport class RichiestaPage implements OnInit {\n  \n  idServizio: number;\n  servizio= null;\n\n  msg: string;\n  date: Date;\n  errore:string;\n\n  constructor(private route: ActivatedRoute, private apiService: ApiService,private alertCtrl: AlertController, private router:Router) {\n   \n   }\n\n  ngOnInit() {\n    this.errore=\"\";\n    this.idServizio = JSON.parse(this.route.snapshot.paramMap.get(\"id\"));\n    console.log(this.idServizio)\n    this.getServizio()\n  }\n\n  getServizio() {\n    this.apiService.getServizio(this.idServizio).then(retApiService => {\n      retApiService.subscribe(results => {\n        this.servizio = results[\"_msg\"];\n        console.log(this.servizio);\n      });\n    })\n  }\n\n  feedback(id: string, tipo: string, nome: string) {\n    this.router.navigate([\"/infofeedback\", { \"id\": id, \"tipo\": tipo, \"nome\": nome }]);\n  }\n\n\n  async richiesta(){\n    \n\n    this.apiService.getBudget().then(retApiService => {\n      return retApiService.subscribe(async response => {\n        let saldo = response[\"_msg\"].budget;\n        if (saldo < 10) {\n          const alert = await this.alertCtrl.create({\n            header: \"Attenzione\",\n            message: \"Saldo insufficiente.\",\n            buttons: [\n              {\n                text: 'No',\n                role: 'cancel',\n\n              }]\n          })\n          await alert.present();\n        }\n        else{\n\n          if (this.date && this.msg) {\n            if (this.msg.trim() == '') {\n              this.errore = \"Compila adeguatamente il campo messaggio\"\n              return\n            }\n\n            const alert = await this.alertCtrl.create({\n              header: \"Attenzione\",\n              message: \"Una volta effettuata la richiesta i tuoi token saranno rimossi. Verranno inseriti se la richiesta non andra' a buon fine\",\n              buttons: [\n                {\n                  text: 'No',\n                  role: 'cancel',\n                },\n                {\n                  text: 'Si',\n                  handler: () => {\n                    this.apiService.richiesta(this.msg, this.date, this.servizio.id, this.servizio.idUtente).then(retApiService => {\n                      retApiService.subscribe(results => {\n                        this.alertCtrl.create({\n                          header: \"Richiesta Effettuata Correttamente\",\n                          buttons: [\n                            {\n                              text: 'OK',\n                              role: 'cancel',//! con role cancel anche se non viene premuto viene eseguito l'handler\n                            }]\n                        }).then(alert => alert.present());\n                      });\n                    })\n                  }\n                }\n              ]\n            })\n            await alert.present();\n          }\n          else {\n            this.errore = \"Tutti i campi devono essere compilati\"\n          }\n\n          \n        }\n      })\n    })\n\n\n    \n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyaWNoaWVzdGEucGFnZS5zY3NzIn0= */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RichiestaPage } from './richiesta.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RichiestaPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RichiestaPageRoutingModule {}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Richiesta</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-card>\\n    <ion-card-content>\\n    <ion-card-subtitle>\\n      <ion-row>\\n        <ion-col>\\n          <div class=\\\"ion-text-center\\\">\\n            Fornito da:\\n          </div>\\n        </ion-col>\\n        <ion-col class=\\\"ion-text-center\\\">\\n          <div (click)=\\\"feedback(servizio?.idUtente,'utente',servizio?.Nome + ' ' + servizio?.Cognome)\\\">\\n            {{servizio?.Nome}} {{servizio?.Cognome}}\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n    </ion-card-subtitle>\\n    <ion-card-title>\\n      <div class=\\\"ion-text-center\\\">\\n        {{servizio?.nomeServizio}}\\n      </div>\\n    </ion-card-title>\\n    <ion-grid>\\n      <ion-row>\\n        {{servizio?.descrizione}}\\n      </ion-row>\\n      <ion-row>\\n        <ion-col>\\n          <div class=\\\"ion-text-center\\\" style=\\\"color: tomato;\\\">\\n            Prezzo:\\n          </div>\\n        </ion-col>\\n        <ion-col>\\n          <div class=\\\"ion-text-center\\\">\\n            {{servizio?.prezzo}} TOKEN\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-list>\\n    <ion-item>\\n      <ion-textarea placeholder=\\\"Messaggio...\\\"  maxlength=\\\"200\\\" [(ngModel)]=\\\"msg\\\"></ion-textarea>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label>Data del servizio</ion-label>\\n      <ion-datetime displayFormat=\\\"MMM DD, YYYY HH:mm\\\" min=\\\"2020\\\" max=\\\"2025\\\" [(ngModel)]=\\\"date\\\"></ion-datetime>\\n    </ion-item>\\n  </ion-list>\\n\\n  <ion-button id=\\\"myButtonYellow\\\" expand=\\\"full\\\" (click)=\\\"richiesta()\\\">Richiedi Servizio</ion-button>\\n\\n  <p>{{ this.errore }}</p>\\n</ion-content>\\n\\n\";"]}
{"version":3,"sources":["webpack:///src/app/pages/register-utente/register-utente.page.scss","webpack:///src/app/pages/register-utente/register-utente.page.html","webpack:///src/app/pages/register-utente/register-utente.module.ts","webpack:///src/app/pages/register-utente/register-utente-routing.module.ts","webpack:///src/app/pages/register-utente/register-utente.page.ts"],"names":["RegisterUtentePageModule","imports","declarations","routes","path","component","RegisterUtentePageRoutingModule","forChild","exports","RegisterUtentePage","navCtrl","plugin","request","utilities","formBuilder","imgSrc","img","foto","errore","varLength","username","min","max","nome","cognome","email","stato","regione","citta","via","defaultMessages","required","spaces","maxlength","minlength","errorMessages","type","message","password","check","data","cf","telefono","cap","registerUserForm","group","maxLength","minLength","validatorHasWhiteSpaces","pattern","validatorCheckPassword","validatorNotEmpty","validatorDate","validatorCF","get","_username","value","_password","_nome","_cognome","_date","_cf","toUpperCase","_telefono","_mail","_stato","_regione","_citta","_via","_cap","_foto","post","handler","simplyAlert","operation","navigateForward","header","error","status","alertError","$event","chooseIm","imgPath","selector","template"],"mappings":"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","file":"pages-register-utente-register-utente-module-es5.js","sourcesContent":["export default \"ion-img {\\n  height: 30vh;\\n  width: auto;\\n  margin: auto;\\n  display: block;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3JlZ2lzdGVyLXV0ZW50ZS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxZQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxjQUFBO0FBQ0oiLCJmaWxlIjoicmVnaXN0ZXItdXRlbnRlLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1pbWd7XG4gICAgaGVpZ2h0OiAzMHZoO1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIG1hcmdpbjogYXV0bztcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBcbn0iXX0= */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Registrazione</ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content id=\\\"myContent\\\" class=\\\"ion-padding ion-text-center\\\">\\n\\n  <form [formGroup]=\\\"registerUserForm\\\" (ngSubmit)=\\\"submit()\\\">\\n    <ion-list>\\n      <ion-title class=\\\"ion-text-center\\\">Dati per il Login</ion-title>\\n\\n        <ion-item> <!--!Username-->\\n          <ion-label position=\\\"floating\\\">Username</ion-label>\\n          <ion-input formControlName=\\\"username\\\" autocapitalize inputmode=\\\"text\\\"></ion-input>\\n        </ion-item>\\n        <div *ngFor=\\\"let error of errorMessages.username\\\">\\n          <ng-container *ngIf=\\\"username.hasError(error.type) && (username.dirty || username.touched)\\\">\\n            <small class=\\\"error-message\\\">{{error.message}}</small>\\n          </ng-container>\\n        </div>\\n\\n        <ion-item> <!--!Password-->\\n          <ion-label position=\\\"floating\\\">Password</ion-label>\\n          <ion-input formControlName=\\\"password\\\" type=\\\"password\\\" autocapitalize inputmode=\\\"text\\\"></ion-input>\\n        </ion-item>\\n        <div *ngFor=\\\"let error of errorMessages.password\\\">\\n          <ng-container *ngIf=\\\"password.hasError(error.type) && (password.dirty || password.touched)\\\">\\n            <small class=\\\"error-message\\\">{{error.message}}</small>\\n          </ng-container>\\n        </div>\\n\\n        <ion-item> <!--!check Passowrd-->\\n          <ion-label position=\\\"floating\\\">Verifica Password</ion-label>\\n          <ion-input formControlName=\\\"check\\\" type=\\\"password\\\" autocapitalize inputmode=\\\"text\\\"></ion-input>\\n        </ion-item>\\n        <div *ngFor=\\\"let error of errorMessages.check\\\">\\n          <ng-container *ngIf=\\\"check.hasError(error.type) && (check.dirty || check.touched)\\\">\\n            <small class=\\\"error-message\\\">{{error.message}}</small>\\n          </ng-container>\\n        </div>\\n\\n      <ion-title class=\\\"ion-text-center\\\">Anagrafica</ion-title>\\n\\n        <ion-img src=\\\"{{ imgSrc }}\\\"></ion-img>\\n        <ion-button *ngIf=\\\"this.plugin.mobile()\\\" id=\\\"myButtonYellow\\\" expand=\\\"full\\\" (click)=\\\"chooseImage()\\\">Inserisci una tua foto</ion-button>\\n        <ion-button *ngIf=\\\"!this.plugin.mobile()\\\" id=\\\"myButtonYellow\\\" expand=\\\"full\\\" (click)=\\\"f.click()\\\">Inserisci una tua foto</ion-button>\\n        <input  class=\\\"ion-hide\\\" #f type=\\\"file\\\" (change)=\\\"chooseImage($event)\\\" id=\\\"file-input\\\" accept=\\\"image/png, image/jpeg\\\">\\n        \\n\\n        <ion-item> <!--!Nome-->\\n          <ion-label position=\\\"floating\\\">Nome</ion-label>\\n          <ion-input formControlName=\\\"nome\\\" autocapitalize inputmode=\\\"text\\\"></ion-input>\\n        </ion-item>\\n        <div *ngFor=\\\"let error of errorMessages.nome\\\">\\n          <ng-container *ngIf=\\\"nome.hasError(error.type) && (nome.dirty || nome.touched)\\\">\\n            <small class=\\\"error-message\\\">{{error.message}}</small>\\n          </ng-container>\\n        </div>\\n\\n        <ion-item> <!--!Cognome-->\\n          <ion-label position=\\\"floating\\\">Cognome</ion-label>\\n          <ion-input formControlName=\\\"cognome\\\" autocapitalize inputmode=\\\"text\\\"></ion-input>\\n        </ion-item>\\n        <div *ngFor=\\\"let error of errorMessages.cognome\\\">\\n          <ng-container *ngIf=\\\"cognome.hasError(error.type) && (cognome.dirty || cognome.touched)\\\">\\n            <small class=\\\"error-message\\\">{{error.message}}</small>\\n          </ng-container>\\n        </div>\\n\\n        <ion-item> <!--!data-->\\n          <ion-label position=\\\"floating\\\">Data di nascita</ion-label>\\n          <ion-input formControlName=\\\"data\\\" autocapitalize type=\\\"date\\\" inputmode=\\\"text\\\"></ion-input>\\n        </ion-item>\\n        <div *ngFor=\\\"let error of errorMessages.data\\\">\\n          <ng-container *ngIf=\\\"data.hasError(error.type) && (data.dirty || data.touched)\\\">\\n            <small class=\\\"error-message\\\">{{error.message}}</small>\\n          </ng-container>\\n        </div>\\n        \\n        <ion-item> <!--!cf-->\\n          <ion-label position=\\\"floating\\\">Codice Fiscale</ion-label>\\n          <ion-input formControlName=\\\"cf\\\" autocapitalize inputmode=\\\"text\\\"></ion-input>\\n        </ion-item>\\n        <div *ngFor=\\\"let error of errorMessages.cf\\\">\\n          <ng-container *ngIf=\\\"cf.hasError(error.type) && (cf.dirty || cf.touched)\\\">\\n            <small class=\\\"error-message\\\">{{error.message}}</small>\\n          </ng-container>\\n        </div>\\n\\n        <ion-item> <!--!telefono-->\\n          <ion-label position=\\\"floating\\\">Telefono</ion-label>\\n          <ion-input formControlName=\\\"telefono\\\" autocapitalize inputmode=\\\"text\\\"></ion-input>\\n        </ion-item>\\n        <div *ngFor=\\\"let error of errorMessages.telefono\\\">\\n          <ng-container *ngIf=\\\"telefono.hasError(error.type) && (telefono.dirty || telefono.touched)\\\">\\n            <small class=\\\"error-message\\\">{{error.message}}</small>\\n          </ng-container>\\n        </div>\\n\\n        <ion-item> <!--!email-->\\n          <ion-label position=\\\"floating\\\">Email</ion-label>\\n          <ion-input formControlName=\\\"email\\\" autocapitalize inputmode=\\\"text\\\"></ion-input>\\n        </ion-item>\\n        <div *ngFor=\\\"let error of errorMessages.email\\\">\\n          <ng-container *ngIf=\\\"email.hasError(error.type) && (email.dirty || email.touched)\\\">\\n            <small class=\\\"error-message\\\">{{error.message}}</small>\\n          </ng-container>\\n        </div>\\n\\n        <ion-item> <!--!stato-->\\n          <ion-label position=\\\"floating\\\">Stato</ion-label>\\n          <ion-input formControlName=\\\"stato\\\" autocapitalize inputmode=\\\"text\\\"></ion-input>\\n        </ion-item>\\n        <div *ngFor=\\\"let error of errorMessages.stato\\\">\\n          <ng-container *ngIf=\\\"stato.hasError(error.type) && (stato.dirty || stato.touched)\\\">\\n            <small class=\\\"error-message\\\">{{error.message}}</small>\\n          </ng-container>\\n        </div>\\n\\n        <ion-item> <!--!regione-->\\n          <ion-label position=\\\"floating\\\">Regione</ion-label>\\n          <ion-input formControlName=\\\"regione\\\" autocapitalize inputmode=\\\"text\\\"></ion-input>\\n        </ion-item>\\n        <div *ngFor=\\\"let error of errorMessages.regione\\\">\\n          <ng-container *ngIf=\\\"regione.hasError(error.type) && (regione.dirty || regione.touched)\\\">\\n            <small class=\\\"error-message\\\">{{error.message}}</small>\\n          </ng-container>\\n        </div>\\n\\n\\n        <ion-item> <!--!Citta-->\\n          <ion-label position=\\\"floating\\\">Città</ion-label>\\n          <ion-input formControlName=\\\"citta\\\" autocapitalize inputmode=\\\"text\\\"></ion-input>\\n        </ion-item>\\n        <div *ngFor=\\\"let error of errorMessages.citta\\\">\\n          <ng-container *ngIf=\\\"citta.hasError(error.type) && (citta.dirty || citta.touched)\\\">\\n            <small class=\\\"error-message\\\">{{error.message}}</small>\\n          </ng-container>\\n        </div>\\n\\n\\n        <ion-item> <!--!Via-->\\n          <ion-label position=\\\"floating\\\">Via</ion-label>\\n          <ion-input formControlName=\\\"via\\\" autocapitalize inputmode=\\\"text\\\"></ion-input>\\n        </ion-item>\\n        <div *ngFor=\\\"let error of errorMessages.via\\\">\\n          <ng-container *ngIf=\\\"via.hasError(error.type) && (via.dirty || via.touched)\\\">\\n            <small class=\\\"error-message\\\">{{error.message}}</small>\\n          </ng-container>\\n        </div>\\n\\n        <ion-item> <!--!cap-->\\n          <ion-label position=\\\"floating\\\">CAP</ion-label>\\n          <ion-input formControlName=\\\"cap\\\" autocapitalize inputmode=\\\"text\\\"></ion-input>\\n        </ion-item>\\n        <div *ngFor=\\\"let error of errorMessages.cap\\\">\\n          <ng-container *ngIf=\\\"cap.hasError(error.type) && (cap.dirty || cap.touched)\\\">\\n            <small class=\\\"error-message\\\">{{error.message}}</small>\\n          </ng-container>\\n        </div>\\n        <p class=\\\"error-message\\\">{{this.errore}}</p>\\n\\n      <ion-button [disabled]=\\\"!registerUserForm.valid\\\" type=\\\"submit\\\" expand=\\\"block\\\">\\n        Registrati\\n      </ion-button>\\n    </ion-list>\\n  </form>\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterUtentePageRoutingModule } from './register-utente-routing.module';\n\nimport { RegisterUtentePage } from './register-utente.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RegisterUtentePageRoutingModule\n  ],\n  declarations: [RegisterUtentePage]\n})\nexport class RegisterUtentePageModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterUtentePage } from './register-utente.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterUtentePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterUtentePageRoutingModule {}\n","import { Component } from '@angular/core';\nimport { NavController } from '@ionic/angular';\nimport { PluginService } from 'src/app/services/plugin.service';\nimport { RequestService } from 'src/app/services/request.service';\nimport { UtilitiesService } from 'src/app/services/utilities.service';\nimport { FormBuilder, Validators } from '@angular/forms';\n\n\n\n\n@Component({\n  selector: 'app-register-utente',\n  templateUrl: './register-utente.page.html',\n  styleUrls: ['./register-utente.page.scss'],\n})\nexport class RegisterUtentePage{\n\n  imgSrc: any = this.utilities.img;\n  foto: any = null;\n  errore: string = \"\";\n\n  //#region Variables\n  get username(){\n    return this.registerUserForm.get(\"username\")\n  }\n  get password(){\n    return this.registerUserForm.get(\"password\")\n  }\n  get check(){\n    return this.registerUserForm.get(\"check\")\n  }\n\n\n  get nome(){\n    return this.registerUserForm.get(\"nome\")\n  }\n  get cognome(){\n    return this.registerUserForm.get(\"cognome\")\n  }\n  get data(){\n    return this.registerUserForm.get(\"data\")\n  }\n  get cf(){\n    return this.registerUserForm.get(\"cf\")\n  }\n  get telefono(){\n    return this.registerUserForm.get(\"telefono\")\n  }\n  get email(){\n    return this.registerUserForm.get(\"email\")\n  }\n  get stato(){\n    return this.registerUserForm.get(\"stato\")\n  }\n  get regione(){\n    return this.registerUserForm.get(\"regione\")\n  }\n  get citta(){\n    return this.registerUserForm.get(\"citta\")\n  }\n  get via(){\n    return this.registerUserForm.get(\"via\")\n  }\n  get cap(){\n    return this.registerUserForm.get(\"cap\")\n  }\n  //#endregion\n  \n  varLength={\n    username : { min: 5, max: 50},\n\n    nome :     { min: 5, max: 50},\n    cognome :  { min: 5, max: 50},\n    email :    { min: 5, max: 100},\n    stato   :  { min: 5, max: 50},\n    regione :  { min: 5, max: 50},\n    citta :    { min: 5, max: 50},\n    via :      { min: 5, max: 100},\n  }\n\n  defaultMessages={\n    required:\"Questo campo è obbligatorio\",\n    spaces: \"Non sono ammessi spazi\",\n    maxlength: (max) =>{\n      return `Massimo ${ max } caratteri`\n    },\n    minlength: (min) =>{\n      return `Minimo ${ min } caratteri`\n    }\n  }\n\n  public errorMessages = {\n    username: [\n      { type: \"required\",  message: this.defaultMessages.required },\n      { type: \"maxlength\", message: this.defaultMessages.maxlength(this.varLength.username.max) },\n      { type: \"minlength\", message: this.defaultMessages.minlength(this.varLength.username.min) },\n      { type: \"spaces\",    message: this.defaultMessages.spaces}\n    ],\n    password: [\n      { type: \"required\",  message: this.defaultMessages.required },\n      { type: \"pattern\",   message: \"Minimo 8 caratteri, una lettera maiuscola, una minuscola, un numero e un carattere speciale, massimo 30 caratteri\"}\n    ],\n    check: [\n      { type: \"required\",  message: this.defaultMessages.required },\n      { type: \"different\", message: \"Le password devono coincidere\" },\n    ],\n\n\n    nome: [\n      { type: \"required\",  message: this.defaultMessages.required},\n      { type: \"maxlength\", message: this.defaultMessages.maxlength(this.varLength.nome.max) },\n      { type: \"minlength\", message: this.defaultMessages.minlength(this.varLength.nome.min) },\n    ],\n    cognome: [\n      { type: \"required\",  message: this.defaultMessages.required },\n      { type: \"maxlength\", message: this.defaultMessages.maxlength(this.varLength.cognome.max) },\n      { type: \"minlength\", message: this.defaultMessages.minlength(this.varLength.cognome.min) },\n    ],\n    data: [\n      { type: \"required\",  message: this.defaultMessages.required },\n      { type: \"minorenne\", message: \"Devi essere maggiorenne per iscriverti ad Andron\" },\n    ],\n    cf: [\n      { type: \"required\",  message: this.defaultMessages.required },\n      { type: \"invalidCF\", message: \"Il formato del codice fiscale non è corretto\" },\n    ],\n    telefono: [\n      { type: \"required\",  message: this.defaultMessages.required },\n      { type: \"pattern\",   message: \"Il formato del numero di telefono non è corretto\" },\n    ],\n    email: [\n      { type: \"required\",  message: this.defaultMessages.required },\n      { type: \"maxlength\", message: this.defaultMessages.maxlength(this.varLength.email.max) },\n      { type: \"minlength\", message: this.defaultMessages.minlength(this.varLength.email.min) },\n      { type: \"email\",     message: \"Il formato dell'email non è corretto\" },\n    ],\n    stato: [\n      { type: \"required\",  message: this.defaultMessages.required },\n      { type: \"maxlength\", message: this.defaultMessages.maxlength(this.varLength.stato.max) },\n      { type: \"minlength\", message: this.defaultMessages.minlength(this.varLength.stato.min) },\n    ],\n    regione: [\n      { type: \"required\",  message: this.defaultMessages.required },\n      { type: \"maxlength\", message: this.defaultMessages.maxlength(this.varLength.regione.max) },\n      { type: \"minlength\", message: this.defaultMessages.minlength(this.varLength.regione.min) },\n    ],\n    citta: [\n      { type: \"required\",  message: this.defaultMessages.required },\n      { type: \"maxlength\", message: this.defaultMessages.maxlength(this.varLength.citta.max) },\n      { type: \"minlength\", message: this.defaultMessages.minlength(this.varLength.citta.min) },\n    ],\n    via: [\n      { type: \"required\",  message: this.defaultMessages.required },\n      { type: \"maxlength\", message: this.defaultMessages.maxlength(this.varLength.via.max) },\n      { type: \"minlength\", message: this.defaultMessages.minlength(this.varLength.via.min) },\n    ],\n    cap: [\n      { type: \"required\",  message: this.defaultMessages.required },\n      { type: \"pattern\",    message: \"Il formato del CAP non è corretto\" },\n    ],\n  }\n\n  registerUserForm = this.formBuilder.group({\n    username: ['', [\n                    Validators.required,\n                    Validators.maxLength(this.varLength.username.max),\n                    Validators.minLength(this.varLength.username.min),\n                    this.utilities.validatorHasWhiteSpaces // spaces\n                  ]\n              ],\n    password: ['', [\n                    Validators.required,\n                    Validators.pattern(\"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,30}$\")\n                  ]\n              ],\n    check:    ['', [\n                    Validators.required, \n                    this.utilities.validatorCheckPassword // different\n                  ]\n              ],\n    \n    nome:     ['', [\n                    Validators.required,\n                    Validators.maxLength(this.varLength.nome.max),\n                    Validators.minLength(this.varLength.nome.min),\n                    this.utilities.validatorNotEmpty // required\n                  ]\n              ],\n    cognome:  ['', [\n                    Validators.required,\n                    Validators.maxLength(this.varLength.cognome.max),\n                    Validators.minLength(this.varLength.cognome.min),\n                    this.utilities.validatorNotEmpty \n                  ]\n              ],\n    data:     ['', [\n                    Validators.required,\n                    this.utilities.validatorDate //minorenne\n                  ]\n              ],\n    cf:       ['', [\n                    Validators.required,\n                    this.utilities.validatorCF //invaliCF\n                  ]\n              ],\n    telefono: ['', [\n                    Validators.required,\n                    Validators.pattern(\"[0-9]{10,12}\")\n                  ]\n              ],\n    email:    ['', [\n                    Validators.required,\n                    Validators.maxLength(this.varLength.email.max),\n                    Validators.minLength(this.varLength.email.min),\n                    Validators.email,\n                  ]\n              ],\n    stato:    ['', [\n                    Validators.required,\n                    Validators.maxLength(this.varLength.stato.max),\n                    Validators.minLength(this.varLength.stato.min),\n                    this.utilities.validatorNotEmpty\n                  ]\n              ],\n    regione:  ['', [\n                    Validators.required,\n                    Validators.maxLength(this.varLength.regione.max),\n                    Validators.minLength(this.varLength.regione.min),\n                    this.utilities.validatorNotEmpty\n                  ]\n              ],\n    citta:    ['', [\n                    Validators.required,\n                    Validators.maxLength(this.varLength.citta.max),\n                    Validators.minLength(this.varLength.citta.min),\n                    this.utilities.validatorNotEmpty\n                  ]\n              ],\n    via:      ['', [\n                    Validators.required,\n                    Validators.maxLength(this.varLength.via.max),\n                    Validators.minLength(this.varLength.via.min),\n                    this.utilities.validatorNotEmpty\n                  ]\n              ],\n    cap:      ['', [\n                    Validators.required,\n                    Validators.pattern(\"[0-9]{5}\")\n                  ]\n              ],\n  })\n\n\n  constructor(private navCtrl: NavController, private plugin : PluginService, private request: RequestService, private utilities: UtilitiesService, private formBuilder: FormBuilder) {}\n\n\n  public submit(){\n\n    this.errore = \"\";\n    if (this.foto == null){\n      this.errore = \"Inserisci una tua foto\"\n      return\n    }\n    \n    let data={\n      _username:      this.registerUserForm.value.username,\n      _password:      this.registerUserForm.value.password,\n      _nome:          this.registerUserForm.value.nome,\n      _cognome:       this.registerUserForm.value.cognome,\n      _date:          this.registerUserForm.value.data,\n      _cf:            this.registerUserForm.value.cf.toUpperCase(),\n      _telefono:      this.registerUserForm.value.telefono,\n      _mail:          this.registerUserForm.value.email,\n      _stato:         this.registerUserForm.value.stato,\n      _regione:       this.registerUserForm.value.regione,\n      _citta:         this.registerUserForm.value.citta,\n      _via:           this.registerUserForm.value.via,\n      _cap:           this.registerUserForm.value.cap,\n      _foto:          this.foto\n    }\n\n    \n    this.request.post({\n      path:\"/register\",\n      data:data,\n\n      handler:()=>{\n        this.utilities.simplyAlert({\n          operation:()=>{this.navCtrl.navigateForward(\"/login\")},\n          header:\"Operazione effettuata\",\n          message:\"Registrazione avvenuta con successo.\"\n        })\n      },\n      error:(error)=>{\n        if(error.status==401){\n          this.errore=\"Username già in uso.\"\n        }\n        else{\n          this.utilities.alertError({\n            handler:()=>{this.navCtrl.navigateForward(\"/login\")},\n            header:\"Errore\",\n            message:\"Si è verificato un errore nella registrazione. Riprova più tardi.\"\n          })\n        }\n      }\n    })\n    \n  }\n\n  chooseImage($event=null){\n    this.plugin.chooseIm(\n      $event,\n      (imgPath)=>{\n        this.imgSrc = 'data:image/jpeg;base64,' + imgPath;\n        this.foto = imgPath\n      }\n    )\n  }\n\n}\n"]}
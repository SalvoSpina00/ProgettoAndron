{"version":3,"sources":["webpack:///src/app/pages/feedback/feedback-routing.module.ts","webpack:///src/app/pages/feedback/feedback.page.html","webpack:///src/app/pages/feedback/feedback.page.scss","webpack:///src/app/pages/feedback/feedback.module.ts","webpack:///src/app/pages/feedback/feedback.page.ts","webpack:///src/app/rating/rating.component.ts","webpack:///src/app/rating/rating.component.html"],"names":["routes","path","component","FeedbackPageRoutingModule","imports","forChild","exports","FeedbackPageModule","declarations","FeedbackPage","route","navCtrl","request","utilities","data","JSON","parse","snapshot","paramMap","get","tipo","id","msg","valutazione","errore","trim","length","confirmAlert","header","message","handlerYes","post","handler","results","simplyAlert","operation","navigateForward","error","alertError","dati","put","nodoImpresa","selector","template","COLORS","RatingComponent","ratingChange","index","rating","emit","isAboveRating","GREY","RED","YELLOW","GREEN"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,yBAAyB;AAAA;AAAA,O;;AAAzBA,+BAAyB,6DAJrC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIqC,GAAzBH,yBAAyB,CAAzB;;;;;;;;;;;;;;;;AChBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCmBFI,kBAAkB;AAAA;AAAA,O;;AAAlBA,wBAAkB,6DAT9B,+DAAS;AACRH,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,kFAJO,CADD;AAORI,oBAAY,EAAE,CAAC,2DAAD,EAAc,wEAAd;AAPN,OAAT,CAS8B,GAAlBD,kBAAkB,CAAlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCNAE,YAAY;AAOvB,8BAAoBC,KAApB,EAAmDC,OAAnD,EAAmFC,OAAnF,EAAqHC,SAArH,EAAmJ;AAAA;;AAA/H,eAAAH,KAAA,GAAAA,KAAA;AAA+B,eAAAC,OAAA,GAAAA,OAAA;AAAgC,eAAAC,OAAA,GAAAA,OAAA;AAAkC,eAAAC,SAAA,GAAAA,SAAA;AAEnH,eAAKC,IAAL,GAAYC,IAAI,CAACC,KAAL,CAAW,KAAKN,KAAL,CAAWO,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiC,MAAjC,CAAX,CAAZ;AACA,eAAKC,IAAL,GAAY,KAAKV,KAAL,CAAWO,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiC,MAAjC,CAAZ;AACD;;AAXsB;AAAA;AAAA,iBAcjB,0BAAiBE,EAAjB,EAA6B;;;;;;;;0BAC3B,KAAKC,GAAL,IAAY,KAAKC,W;;;;;AACrB,2BAAKC,MAAL,GAAY,uBAAZ;;;;4BAGE,KAAKF,GAAL,CAASG,IAAT,OAAoB,E;;;;;AACtB,2BAAKD,MAAL,GAAc,+BAAd;;;;4BAGC,KAAKF,GAAL,CAASI,MAAT,GAAgB,CAAhB,IAAqB,KAAKJ,GAAL,CAASI,MAAT,GAAgB,G;;;;;AACtC,2BAAKF,MAAL,GAAc,2CAAd;;;;AAGF,0BAAG,KAAKD,WAAL,GAAiB,CAAjB,IAAsB,KAAKA,WAAL,GAAiB,CAA1C,EAA4C;AAC1C,6BAAKC,MAAL,GAAc,qBAAd;AACD;;AAED,2BAAKX,SAAL,CAAec,YAAf,CAA4B;AAC1BC,8BAAM,EAAO,YADa;AAE1BC,+BAAO,EAAM,kCAFa;AAG1BC,kCAAU,EAAG,sBAAM;AACjB,+BAAI,CAAClB,OAAL,CAAamB,IAAb,CAAkB;AAChB9B,gCAAI,EAAC,oBAAkBoB,EADP;AAEhBP,gCAAI,EAAE;AACJ,sCAAQ,KAAI,CAACQ,GADT;AAEJ,8CAAiB,KAAI,CAACC;AAFlB,6BAFU;AAMhBS,mCAAO,EAAC,iBAACC,OAAD,EAAW;AACf,mCAAI,CAACpB,SAAL,CAAeqB,WAAf,CAA2B;AACzBC,yCAAS,EAAC,qBAAI;AAAC,uCAAI,CAACxB,OAAL,CAAayB,eAAb,CAA6B,OAA7B;AAAsC,iCAD5B;AAEzBR,sCAAM,EAAC,YAFkB;AAGzBC,uCAAO,EAAC;AAHiB,+BAA3B;AAKH,6BAZe;AAahBQ,iCAAK,EAAC,eAACA,MAAD,EAAS;AACb,mCAAI,CAACxB,SAAL,CAAeyB,UAAf,CAA0B,EAA1B;AACD;AAfe,2BAAlB;AAiBD;AArByB,uBAA5B;;;;;;;;;AAyBD;AAxDsB;AAAA;AAAA,iBA2DjB,wBAAeC,IAAf,EAAuB;;;;;;;;0BACrB,KAAKjB,GAAL,IAAY,KAAKC,W;;;;;AACrB,2BAAKC,MAAL,GAAY,uBAAZ;;;;4BAGE,KAAKF,GAAL,CAASG,IAAT,OAAoB,E;;;;;AACtB,2BAAKD,MAAL,GAAc,+BAAd;;;;4BAGC,KAAKF,GAAL,CAASI,MAAT,GAAgB,CAAhB,IAAqB,KAAKJ,GAAL,CAASI,MAAT,GAAgB,G;;;;;AACtC,2BAAKF,MAAL,GAAc,2CAAd;;;;AAGF,0BAAG,KAAKD,WAAL,GAAiB,CAAjB,IAAsB,KAAKA,WAAL,GAAiB,CAA1C,EAA4C;AAC1C,6BAAKC,MAAL,GAAc,qBAAd;AACD;;AAED,2BAAKX,SAAL,CAAec,YAAf,CAA4B;AAC1BC,8BAAM,EAAO,YADa;AAE1BC,+BAAO,EAAM,gCAFa;AAG1BC,kCAAU,EAAG,sBAAM;AACjB,gCAAI,CAAClB,OAAL,CAAa4B,GAAb,CAAiB;AACfvC,gCAAI,EAAC,kBAAgB,MAAI,CAACa,IAAL,CAAUO,EADhB;AAEfP,gCAAI,EAAE;AACJ,oCAAM,MAAI,CAACA,IAAL,CAAU2B,WADZ;AAEJ,sCAAQ,MAAI,CAACnB,GAFT;AAGJ,8CAAiB,MAAI,CAACC;AAHlB,6BAFS;AAOfS,mCAAO,EAAC,iBAACC,OAAD,EAAW;AACf,oCAAI,CAACpB,SAAL,CAAeqB,WAAf,CAA2B;AACzBC,yCAAS,EAAC,qBAAI;AAAC,wCAAI,CAACxB,OAAL,CAAayB,eAAb,CAA6B,OAA7B;AAAsC,iCAD5B;AAEzBR,sCAAM,EAAC,YAFkB;AAGzBC,uCAAO,EAAC;AAHiB,+BAA3B;AAKH,6BAbc;AAcfQ,iCAAK,EAAC,eAACA,OAAD,EAAS;AACb,oCAAI,CAACxB,SAAL,CAAeyB,UAAf,CAA0B,EAA1B;AACD;AAhBc,2BAAjB;AAkBD;AAtByB,uBAA5B;;;;;;;;;AAyBD;AArGsB;;AAAA;AAAA,S;;;;gBAZhB;;gBACA;;gBACA;;gBACA;;;;AASI7B,kBAAY,6DANxB,gEAAU;AACTiC,gBAAQ,EAAE,cADD;AAETC,gBAAQ,EAAR,sEAFS;;AAAA,OAAV,CAMwB,E,+EAOI,8D,EAAiC,4D,EAAiC,+E,EAAoC,mF,EAP1G,GAAZlC,YAAY,CAAZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTb,UAAKmC,MAAL;;AAAA,iBAAKA,MAAL,EAAW;AACT;AACA;AACA;AACA;AACD,OALD,EAAKA,MAAM,KAANA,MAAM,MAAX;;UAaaC,eAAe;AAM1B,mCAAc;AAAA;;AAHJ,eAAAC,YAAA,GAAqC,IAAI,0DAAJ,EAArC;AAGO;;AANS;AAAA;AAAA,iBAU1B,cAAKC,KAAL,EAAoB;AAClB,iBAAKC,MAAL,GAAYD,KAAZ;AACA,iBAAKD,YAAL,CAAkBG,IAAlB,CAAuB,KAAKD,MAA5B;AACD;AAbyB;AAAA;AAAA,iBAe1B,kBAASD,KAAT,EAAwB;AACtB;;;;;;;;AASD,gBAAG,KAAKG,aAAL,CAAmBH,KAAnB,CAAH,EAA6B;AAC3B,qBAAOH,MAAM,CAACO,IAAd;AACD;;AACD,oBAAQ,KAAKH,MAAb;AACE,mBAAK,CAAL;AACA,mBAAK,CAAL;AACE,uBAAOJ,MAAM,CAACQ,GAAd;;AACF,mBAAK,CAAL;AACE,uBAAOR,MAAM,CAACS,MAAd;;AACF,mBAAK,CAAL;AACA,mBAAK,CAAL;AACE,uBAAOT,MAAM,CAACU,KAAd;;AACF;AACE,uBAAOV,MAAM,CAACO,IAAd;AAVJ;AAYA;AAxCyB;AAAA;AAAA,iBA0C1B,uBAAcJ,KAAd,EAA0B;AACxB,mBAAOA,KAAK,GAAC,KAAKC,MAAlB;AACD;AA5CyB;;AAAA;AAAA,S;;;;;;;;gBACzB;;;gBAEA;;;AAHUH,qBAAe,6DAN3B,gEAAU;AACTH,gBAAQ,EAAE,QADD;AAETC,gBAAQ,EAAR;AAFS,OAAV,CAM2B,E,iFAAA,GAAfE,eAAe,CAAf;;;;;;;;;;;;;;;;ACjBb;AAAe;;;AAAA","file":"pages-feedback-feedback-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FeedbackPage } from './feedback.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FeedbackPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FeedbackPageRoutingModule {}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Conferma</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content *ngIf=\\\"this.tipo=='ordine'\\\">\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-card-title>\\n        <div class=\\\"ion-text-center\\\">\\n          Feedback\\n        </div>\\n      </ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-grid>\\n        <ion-row> \\n          <div>\\n            Prima di confermare l'arrivo, inserisci un feedback su questo ordine! Facci sapere come ti sei trovato e cosa pensi!\\n          </div>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-list>\\n    <ion-item>\\n      <ion-textarea placeholder=\\\"Messaggio...\\\"  maxlength=\\\"400\\\" [(ngModel)]=\\\"msg\\\"></ion-textarea>\\n    </ion-item>\\n    <ion-item>\\n      <ion-col text-center>\\n        <rating [(rating)]=\\\"valutazione\\\"></rating>\\n      </ion-col>\\n    </ion-item>\\n  </ion-list>\\n  \\n  <p>{{this.errore}}</p>\\n  <ion-button size=\\\"small\\\" expand=\\\"block\\\" (click)=\\\"confermaOrdine(this.data)\\\">\\n    Conferma\\n  </ion-button>\\n</ion-content>\\n\\n<ion-content *ngIf=\\\"this.tipo=='servizio'\\\">\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-card-title>\\n        <div class=\\\"ion-text-center\\\">\\n          Feedback\\n        </div>\\n      </ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-grid>\\n        <ion-row>\\n          <div>\\n            Prima di confermare di aver ricevuto il servizio, lascia un messaggio per recensire l'utente che l'ha offerto! Inserisci anche tua valutazione!  \\n          </div>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-card-content>\\n  </ion-card>\\n \\n  <ion-list>\\n    <ion-item>\\n      <ion-textarea placeholder=\\\"Messaggio...\\\"  maxlength=\\\"400\\\"[(ngModel)]=\\\"msg\\\"></ion-textarea>\\n    </ion-item>\\n    <ion-item>\\n      <ion-col text-center>\\n        <rating [(rating)]=\\\"valutazione\\\"></rating>\\n      </ion-col>\\n    </ion-item>\\n  </ion-list>\\n  <p>{{this.errore}}</p>\\n  <ion-button size=\\\"small\\\" expand=\\\"block\\\" (click)=\\\"servizioEseguito(this.data.id)\\\">\\n    Conferma\\n  </ion-button>\\n</ion-content>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJmZWVkYmFjay5wYWdlLnNjc3MifQ== */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FeedbackPageRoutingModule } from './feedback-routing.module';\nimport {RatingComponent} from '../../rating/rating.component'\nimport { FeedbackPage } from './feedback.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    FeedbackPageRoutingModule\n  ],\n  declarations: [FeedbackPage,RatingComponent]\n})\nexport class FeedbackPageModule {}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { NavController } from '@ionic/angular';\nimport { RequestService } from 'src/app/services/request.service';\nimport { UtilitiesService } from 'src/app/services/utilities.service';\n\n\n@Component({\n  selector: 'app-feedback',\n  templateUrl: './feedback.page.html',\n  styleUrls: ['./feedback.page.scss'],\n})\n\nexport class FeedbackPage {\n  tipo:string \n  data:any\n  msg:string;\n  valutazione: number;\n  errore:string;\n\n  constructor(private route: ActivatedRoute, private navCtrl: NavController, private request : RequestService, private utilities : UtilitiesService) { \n   \n    this.data = JSON.parse(this.route.snapshot.paramMap.get(\"item\"));\n    this.tipo = this.route.snapshot.paramMap.get(\"tipo\");\n  }\n\n\n  async servizioEseguito(id: number) {\n    if (!(this.msg && this.valutazione)){\n      this.errore=\"Compila tutti i campi\"\n      return\n    }\n    if (this.msg.trim() === '') {\n      this.errore = \"Compila adeguatamente i campi\"\n      return\n    }\n    if(this.msg.length<5 || this.msg.length>500){\n      this.errore = \"Minimo 5 caratteri, massimo 500 caratteri\"\n      return\n    }\n    if(this.valutazione<1 || this.valutazione>5){\n      this.errore = \"Minimo 1, massimo 5\"\n    }\n\n    this.utilities.confirmAlert({\n      header:      \"Attenzione\",\n      message:     \"Vuoi confermare questo servizio?\",\n      handlerYes : () => {\n        this.request.post({\n          path:\"/requests/mine/\"+id,\n          data: {\n            \"_msg\": this.msg,\n            \"_valutazione\" : this.valutazione\n          },\n          handler:(results)=>{\n              this.utilities.simplyAlert({\n                operation:()=>{this.navCtrl.navigateForward(\"/home\")},\n                header:\"Attenzione\",\n                message:\"Operazione Effettuata\"\n              })\n          },\n          error:(error)=>{\n            this.utilities.alertError({})\n          }\n        })\n      }\n\n    })\n    \n  }\n\n\n  async confermaOrdine(dati:any){\n    if (!(this.msg && this.valutazione)){\n      this.errore=\"Compila tutti i campi\"\n      return\n    }\n    if (this.msg.trim() === '') {\n      this.errore = \"Compila adeguatamente i campi\"\n      return\n    }\n    if(this.msg.length<5 || this.msg.length>500){\n      this.errore = \"Minimo 5 caratteri, massimo 500 caratteri\"\n      return \n    }\n    if(this.valutazione<1 || this.valutazione>5){\n      this.errore = \"Minimo 1, massimo 5\"\n    }\n\n    this.utilities.confirmAlert({\n      header:      \"Attenzione\",\n      message:     \"Vuoi confermare questo ordine?\",\n      handlerYes : () => {\n        this.request.put({\n          path:\"/orders/mine/\"+this.data.id,\n          data: {\n            \"_a\": this.data.nodoImpresa,\n            \"_msg\": this.msg,\n            \"_valutazione\" : this.valutazione\n          },\n          handler:(results)=>{\n              this.utilities.simplyAlert({\n                operation:()=>{this.navCtrl.navigateForward(\"/home\")},\n                header:\"Attenzione\",\n                message:\"Operazione Effettuata\"\n              })\n          },\n          error:(error)=>{\n            this.utilities.alertError({})\n          }\n        })\n      }\n\n    })\n  }\n\n\n\n}\n","\nimport { Component, Input, EventEmitter, Output } from \"@angular/core\";\n\n\nenum COLORS {\n  GREY = \"#E0E0E0\",\n  GREEN = \"#76FF03\",\n  YELLOW = \"#FFCA28\",\n  RED = \"#DD2C00\"\n}\n\n@Component({\n  selector: \"rating\",\n  templateUrl: \"rating.component.html\"\n})\n\n\nexport class RatingComponent {\n  @Input() rating: number;\n\n  @Output() ratingChange: EventEmitter<number> = new EventEmitter();;\n\n\n  constructor() { }\n\n  \n\n  rate(index: number) {\n    this.rating=index;\n    this.ratingChange.emit(this.rating);\n  }\n\n  getColor(index: number) {\n    /* function to return the color of a star based on what\n     index it is. All stars greater than the index are assigned\n     a grey color , while those equal or less than the rating are\n     assigned a color depending on the rating. Using the following criteria:\n  \n          1-2 stars: red\n          3 stars  : yellow\n          4-5 stars: green \n    */\n   if(this.isAboveRating(index)){\n     return COLORS.GREY;\n   }\n   switch( this.rating){\n     case 1:\n     case 2:\n       return COLORS.RED;\n     case 3:\n       return COLORS.YELLOW;\n     case 4:\n     case 5:\n       return COLORS.GREEN;\n     default:\n       return COLORS.GREY\n   }\n  }\n\n  isAboveRating(index:number): boolean{\n    return index>this.rating\n  }\n\n\n}","export default \"<div>\\n  <ion-icon size=\\\"large\\\" name=\\\"star\\\" *ngFor=\\\"let num of [1,2,3,4,5]\\\"\\n    (click)=\\\"rate(num)\\\" [ngStyle]=\\\"{'color':getColor(num)}\\\">\\n  </ion-icon>\\n</div>\\n\\n\";"]}
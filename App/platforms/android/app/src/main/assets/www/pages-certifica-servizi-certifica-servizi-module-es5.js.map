{"version":3,"sources":["webpack:///src/app/pages/certifica-servizi/certifica-servizi-routing.module.ts","webpack:///src/app/pages/certifica-servizi/certifica-servizi.page.html","webpack:///src/app/pages/certifica-servizi/certifica-servizi.page.scss","webpack:///src/app/pages/certifica-servizi/certifica-servizi.page.ts","webpack:///src/app/pages/certifica-servizi/certifica-servizi.module.ts"],"names":["routes","path","component","CertificaServiziPageRoutingModule","imports","forChild","exports","CertificaServiziPage","request","utilities","page","psize","servizi","getServizi","add","get","httpParam","handler","result","forEach","element","t","push","error","err","alertError","event","target","complete","item","confirmAlert","header","message","handlerYes","put","id","simplyAlert","operation","selector","template","CertificaServiziPageModule","declarations"],"mappings":"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","file":"pages-certifica-servizi-certifica-servizi-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CertificaServiziPage } from './certifica-servizi.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CertificaServiziPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CertificaServiziPageRoutingModule {}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button autoHide=\\\"false\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n        <ion-text>Richieste</ion-text>\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n    <ion-card style=\\\"background-color:rgb(29, 39, 61)\\\" *ngIf=\\\"servizi?.length==0\\\">\\n      <ion-card-header>\\n        <ion-card-subtitle>\\n          <div class=\\\"ion-text-center\\\">\\n            Attenzione!\\n          </div>\\n        </ion-card-subtitle>\\n        <ion-card-content>\\n          Attualmente non sono presenti richieste di certificazione di servizi offerti alla comunità.\\n        </ion-card-content>\\n      </ion-card-header>\\n    </ion-card>\\n\\n    <ion-card *ngFor=\\\"let s of servizi\\\">\\n\\n\\n\\n      <div id=\\\"content\\\"  *ngIf=\\\"s.richiestaBisogno==1\\\">\\n        <ion-row>\\n          <ion-col col-6 class=\\\"ion-no-padding\\\">\\n            <ion-item>\\n              <ion-label style=\\\"text-align: center;\\\">Prima</ion-label>\\n            </ion-item>\\n            <ion-img src=\\\"{{ s.imgPrima }}\\\"></ion-img>\\n          </ion-col>\\n          <ion-col col-6 class=\\\"ion-no-padding\\\">\\n            <ion-item>\\n              <ion-label style=\\\"text-align: center;\\\">Dopo</ion-label>\\n            </ion-item>\\n            <ion-img src=\\\"{{ s.img }}\\\"></ion-img>\\n          </ion-col>\\n        </ion-row>\\n        <ion-card-header>\\n          <ion-card-subtitle>Servizio eseguito da {{s.nome}} {{s.cognome}} <br> in data {{s.data}} alle ore {{s.orario}}</ion-card-subtitle>\\n          <ion-card-title>Bisogno: {{s.nomeBisogno}}</ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n          <p>\\n            Descrizione bisogno: <br> {{s.descrizioneBisogno}}\\n          </p>\\n          <p>\\n            Messaggio del servizio: <br> {{s.messaggio}}\\n          </p>\\n        </ion-card-content>\\n      </div>\\n\\n      <div id=\\\"content\\\"  *ngIf=\\\"s.richiestaBisogno==0\\\">\\n        <ion-img src=\\\"{{ s.img }}\\\"></ion-img>\\n        <ion-card-header>\\n          <ion-card-subtitle>Servizio eseguito da {{s.nome}} {{s.cognome}} <br> in data {{s.data}} alle ore {{s.orario}}</ion-card-subtitle>\\n        </ion-card-header>\\n        <ion-card-content>\\n          {{s.messaggio}}\\n          \\n        </ion-card-content>\\n      </div>\\n\\n        <ion-item (click)=\\\"accept(s)\\\">\\n          <ion-icon name=\\\"checkmark\\\" slot=\\\"start\\\"></ion-icon>\\n          <ion-label>Certifica avvenuto servizio</ion-label>\\n        </ion-item>\\n\\n        <ion-item (click)=\\\"refuse(s)\\\">\\n          <ion-icon name=\\\"close\\\" slot=\\\"start\\\"></ion-icon>\\n          <ion-label>Rifiuta certificazione</ion-label>\\n        </ion-item>\\n    </ion-card>\\n\\n\\n    <ion-infinite-scroll threshold=\\\"100px\\\" (ionInfinite)=\\\"loadmore($event)\\\">\\n      <ion-infinite-scroll-content loadingSpinner=\\\"bubbles\\\" loadingText=\\\"Caricamento...\\\">\\n      </ion-infinite-scroll-content>\\n    </ion-infinite-scroll>\\n  </ion-list>\\n</ion-content>\\n\";","export default \"ion-img {\\n  height: 25vh;\\n  width: auto;\\n  margin: auto;\\n  display: block;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NlcnRpZmljYS1zZXJ2aXppLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNJLFlBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGNBQUE7QUFBSiIsImZpbGUiOiJjZXJ0aWZpY2Etc2Vydml6aS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbmlvbi1pbWd7XG4gICAgaGVpZ2h0OiAyNXZoO1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIG1hcmdpbjogYXV0bztcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBcbn0iXX0= */\";","import { Component } from '@angular/core';\nimport { RequestService } from 'src/app/services/request.service';\nimport { UtilitiesService } from 'src/app/services/utilities.service';\n\n@Component({\n  selector: 'app-certifica-servizi',\n  templateUrl: './certifica-servizi.page.html',\n  styleUrls: ['./certifica-servizi.page.scss'],\n})\nexport class CertificaServiziPage {\n  \n  page:number = 0;\n  psize:number = 3;\n  servizi: any[] =[];\n\n  constructor(private request: RequestService, private utilities: UtilitiesService) { \n    this.getServizi()\n  }\n\n  getServizi(add=()=>{}){\n    this.request.get({\n      path:\"/services/community\",\n\n      httpParam:{\n        \"_page\": this.page,\n        \"_psize\": this.psize\n      },\n\n      handler:(result) => {\n\n        result[\"_msg\"].forEach(element => {\n          element[\"img\"]='data:image/jpeg;base64,'+element[\"img\"]\n          element[\"imgPrima\"]='data:image/jpeg;base64,'+element[\"imgPrima\"]\n        });\n\n        for (const t of result[\"_msg\"]) {\n          this.servizi.push(t);\n        };\n        add()\n      },\n\n      error:(err)  => {\n        this.utilities.alertError({})\n      }\n    })\n  }\n\n  loadmore(event) {\n    this.page++\n    this.getServizi(event.target.complete())\n  }\n\n  accept(item){\n    this.utilities.confirmAlert({\n\n      header:\"Attenzione!\",\n      message:\"Vuoi certificare questo servizio offerto alla comunità?\",\n      handlerYes:()=>{\n        this.request.put({\n          path:\"/services/community/\"+item.id,\n\n          handler:()=>{\n            this.utilities.simplyAlert({\n              header: \"Operazione effettuata\",\n              message:\"Servizio certificato correttamente!\",\n              operation:()=>{\n                this.page=0;\n                this.getServizi()\n              },\n            })\n          },\n\n          error:()=>{\n            this.utilities.alertError({})\n          }\n        })\n      }\n    })\n\n  }\n\n  refuse(item){\n    this.utilities.confirmAlert({\n\n      header:\"Attenzione!\",\n      message:      \"Vuoi rifiutare di certificare questo servizio offerto alla comunità?\",\n      handlerYes:()=>{\n        this.request.delete({\n          path:\"/services/community/\"+item.id,\n\n          handler:()=>{\n            this.utilities.simplyAlert({\n              header: \"Attenzione\",\n              message:\"Il servizio è stato rifiutato\",\n              operation:()=>{\n                this.page=0;\n                this.getServizi()\n              },\n            })\n          },\n\n          error:()=>{\n            this.utilities.alertError({})\n          }\n        })\n      }\n    })\n  \n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CertificaServiziPageRoutingModule } from './certifica-servizi-routing.module';\n\nimport { CertificaServiziPage } from './certifica-servizi.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CertificaServiziPageRoutingModule\n  ],\n  declarations: [CertificaServiziPage]\n})\nexport class CertificaServiziPageModule {}\n"]}
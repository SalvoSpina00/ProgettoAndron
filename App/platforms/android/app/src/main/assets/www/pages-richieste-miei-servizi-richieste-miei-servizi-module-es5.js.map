{"version":3,"sources":["webpack:///src/app/pages/richieste-miei-servizi/richieste-miei-servizi.page.scss","webpack:///src/app/pages/richieste-miei-servizi/richieste-miei-servizi.page.ts","webpack:///src/app/pages/richieste-miei-servizi/richieste-miei-servizi.module.ts","webpack:///src/app/pages/richieste-miei-servizi/richieste-miei-servizi-routing.module.ts","webpack:///src/app/pages/richieste-miei-servizi/richieste-miei-servizi.page.html"],"names":["RichiesteMieiServiziPage","router","request","utilities","searchmyRichiesteTODO","get","path","handler","results","myRichiesteTODO","error","alertError","id","stato","console","log","msg","confirmAlert","handlerYes","put","data","_stato","simplyAlert","operation","header","message","item","tipo","sagnalazioneEsponente","navigate","JSON","stringify","selector","template","RichiesteMieiServiziPageModule","imports","declarations","routes","component","RichiesteMieiServiziPageRoutingModule","forChild","exports"],"mappings":"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","file":"pages-richieste-miei-servizi-richieste-miei-servizi-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyaWNoaWVzdGUtbWllaS1zZXJ2aXppLnBhZ2Uuc2NzcyJ9 */\";","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RequestService } from 'src/app/services/request.service';\nimport { UtilitiesService } from 'src/app/services/utilities.service';\n\n@Component({\n  selector: 'app-richieste-miei-servizi',\n  templateUrl: './richieste-miei-servizi.page.html',\n  styleUrls: ['./richieste-miei-servizi.page.scss'],\n})\nexport class RichiesteMieiServiziPage {\n\n\n  myRichiesteTODO: any\n  msg: string;\n  \n  constructor(private router : Router, private request : RequestService, private utilities: UtilitiesService) { }\n\n  ionViewWillEnter() {\n    this.searchmyRichiesteTODO();\n  }\n  \n  searchmyRichiesteTODO() {\n\n    this.request.get({\n      path:\"/services/mine/requests\",\n\n      handler:(results)=>{\n        this.myRichiesteTODO = results[\"_msg\"];\n      },\n      error:()=>{\n        this.utilities.alertError({})\n      }\n    })\n    \n  }\n\n  setStato(id:number ,stato:string){\n    console.log(stato)\n    if (stato == \"rifiutato\") {\n      this.msg = \"Vuoi rifiutare questo servizio?\"\n    }\n    if (stato == \"accettato\") {\n      this.msg = \"Vuoi accettare questo servizio?\"\n    }\n    if (stato == \"eseguito\") {\n      this.msg = \"Hai davvero eseguito questo servizio?\"\n    }\n    if (stato == \"concluso\"){\n      this.msg =\"Confermi di aver ricevuto la transazione?\"\n    }\n    \n    this.utilities.confirmAlert({\n      \n      handlerYes:()=>{\n        this.request.put({\n          path:\"/requests/mine/\"+id,\n          data:{\n            _stato:stato\n          },\n          handler:(results)=>{\n            this.utilities.simplyAlert({\n              operation:()=>{this.searchmyRichiesteTODO()},\n              header:\"Operazione Effettuata\",\n              message: \"L'operazione e' stata eseguita con successo\"\n            })\n          },\n          error: (error)=>{\n            this.utilities.alertError({})\n          }\n        })\n        \n      },\n      header:\"Attenzione\",\n      message:this.msg\n\n    })\n  }\n\n  segnala(item: any, tipo: string) {\n\n    if (item.sagnalazioneEsponente) {\n      this.utilities.simplyAlert({\n        header:\"Attenzione\", \n        message:\"Hai gia' inviato una segnalazione per questo prodotto! Verrai contattato presto da qualcuno del nostro team.\"\n      })\n    }\n    else {\n      this.router.navigate([\"/segnalazione\", { \"item\": JSON.stringify(item), \"tipo\": tipo }]);\n    }\n    \n  }\n\n  elimina(id:number){\n    this.utilities.confirmAlert({\n      header:\"Attenzione\",\n      message:\"Vuoi davvero eliminare questa richiesta? Non sarÃ  possibile annullare questa operazione.\",\n      handlerYes:()=>{\n        \n        this.request.delete({\n          path:\"/requests/mine/\"+id,\n          handler:()=>{\n            this.utilities.simplyAlert({\n              operation:()=>{this.searchmyRichiesteTODO()},\n              header:\"Operazione effettuata\",\n              message:\"Richiesta eliminata.\"\n            })\n          },\n          error:()=>{\n            this.utilities.alertError({})\n          }\n        })\n\n      }\n    })\n  \n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RichiesteMieiServiziPageRoutingModule } from './richieste-miei-servizi-routing.module';\n\nimport { RichiesteMieiServiziPage } from './richieste-miei-servizi.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RichiesteMieiServiziPageRoutingModule\n  ],\n  declarations: [RichiesteMieiServiziPage]\n})\nexport class RichiesteMieiServiziPageModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RichiesteMieiServiziPage } from './richieste-miei-servizi.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RichiesteMieiServiziPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RichiesteMieiServiziPageRoutingModule {}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>\\n      Richieste di Servizi\\n    </ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button autoHide=\\\"false\\\" style=\\\"color: white\\\"></ion-menu-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n\\n<ion-content>\\n  <ion-list>\\n    <ion-card style=\\\"background-color:rgb(29, 39, 61)\\\" *ngIf=\\\"this.myRichiesteTODO?.length==0\\\">\\n      <ion-card-header>\\n        <ion-card-subtitle>\\n          <div class=\\\"ion-text-center\\\">\\n            Nessuna richiesta di servizi da svolgere!\\n          </div>\\n        </ion-card-subtitle>\\n      </ion-card-header>\\n    </ion-card>\\n    <ion-card style=\\\"background-color: rgb(29, 39, 61);\\\" *ngFor=\\\"let item of myRichiesteTODO\\\">\\n      \\n      <ion-card-content>\\n        <ion-card-subtitle style=\\\"font-size:10px\\\" class=\\\"ion-text-wrap\\\">\\n          <ion-grid>\\n            <ion-row>\\n              <ion-col>\\n                <div>\\n                  Da:\\n                </div>\\n              </ion-col>\\n              <ion-col size=\\\"8\\\">\\n                <div class=\\\"ion-text-center\\\">\\n                  {{item.nome}} {{item.cognome}}\\n                </div>\\n              </ion-col>\\n            </ion-row>\\n          </ion-grid>\\n\\n        </ion-card-subtitle>\\n        <ion-card-title color=\\\"black\\\" lines=\\\"none\\\" style=\\\"font-size:20px\\\" class=\\\"ion-text-center\\\" class=\\\"ion-text-wrap\\\">{{item.nomeServizio}}</ion-card-title>\\n\\n      \\n        <ion-grid>\\n          <ion-row>\\n            <div>\\n              {{item.messaggio}}\\n            </div>\\n          </ion-row>\\n        \\n          <ion-row >\\n            <ion-col style=\\\"color: tomato;\\\" class=\\\"ion-text-center\\\">\\n                Data:\\n            </ion-col>\\n          </ion-row>\\n          <ion-row>\\n                La richiesta Ã¨ prevista per giorno {{item.data}} alle ore {{item.orario}} per {{item.ore}} Ore.\\n          </ion-row>\\n\\n   \\n          <ion-row>\\n            <ion-col><div class=\\\"ion-text-center\\\"  style=\\\"color: tomato;\\\">Contatti</div></ion-col>\\n          </ion-row>\\n          <ion-row>\\n            <ion-col>\\n              <div  style=\\\"color: tomato;\\\">\\n                telefono:\\n              </div>\\n            </ion-col>\\n            <ion-col>\\n              <div>\\n                {{item.tel}}\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n          \\n          <ion-row>\\n            <ion-col>\\n              <div  style=\\\"color: tomato;\\\" class=\\\"ion-text-center\\\">\\n                email:\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n          <ion-row>\\n            <ion-col>\\n              <div>\\n                {{item.email}}\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n\\n          <ion-row *ngIf=\\\"item.stato=='attesa'\\\">\\n            <ion-col>\\n              <div class=\\\"ion-text-center\\\">\\n                <ion-button size=\\\"small\\\" expand=\\\"block\\\"  (click)=\\\"setStato(item.id,'rifiutato')\\\">\\n                  Rifiuta\\n                </ion-button>\\n              </div>\\n            </ion-col>\\n            <ion-col>\\n              <div class=\\\"ion-text-center\\\">\\n                <ion-button size=\\\"small\\\" expand=\\\"block\\\" (click)=\\\"setStato(item.id,'accettato')\\\">\\n                  Accetta\\n                </ion-button>\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n\\n          <ion-row *ngIf=\\\"item.stato=='accettato'\\\">\\n            <ion-col>\\n              <div class=\\\"ion-text-center\\\">\\n                <ion-button size=\\\"small\\\" expand=\\\"block\\\" (click)=\\\"elimina(item.id)\\\">\\n                  Elimina\\n                </ion-button>\\n              </div>\\n            </ion-col>\\n            <ion-col>\\n              <div class=\\\"ion-text-center\\\">\\n                <ion-button size=\\\"small\\\" expand=\\\"block\\\" (click)=\\\"setStato(item.id,'eseguito')\\\">\\n                  Eseguito\\n                </ion-button>\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n          \\n          <ion-row *ngIf=\\\"item.stato=='eseguito'\\\">\\n            <ion-col>\\n              <div>\\n                In attesa di conferma. Una volta confermato riceverai gli Andron sul tuo portafoglio\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n\\n          <ion-row *ngIf=\\\"item.stato=='eseguito'\\\">\\n            <ion-col>\\n              <div>\\n                <ion-button size=\\\"small\\\" expand=\\\"block\\\" (click)=\\\"segnala(item,'servizio',0)\\\">\\n                  Segnala\\n                </ion-button>\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n\\n          <ion-row *ngIf=\\\"item.stato=='confermato'\\\">\\n            <ion-col>\\n              <div>\\n                Transazione effettuata\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n          <ion-row *ngIf=\\\"item.stato=='confermato'\\\">\\n            <ion-col>\\n              <div class=\\\"ion-text-center\\\">\\n                <ion-button size=\\\"small\\\" expand=\\\"block\\\" (click)=\\\"setStato(item.id,'concluso')\\\">\\n                  Concludi\\n                </ion-button>\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n      \\n      </ion-card-content>\\n    </ion-card>\\n    \\n  </ion-list>\\n\\n</ion-content>\\n\";"]}
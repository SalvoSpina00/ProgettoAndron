{"version":3,"sources":["webpack:///src/app/pages/servizi-collettivita/servizi-collettivita.page.ts","webpack:///src/app/pages/servizi-collettivita/servizi-collettivita.page.html","webpack:///src/app/pages/servizi-collettivita/servizi-collettivita-routing.module.ts","webpack:///src/app/pages/servizi-collettivita/servizi-collettivita.page.scss","webpack:///src/app/pages/servizi-collettivita/servizi-collettivita.module.ts"],"names":["ServiziCollettivitaPage","plugin","route","navCtrl","request","utilities","formBuilder","ServizioCollettivitaForm","group","description","required","maxLength","minLength","validatorNotEmpty","data","ets","bisogno","bisognoSegnalato","errorMessages","type","message","imgSrc","img","setValue","handler","navigateForward","get","path","resp","enti","error","alertError","httpParam","_all","_page","_psize","bisogni","idBisognoEsterno","JSON","parse","snapshot","paramMap","value","errore","imgSend","post","simplyAlert","header","operation","$event","chooseIm","selector","template","routes","component","ServiziCollettivitaPageRoutingModule","imports","forChild","exports","ServiziCollettivitaPageModule","declarations"],"mappings":"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","file":"pages-servizi-collettivita-servizi-collettivita-module-es5.js","sourcesContent":["import { Component } from '@angular/core';\nimport { NavController } from '@ionic/angular';\nimport { ActivatedRoute, } from '@angular/router';\nimport { UtilitiesService } from 'src/app/services/utilities.service';\nimport { RequestService } from 'src/app/services/request.service';\nimport { PluginService } from 'src/app/services/plugin.service';\nimport { AbstractControl, FormBuilder, Validators } from '@angular/forms'\n\n@Component({\n  selector: 'app-servizi-collettivita',\n  templateUrl: './servizi-collettivita.page.html',\n  styleUrls: ['./servizi-collettivita.page.scss'],\n})\n\n\nexport class ServiziCollettivitaPage{\n\n\n  get ets(){\n    return this.ServizioCollettivitaForm.get(\"ets\")\n  }\n\n  get bisogno(){\n    return this.ServizioCollettivitaForm.get(\"bisogno\")\n  }\n\n  get bisognoSegnalato(){\n    return this.ServizioCollettivitaForm.get(\"bisognoSegnalato\")\n  }\n\n  get description(){\n    return this.ServizioCollettivitaForm.get(\"description\")\n  }\n\n  get data(){\n    return this.ServizioCollettivitaForm.get(\"data\")\n  }\n\n\n  ServizioCollettivitaForm = this.formBuilder.group({\n    description: ['', [Validators.required, Validators.maxLength(500), Validators.minLength(5), this.utilities.validatorNotEmpty]],\n    data: ['', [Validators.required]],\n    ets: ['', [Validators.required]],\n    bisogno: [''],\n    bisognoSegnalato : [''],\n  })\n  \n  public errorMessages={\n    description: [\n      { type: \"required\",  message: \"Inserisci una descrizione\"},\n      { type: \"maxLength\",  message: \"Minimo 5 caratteri\"},\n      { type: \"minLength\",  message: \"Massimo 500 caratteri\"},\n      \n\n    ],\n    data: [\n      { type: \"required\",  message: \"Inserisci la data di esecuzione del servizio\"},\n    ],\n    ets: [\n      { type: \"required\",  message: \"Seleziona l'ets per la certificazione\"},\n    ],\n  }\n\n  imgSrc:any = this.utilities.img;\n  imgSend:any;\n\n  idBisognoEsterno: string;\n  enti : any;\n  bisogni : any;\n  errore:string;\n\n\n  constructor(private plugin: PluginService,private route : ActivatedRoute,private navCtrl : NavController, private request: RequestService, private utilities : UtilitiesService, private formBuilder: FormBuilder){\n    this.imgSrc= this.utilities.img\n    this.bisognoSegnalato.setValue(false)\n    let handler= () => {\n      this.navCtrl.navigateForward(\"/home\");\n    }\n\n    this.request.get({\n      path:\"/services/community/ets\",\n      handler:(resp) =>{\n        this.enti =resp[\"_msg\"]\n      },\n      error: () => {\n        this.utilities.alertError({handler:handler})\n      }\n    })\n\n    this.request.get({\n      path:\"/needs\",\n      httpParam:{\n        _all:\"True\",\n        _page:\"\",\n        _psize:\"\"\n      },\n      handler:(resp) =>{\n        this.bisogni = resp[\"_msg\"]\n        this.idBisognoEsterno= JSON.parse(this.route.snapshot.paramMap.get(\"bisogno\"))\n        if (this.idBisognoEsterno!=null){\n          this.bisognoSegnalato.setValue(true)\n        }\n      },\n      error: () => {\n        this.utilities.alertError({handler:handler})\n      }\n    })\n\n  }\n\n  public submit(){\n    if (this.ServizioCollettivitaForm.value.bisognoSegnalato && this.ServizioCollettivitaForm.value.bisogno==\"\"){\n      this.errore=\"Inserisci il bisogno che hai soddisfatto\"\n      return;\n    }\n    if (this.imgSend == null){\n      this.errore=\"Inserisci un allegato\"\n      return \n    }\n    let data = {\n      \"msg\": this.ServizioCollettivitaForm.value.description,\n      \"date\": this.ServizioCollettivitaForm.value.data,\n      \"bisognoSegnalato\": this.ServizioCollettivitaForm.value.bisognoSegnalato,\n      \"idBisogno\" : this.ServizioCollettivitaForm.value.bisogno,\n      \"idEnte\": this.ServizioCollettivitaForm.value.ets,\n      \"foto\" : this.imgSend\n    }\n    let handler= () => {\n      this.navCtrl.navigateForward(\"/home\");\n    }\n\n    this.request.post({\n      path:\"/services/community\",\n      data: data,\n      handler: () => {\n        this.utilities.simplyAlert({\n          header:\"Operazione effettuata\",\n          message: \"Grazie per il tuo contributo!\",\n          operation:handler\n        })\n      },\n      error : ()=>{\n        this.utilities.alertError({\n          handler:handler\n        })\n      }\n    })\n  }\n\n  chooseImage($event=null){\n    this.plugin.chooseIm(\n      $event,\n      (img)=>{\n        this.imgSrc =  'data:image/jpeg;base64,' + img;\n        this.imgSend = img;\n      }\n    )\n  }\n\n  \n\n\n  \n}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Comunità</ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button autoHide=\\\"false\\\"></ion-menu-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n\\n<ion-content>\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-card-title>\\n        <div class=\\\"ion-text-center\\\">\\n          Benvenuto!\\n        </div>\\n      </ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      Qui potrai inserire eventuali servizi offerti alla comunita'. Compilare tutti i campi per mandare la richiesta, una volta verificata verranno caricati dei token sul tuo account.\\n    </ion-card-content>\\n  </ion-card>\\n\\n\\n  <ion-content id=\\\"myContent\\\" class=\\\"ion-padding ion-text-center\\\">\\n    <form [formGroup]=\\\"ServizioCollettivitaForm\\\" (ngSubmit)=\\\"submit()\\\">\\n      <ion-list>\\n\\n        <ion-img src=\\\"{{ imgSrc }}\\\"></ion-img>\\n        <ion-button *ngIf=\\\"mobile\\\"  id=\\\"myButtonYellow\\\" expand=\\\"full\\\" (click)=\\\"chooseImage()\\\">Inserisci foto</ion-button>\\n        <ion-button *ngIf=\\\"!mobile\\\" id=\\\"myButtonYellow\\\" expand=\\\"full\\\" (click)=\\\"f.click()\\\">Inserisci foto</ion-button>\\n        <input  class=\\\"ion-hide\\\" #f type=\\\"file\\\" (change)=\\\"chooseImage($event)\\\" id=\\\"file-input\\\" accept=\\\"image/png, image/jpeg\\\">\\n\\n        <ion-item> \\n          <ion-label position=\\\"floating\\\">Descrivi il tuo servizio</ion-label>\\n          <ion-input formControlName=\\\"description\\\" autocapitalize inputmode=\\\"text\\\"></ion-input>\\n        </ion-item>\\n        <div *ngFor=\\\"let error of errorMessages.description\\\">\\n          <ng-container *ngIf=\\\"description.hasError(error.type) && (description.dirty || description.touched)\\\">\\n            <small class=\\\"error-message\\\">{{error.message}}</small>\\n          </ng-container>\\n        </div>\\n\\n        <ion-item> <!--!data-->\\n          <ion-label>Data del servizio offerto</ion-label>\\n          <ion-input formControlName=\\\"data\\\" autocapitalize type=\\\"date\\\" inputmode=\\\"text\\\"></ion-input>\\n        </ion-item>\\n        <div *ngFor=\\\"let error of errorMessages.data\\\">\\n          <ng-container *ngIf=\\\"data.hasError(error.type) && (data.dirty || data.touched)\\\">\\n            <small class=\\\"error-message\\\">{{error.message}}</small>\\n          </ng-container>\\n        </div>\\n\\n        <ion-item> \\n          <ion-label position=\\\"floating\\\">ETS Certificatore</ion-label>\\n          <ion-select formControlName=\\\"ets\\\" cancelText=\\\"Esci\\\" okText=\\\"Scegli\\\">\\n            <ion-select-option  *ngFor=\\\"let i of enti\\\" value={{i.id}}>{{i.nome}}</ion-select-option>\\n          </ion-select>\\n        </ion-item>\\n        <div *ngFor=\\\"let error of errorMessages.ets\\\">\\n          <ng-container *ngIf=\\\"ets.hasError(error.type) && (ets.dirty || ets.touched)\\\">\\n            <small class=\\\"error-message\\\">{{error.message}}</small>\\n          </ng-container>\\n        </div>\\n\\n        <ion-item>\\n          <ion-label>E' un bisogno segnalato</ion-label>\\n          <ion-toggle formControlName=\\\"bisognoSegnalato\\\"></ion-toggle>\\n        </ion-item>\\n\\n        <ion-item>\\n          <ion-label>Bisogni</ion-label>\\n          <ion-select formControlName=\\\"bisogno\\\" value=\\\"{{idBisognoEsterno}}\\\" [disabled]=\\\"!bisognoSegnalato.value\\\" cancelText=\\\"Esci\\\" okText=\\\"Scegli\\\">\\n            <ion-select-option *ngFor=\\\"let i of bisogni\\\" value={{i?.id}}>{{i?.nome}}</ion-select-option>\\n          </ion-select>\\n        </ion-item>\\n\\n        <p class=\\\"error-message\\\">{{this.errore}}</p>\\n        <ion-button [disabled]=\\\"!ServizioCollettivitaForm.valid\\\" type=\\\"submit\\\" expand=\\\"block\\\">\\n          Invia\\n        </ion-button>\\n    </ion-list>\\n  </form>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ServiziCollettivitaPage } from './servizi-collettivita.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ServiziCollettivitaPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ServiziCollettivitaPageRoutingModule {}\n","export default \"ion-img {\\n  height: 30vh;\\n  width: auto;\\n  margin: auto;\\n  display: block;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NlcnZpemktY29sbGV0dGl2aXRhLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGNBQUE7QUFDSiIsImZpbGUiOiJzZXJ2aXppLWNvbGxldHRpdml0YS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24taW1ne1xuICAgIGhlaWdodDogMzB2aDtcbiAgICB3aWR0aDogYXV0bztcbiAgICBtYXJnaW46IGF1dG87XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgXG59XG4iXX0= */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ServiziCollettivitaPageRoutingModule } from './servizi-collettivita-routing.module';\n\nimport { ServiziCollettivitaPage } from './servizi-collettivita.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    ServiziCollettivitaPageRoutingModule\n  ],\n  declarations: [ServiziCollettivitaPage]\n})\nexport class ServiziCollettivitaPageModule {}\n"]}